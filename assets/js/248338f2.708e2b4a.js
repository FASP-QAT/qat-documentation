"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[59363],{66799:t=>{t.exports=JSON.parse('{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.1","info":{"title":"Quantification and Analytics Tool","version":"2.12.0","description":"API\'s to access the QAT Server","contact":{"name":"FASP team","url":"https://www.quantificationanalytics.org","email":"HSS_FASP_HQ@ghsc-psm.org"},"license":{"name":"Apache 2.0","url":"https://foo.bar"}},"servers":[{"url":"https://www.quantificationanalytics.org","description":"Production server for QAT","variables":{}}],"paths":{"/api/budget/":{"get":{"tags":["budget"],"summary":"Get Budget list","description":"Returns the complete list of Budgets List<Budget>","operationId":"getBudgetList","responses":{"200":{"description":"Returns the Budget list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Budget list","content":{"text/json":{}}}}},"put":{"tags":["budget"],"summary":"Update Budget","description":"API used to update a Budget","operationId":"updateBudget","parameters":[{"name":"budget","description":"The Budget object that you want to update"}],"requestBody":{"description":"The Budget object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Budget"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to add the Budget","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["budget"],"summary":"Add Budget","description":"API used to add a Budget to the Realm","operationId":"addBudget","requestBody":{"description":"The Budget object that you want to add to the Realm","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Budget"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to add the Budget","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/budget/{budgetId}":{"get":{"tags":["budget"],"summary":"Get Budget for a BudgetId","description":"API used to get the Budget for a specific BudgetId","operationId":"getBudgetById","parameters":[{"name":"budgetId","in":"path","description":"BudgetId that you want to the Budget for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Budget","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Budget","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the BudgetId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Budget","content":{"text/json":{}}}}}},"/api/budget/programIds":{"post":{"tags":["budget"],"summary":"Get Budget list for Program Ids","description":"API used to get the Budget list for a list of Program Ids","operationId":"getBudgetForProgramIds","requestBody":{"description":"List of Program Ids that you want to the Budgets for","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the Budget list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Budget list","content":{"text/json":{}}}}}},"/api/budget/realmId/{realmId}":{"get":{"tags":["budget"],"summary":"Get Budget for a Realm","description":"API used to get the Budget for a specific BudgetId","operationId":"getBudgetForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the List of Budgets for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the List of Budgets for that Realm","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Budget","content":{"text/json":{}}}}}},"/api/programData/{comparedVersionId}":{"put":{"tags":["commitRequest"],"summary":"Commit Request for Supply Plan","description":"API used Part 1 of the Commit Request for Supply Plan.","operationId":"putProgramData","parameters":[{"name":"comparedVersionId","in":"path","description":"comparedVersionId that you want to commit supply plan for","required":true,"schema":{"type":"integer","format":"int32"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProgramData"}}},"required":true},"responses":{"200":{"description":"Returns commitRequestId if commit is success","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the comparedVersionId specified does not exist","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if Request already exists OR Compared version is not latest","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the comparedVersionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the commit of supply plan","content":{"text/json":{}}}}}},"/api/datasetData/{comparedVersionId}":{"put":{"tags":["commitRequest"],"summary":"Commit Request for Datatse","description":"API used Part 1 of the Commit Request for Dataset.","operationId":"putDatasetData","parameters":[{"name":"comparedVersionId","in":"path","description":"comparedVersionId that you want to commit dataset for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns commitRequestId if commit is success","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the comparedVersionId specified does not exist","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if Request already exists OR Compared version is not latest","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the comparedVersionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the commit of dataset","content":{"text/json":{}}}}}},"/api/getCommitRequest/{requestStatus}":{"post":{"tags":["commitRequest"],"summary":"Get Commit Request list","description":"API used get supply plan commit request list .","operationId":"getProgramDataCommitRequest","parameters":[{"name":"requestStatus","in":"path","description":"requestStatus that you want to commit request list for","required":true,"schema":{"type":"integer","format":"int32"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommitRequestInput"}}},"required":true},"responses":{"200":{"description":"Returns supply plan commit request list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of commit request list","content":{"text/json":{}}}}}},"/api/sendNotification/{commitRequestId}":{"get":{"tags":["commitRequest"],"summary":"send notification for commit","description":"API used to send notification once commit is success.","operationId":"sendNotification","parameters":[{"name":"commitRequestId","in":"path","description":"commitRequestId that you want to send notofication for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns commit request list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of commit request object","content":{"text/json":{}}}}}},"/api/country/":{"get":{"tags":["country"],"summary":"Get active Country list","description":"API used to get the complete Country list. Will only return those Countries that are marked Active.","operationId":"getCountryList","responses":{"200":{"description":"Returns the Country list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Country list","content":{"text/json":{}}}}},"put":{"tags":["country"],"summary":"Update Country","description":"API used to update a Country","operationId":"updateCountry","requestBody":{"description":"The Country object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Country"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the CountryCode supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["country"],"summary":"Add Country","description":"API used to add a Country","operationId":"addCountry","requestBody":{"description":"The Country object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Country"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Country Code supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/country/{countryId}":{"get":{"tags":["country"],"summary":"Get Country for a CountryId","description":"API used to get the Country for a specific CountryId","operationId":"getCountryById","parameters":[{"name":"countryId","in":"path","description":"CountryId that you want to the Country for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Country","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the CountryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Country","content":{"text/json":{}}}}}},"/api/country/all":{"get":{"tags":["country"],"summary":"Get Country list","description":"API used to get the complete Country list.","operationId":"getCountryListAll","responses":{"200":{"description":"Returns the Country list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Country list","content":{"text/json":{}}}}}},"/api/currency/":{"get":{"tags":["currency"],"summary":"Get active Currency list","description":"API used to get the complete Currency list. Will only return those Currencies that are marked Active.","operationId":"getCurrency","responses":{"200":{"description":"Returns the Currency list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Currency list","content":{"text/json":{}}}}},"put":{"tags":["currency"],"summary":"Update Currency","description":"API used to update a Currency","operationId":"updateCurrency","requestBody":{"description":"The Currency object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Currency"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the CurrencyCode supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["currency"],"summary":"Add Currency","description":"API used to add a Currency","operationId":"addCurrency","requestBody":{"description":"The Currency object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Currency"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Currency Code supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/currency/{currencyId}":{"get":{"tags":["currency"],"summary":"Get Currency for a CurrencyId","description":"API used to get the Currency for a specific CurrencyId","operationId":"getCurrencyById","parameters":[{"name":"currencyId","in":"path","description":"CurrencyId that you want to the Currency for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Currency","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the CurrencyId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Currency","content":{"text/json":{}}}}}},"/api/currency/all":{"get":{"tags":["currency"],"summary":"Get Currency list","description":"API used to get the complete Currency list.","operationId":"getCurrencyListAll","responses":{"200":{"description":"Returns the Currency list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Currency list","content":{"text/json":{}}}}}},"/api/dashboard/application":{"get":{"tags":["dashboard"],"summary":"Application level dashboard","description":"API used to get data for application level dashboard","operationId":"applicationLevelDashboard","responses":{"200":{"description":"Returns a map of required data for application level dashboard","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dashboard/realmLevelDashboard":{"get":{"tags":["dashboard"],"summary":"Realm level dashboard","description":"API used to get data for realm level dashboard","operationId":"realmLevelDashboard","responses":{"200":{"description":"Returns a map of required data for realm level dashboard","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dashboard/supplyPlanReviewerLevelDashboard":{"get":{"tags":["dashboard"],"summary":"Supply plan reviewer level dashboard","description":"API used to get data for supply plan reviewer level dashboard","operationId":"supplyPlanReviewerLevelDashboard","responses":{"200":{"description":"Returns a map of required data for supply plan reviewer level dashboard","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dashboard/application/user":{"get":{"tags":["dashboard"],"summary":"Application level admin user list","description":"API used to get user list for application level admin","operationId":"applicationLevelDashboardUserList","responses":{"200":{"description":"Returns a list of users for application level admin","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dashboard/realmLevelDashboardUserList":{"get":{"tags":["dashboard"],"summary":"Realm level admin user list","description":"API used to get user list for realm level admin","operationId":"realmLevelDashboardUserList","responses":{"200":{"description":"Returns a list of users for realm level admin","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dataSource/":{"get":{"tags":["dataSource"],"summary":"Get active DataSource list","description":"API used to get the complete DataSource list. Will only return those DataSources that are marked Active.","operationId":"getDataSourceList","responses":{"200":{"description":"Returns the DataSource list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSource list","content":{"text/json":{}}}}},"put":{"tags":["dataSource"],"summary":"Update DataSource","description":"API used to update a DataSource","operationId":"updateDataSource","requestBody":{"description":"The DataSource object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataSource"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm or Program","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the DataSourceCode supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["dataSource"],"summary":"Add DataSource","description":"API used to add a DataSource","operationId":"addDataSource","requestBody":{"description":"The DataSource object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataSource"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm or Program","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the DataSource Code supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dataSource/{dataSourceId}":{"get":{"tags":["dataSource"],"summary":"Get DataSource for a DataSourceId","description":"API used to get the DataSource for a specific DataSourceId","operationId":"getDataSourceById","parameters":[{"name":"dataSourceId","in":"path","description":"DataSourceId that you want to the DataSource for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the DataSource","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm or Program","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the DataSourceId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSource","content":{"text/json":{}}}}}},"/api/dataSource/all":{"get":{"tags":["dataSource"],"summary":"Get DataSource list","description":"API used to get the complete DataSource list.","operationId":"getDataSourceListAll","responses":{"200":{"description":"Returns the DataSource list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSource list","content":{"text/json":{}}}}}},"/api/dataSource/realmId/{realmId}/programId/{programId}":{"get":{"tags":["dataSource"],"summary":"Get DataSource for RealmId and ProgramId","description":"API used to get the DataSource for a specific RealmId and ProgramId","operationId":"getDataSourceListForRealmIdProgramId","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the DataSource for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"programId","in":"path","description":"ProgramId that you want to the DataSource for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the DataSource","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm or Program","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the DataSourceId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSource","content":{"text/json":{}}}}}},"/api/dataSource/dataSourceTypeId/{dataSourceTypeId}":{"get":{"tags":["dataSource"],"summary":"Get DataSource for a DataSourceTypeId","description":"API used to get the DataSource for a specific DataSourceTypeId","operationId":"getDataSourceListForDataSourceTypeId","parameters":[{"name":"dataSourceTypeId","in":"path","description":"DataSourceTypeId that you want to the DataSource for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the DataSource","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the DataSourceTypeId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSource","content":{"text/json":{}}}}}},"/api/dataSourceType/":{"get":{"tags":["dataSourceType"],"summary":"Get active DataSourceType list","description":"API used to get the complete DataSourceType list. Will only return those DataSourceTypes that are marked Active.","operationId":"getDataSourceTypeList","responses":{"200":{"description":"Returns the DataSourceType list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSourceType list","content":{"text/json":{}}}}},"put":{"tags":["dataSourceType"],"summary":"Update DataSourceType","description":"API used to update a DataSourceType","operationId":"updateDataSourceType","requestBody":{"description":"The DataSourceType object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataSourceType"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the DataSourceId does not exist","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["dataSourceType"],"summary":"Add DataSourceType","description":"API used to add a DataSourceType","operationId":"addDataSourceType","requestBody":{"description":"The DataSourceType object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataSourceType"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dataSourceType/{dataSourceTypeId}":{"get":{"tags":["dataSourceType"],"summary":"Get DataSourceType for a DataSourceTypeId","description":"API used to get the DataSourceType for a specific DataSourceTypeId","operationId":"getDataSourceTypeById","parameters":[{"name":"dataSourceTypeId","in":"path","description":"DataSourceTypeId that you want to the DataSourceType for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the DataSourceType","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the DataSourceTypeId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSourceType","content":{"text/json":{}}}}}},"/api/dataSourceType/all":{"get":{"tags":["dataSourceType"],"summary":"Get DataSourceType list","description":"API used to get the complete DataSourceType list.","operationId":"getDataSourceTypeListAll","responses":{"200":{"description":"Returns the DataSourceType list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSourceType list","content":{"text/json":{}}}}}},"/api/dataSourceType/{realmId}":{"get":{"tags":["dataSourceType"],"summary":"Get DataSourceType for a realmId","description":"API used to get the DataSourceType for a specific realmId","operationId":"getDataSourceTypeListForRealmId","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the DataSourceType for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the DataSourceType","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of DataSourceType","content":{"text/json":{}}}}}},"/api/datasetData/programId/{programId}/versionId/{versionId}":{"get":{"tags":["dataset"],"summary":"Get dataset list for programId and versionId","description":"API used to get the dataset list for specific programId and versionId. ","operationId":"getDatasetData","parameters":[{"name":"programId","in":"path","description":"programId that you want to the dataset list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to the dataset list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the dataset list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the programId or versionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of dataset list","content":{"text/json":{}}}}}},"/api/datasetData":{"post":{"tags":["dataset"],"summary":"Get dataset list for multiple programId and versionId","description":"API used to get the dataset list for multiple programId and versionId. ","operationId":"getDatasetData_1","requestBody":{"description":"map of programVersionList that you want to the dataset list for","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProgramIdAndVersionId"}}}},"required":true},"responses":{"200":{"description":"Returns the dataset list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the programId or versionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of dataset list","content":{"text/json":{}}}}}},"/api/dataset":{"get":{"tags":["dataset"],"summary":"Get active dataset list","description":"API used to get the complete dataset list. Will only return those datasets that are marked Active.","operationId":"getDataset","responses":{"200":{"description":"Returns the dataset list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of dataset list","content":{"text/json":{}}}}},"put":{"tags":["dataset"],"summary":"Update dataset","description":"API used to update a dataset","operationId":"putDataset","requestBody":{"description":"The dataset object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Program"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the dataset object specified does not exist","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["datatset"],"summary":"Add datatset","description":"API used to add a datatset","operationId":"postDataset","requestBody":{"description":"The dataset object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Program"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the dataset object supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dataset/{programId}":{"get":{"tags":["dataset"],"summary":"Get dataset list for programId","description":"API used to get the dataset list for specific programId. ","operationId":"getDataset_1","parameters":[{"name":"programId","in":"path","description":"programId that you want to dataset list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the dataset list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the programId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of dataset list","content":{"text/json":{}}}}}},"/api/dataset/all":{"get":{"tags":["dataset"],"summary":"Get dataset list","description":"API used to get the complete dataset list. ","operationId":"getDatasetAll","responses":{"200":{"description":"Returns the dataset list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of dataset list","content":{"text/json":{}}}}}},"/api/dataset/realmId/{realmId}":{"get":{"tags":["dataset"],"summary":"Get dataset list for realm","description":"API used to get the dataset list for specific realm. ","operationId":"getDatasetForRealm","parameters":[{"name":"realmId","in":"path","description":"realmId that you want to dataset list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the dataset list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the realmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of dataset list","content":{"text/json":{}}}}}},"/api/planningUnit/programId/{programId}/versionId/{versionId}":{"get":{"tags":["dataset"],"summary":"Get planning unit list for programId and versionId","description":"API used to get the planning unit list for specific programId and versionId. ","operationId":"getPlanningUnitForDataset","parameters":[{"name":"programId","in":"path","description":"programId that you want to the planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to the planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the planning unit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the programId or versionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of planning unit list","content":{"text/json":{}}}}}},"/api/loadDataset":{"get":{"tags":["dataset"],"summary":"Load Datatse","description":"API used to load Dataset.","operationId":"getLoadDataset","responses":{"200":{"description":"Returns dataset to load","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retrival of dataset","content":{"text/json":{}}}}}},"/api/loadDataset/programId/{programId}/page/{page}":{"get":{"tags":["dataset"],"summary":"List five versions of program from given page number for specified programId","description":"API used to list five versions of dataset from given page number for specified programId","operationId":"getLoadDataset_1","parameters":[{"name":"programId","in":"path","description":"programId that you want to get dataset list for ","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"page","in":"path","description":"number that you want to get dataset list from","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a list of five versions of dataset","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dimension/":{"get":{"tags":["dimension"],"summary":"Get active Dimension list","description":"API used to get the complete Dimension list. Will only return those Dimensions that are marked Active.","operationId":"getDimension_1","responses":{"200":{"description":"Returns the Dimension list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Dimension list","content":{"text/json":{}}}}},"put":{"tags":["dimension"],"summary":"Update Dimension","description":"API used to update a Dimension","operationId":"updateDimension","requestBody":{"description":"The Dimension object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dimension"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Dimension supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["dimension"],"summary":"Add Dimension","description":"API used to add a Dimension","operationId":"addDimension","requestBody":{"description":"The Dimension object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dimension"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Dimension supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/dimension/{dimensionId}":{"get":{"tags":["dimension"],"summary":"Get Dimension for a DimensionId","description":"API used to get the Dimension for a specific DimensionId","operationId":"getDimension","parameters":[{"name":"dimensionId","in":"path","description":"DimensionId that you want to the Dimension for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Dimension","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the DimensionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Dimension","content":{"text/json":{}}}}}},"/api/dimension/all":{"get":{"tags":["dimension"],"summary":"Get Dimension list","description":"API used to get the complete Dimension list.","operationId":"getDimensionAll","responses":{"200":{"description":"Returns the Dimension list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Dimension list","content":{"text/json":{}}}}}},"/api/equivalencyUnit":{"get":{"tags":["equivalencyUnit"],"summary":"Get active EquivalencyUnit list","description":"API used to get the complete EquivalencyUnit list. Will only return those EquivalencyUnits that are marked Active.","operationId":"getEquivalencyUnitList","responses":{"200":{"description":"Returns the EquivalencyUnit list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of EquivalencyUnit list","content":{"text/json":{}}}}},"post":{"tags":["equivalencyUnit"],"summary":"Add or Update EquivalencyUnit","description":"API used to add or update EquivalencyUnit","operationId":"addAndUpadteEquivalencyUnit","requestBody":{"description":"The list of EquivalencyUnit objects that you want to add or update. If equivalencyUnitId is null or 0 then it is added if equivalencyUnitId is not null and non 0 it is updated","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/EquivalencyUnit"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if you do not have rights to add/update this object","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not acceptable","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/equivalencyUnit/mapping":{"get":{"tags":["equivalencyUnitMapping, equivalencyUnit"],"summary":"Get active EquivalencyUnitMapping list","description":"API used to get the complete EquivalencyUnitMapping list. Will only return those EquivalencyUnitMappings that are marked Active.","operationId":"getEquivalencyUnitMappingList","responses":{"200":{"description":"Returns the EquivalencyUnitMapping list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of EquivalencyUnitMapping list","content":{"text/json":{}}}}},"post":{"tags":["equivalencyUnitMapping, equivalencyUnit"],"summary":"Add or Update EquivalencyUnitMapping","description":"API used to add or update EquivalencyUnitMapping","operationId":"addAndUpadteEquivalencyUnitMapping","requestBody":{"description":"The list of EquivalencyUnitMapping objects that you want to add or update. If equivalencyUnitMappingId is null or 0 then it is added if equivalencyUnitMappingId is not null and non 0 it is updated","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/EquivalencyUnitMapping"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if you do not have rights to add/update this object","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not acceptable","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/equivalencyUnit/forecastingUnitId/{forecastingUnitId}/programId/{programId}":{"get":{"tags":["equivalencyUnitMapping, equivalencyUnit"],"summary":"Get list of EquivalencyUnitMapping","description":"API used to get the list of Equivalency Units Mapping based on a Program and a Forecasting Unit","operationId":"getEquivalencyUnitMappingForForecastingUnit","parameters":[{"name":"forecastingUnitId","in":"path","description":"The Forecasting Unit Id that you want the list of EUM for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"programId","in":"path","description":"The Program Id that you want the priority for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the EquivalencyUnitMapping list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if you do not have rights to the Program that you requested","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of EquivalencyUnitMapping list","content":{"text/json":{}}}}}},"/api/equivalencyUnit/all":{"get":{"tags":["equivalencyUnit"],"summary":"Get complete EquivalencyUnit list","description":"API used to get the complete EquivalencyUnit list.","operationId":"getEquivalencyUnitListAll","responses":{"200":{"description":"Returns the EquivalencyUnit list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of EquivalencyUnit list","content":{"text/json":{}}}}}},"/api/equivalencyUnit/mapping/all":{"get":{"tags":["equivalencyUnitMapping, equivalencyUnit"],"summary":"Get complete EquivalencyUnitMapping list","description":"API used to get the complete EquivalencyUnitMapping list.","operationId":"getEquivalencyUnitMappingListAll","responses":{"200":{"description":"Returns the EquivalencyUnitMapping list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of EquivalencyUnitMapping list","content":{"text/json":{}}}}}},"/file/{fileName}":{"get":{"tags":["file"],"summary":"Get file from Server","description":"Returns the byte stream of the file that was requested","operationId":"getFile","parameters":[{"name":"fileName","in":"path","description":"Name of file that the user wants to get from the Server","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the byte array of the file that was requested","content":{"application/octet-stream":{}}}}}},"/api/forecastMethod":{"get":{"tags":["forecastMethod"],"summary":"Get active ForecastMethod list","description":"API used to get the complete ForecastMethod list. Will only return those ForecastMethods that are marked Active.","operationId":"getForecastMethodList","responses":{"200":{"description":"Returns the ForecastMethod list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastMethod list","content":{"text/json":{}}}}},"post":{"tags":["forecastMethod"],"summary":"Add or Update ForecastMethod","description":"API used to add or update ForecastMethod","operationId":"addAndUpadteForecastMethod","requestBody":{"description":"The list of ForecastMethod objects that you want to add or update. If forecastMethodId is null or 0 then it is added if forecastMethodId is not null and non 0 it is updated","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ForecastMethod"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if you do not have rights to add/update this object","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not acceptable","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/forecastMethod/all":{"get":{"tags":["forecastMethod"],"summary":"Get complete ForecastMethod list","description":"API used to get the complete ForecastMethod list.","operationId":"getForecastMethodListAll","responses":{"200":{"description":"Returns the ForecastMethod list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastMethod list","content":{"text/json":{}}}}}},"/api/usageType":{"get":{"tags":["usageType"],"summary":"Get active UsageType list","description":"API used to get the complete UsageType list. Will only return those UsageTypes that are marked Active.","operationId":"getUsageTypeList","responses":{"200":{"description":"Returns the UsageType list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of UsageType list","content":{"text/json":{}}}}}},"/api/nodeType":{"get":{"tags":["nodeType"],"summary":"Get active NodeType list","description":"API used to get the complete NodeType list. Will only return those NodeTypes that are marked Active.","operationId":"getNodeTypeList","responses":{"200":{"description":"Returns the NodeType list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of NodeType list","content":{"text/json":{}}}}}},"/api/forecastMethodType":{"get":{"tags":["forecastMethodType"],"summary":"Get active ForecastMethodType list","description":"API used to get the complete ForecastMethodType list. Will only return those ForecastMethodTypes that are marked Active.","operationId":"getForecastMethodTypeList","responses":{"200":{"description":"Returns the ForecastMethodType list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastMethodType list","content":{"text/json":{}}}}}},"/api/forecastStats/arima":{"post":{"tags":["forecastingStatisctic"],"summary":"Get forecasting statistic data for arima","description":"API used to get forecasting statistic data for arima","operationId":"postArima","responses":{"200":{"description":"Returns a forecasting statistic data for arima","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the json specified is not valid","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/forecastStats/tes":{"post":{"tags":["forecastingStatisctic"],"summary":"Get forecasting statistic data for tes","description":"API used to get forecasting statistic data for tes","operationId":"postTes","responses":{"200":{"description":"Returns a forecasting statistic data for tes","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the json specified is not valid","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/forecastStats/regression":{"post":{"tags":["forecastingStatisctic"],"summary":"Get forecasting statistic data for regression","description":"API used to get forecasting statistic data for regression","operationId":"postRegression","responses":{"200":{"description":"Returns a forecasting statistic data for regression","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the json specified is not valid","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/forecastingUnit/":{"get":{"tags":["forecastingUnit"],"summary":"Get active ForecastingUnit list","description":"API used to get the complete ForecastingUnit list. Will only return those ForecastingUnits that are marked Active.","operationId":"getForecastingUnit","responses":{"200":{"description":"Returns the ForecastingUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastingUnit list","content":{"text/json":{}}}}},"put":{"tags":["forecastingUnit"],"summary":"Update ForecastingUnit","description":"API used to update a ForecastingUnit","operationId":"updateForecastingUnit","requestBody":{"description":"The ForecastingUnit object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForecastingUnit"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["forecastingUnit"],"summary":"Add ForecastingUnit","description":"API used to add a ForecastingUnit","operationId":"addForecastingUnit","requestBody":{"description":"The ForecastingUnit object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForecastingUnit"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/forecastingUnit/{forecastingUnitId}":{"get":{"tags":["forecastingUnit"],"summary":"Get ForecastingUnit for a ForecastingUnitId","description":"API used to get the ForecastingUnit for a specific ForecastingUnitId","operationId":"getForecastingUnitById","parameters":[{"name":"forecastingUnitId","in":"path","description":"ForecastingUnitId that you want to the ForecastingUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ForecastingUnit","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ForecastingUnitId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastingUnit","content":{"text/json":{}}}}}},"/api/forecastingUnit/all":{"get":{"tags":["forecastingUnit"],"summary":"Get ForecastingUnit list","description":"API used to get the complete ForecastingUnit list.","operationId":"getForecastingUnitAll","responses":{"200":{"description":"Returns the ForecastingUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastingUnit list","content":{"text/json":{}}}}}},"/api/forecastingUnit/realmId/{realmId}":{"get":{"tags":["forecastingUnit"],"summary":"Get ForecastingUnit for a RealmId","description":"API used to get all the ForecastingUnits for a specific RealmId","operationId":"getForecastingUnitForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the ForecastingUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ForecastingUnits list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastingUnit","content":{"text/json":{}}}}}},"/api/forecastingUnit/forecastingUnit/tracerCategorys":{"post":{"tags":["forecastingUnit"],"summary":"Get ForecastingUnit for a multiple tracer categories","description":"API used to get forecastingUnits for multiple tracer categories","operationId":"getForecastingUnitForTracerCategory","requestBody":{"description":"array of tracerCategoryIds that you want to the ForecastingUnit for","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the ForecastingUnits list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the tracerCategoryIds specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastingUnit","content":{"text/json":{}}}}}},"/api/forecastingUnit/forecastingUnit/tracerCategory/{tracerCategoryId}":{"get":{"tags":["forecastingUnit"],"summary":"Get ForecastingUnit for a tracer category","description":"API used to get forecastingUnits for a specific tracer category","operationId":"getForecastingUnitForTracerCategory_1","parameters":[{"name":"tracerCategoryId","in":"path","description":"TracerCategoryId that you want to the ForecastingUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ForecastingUnits list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the tracerCategoryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastingUnit","content":{"text/json":{}}}}}},"/api/forecastingUnit/forecastingUnit/programId/{programId}/versionId/{versionId}":{"get":{"tags":["forecastingUnit"],"summary":"Get forecasting unit for specific ProgramId and versionId","description":"API used to get the forecasting unit for a specific ProgramId and versionId","operationId":"getForecastingUnitForDataset","parameters":[{"name":"programId","in":"path","description":"programId that you want to the forecasting unit for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to the forecasting unit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ForecastingUnits list","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the programId or versionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastingUnits list","content":{"text/json":{}}}}}},"/api/fundingSource/{fundingSourceId}":{"get":{"tags":["fundingSource"],"summary":"Get FundingSource for a FundingSourceId","description":"API used to get the FundingSource for a specific FundingSourceId","operationId":"getFundingSource","parameters":[{"name":"fundingSourceId","in":"path","description":"FundingSourceId that you want to the FundingSource for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the FundingSource","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the FundingSourceId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of FundingSource","content":{"text/json":{}}}}}},"/api/fundingSource/":{"get":{"tags":["fundingSource"],"summary":"Get FundingSource list","description":"API used to get the complete FundingSource list.","operationId":"getFundingSource_1","responses":{"200":{"description":"Returns the FundingSource list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of FundingSource list","content":{"text/json":{}}}}},"put":{"tags":["fundingSource"],"summary":"Update FundingSource","description":"API used to update a FundingSource","operationId":"updateFundingSource","requestBody":{"description":"The FundingSource object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FundingSource"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the FundingSourceId supplied does not exist","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["fundingSource"],"summary":"Add FundingSource","description":"API used to add a FundingSource","operationId":"addFundingSource","requestBody":{"description":"The FundingSource object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FundingSource"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/fundingSource/getDisplayName/realmId/{realmId}/name/{name}":{"get":{"tags":["fundingSource"],"summary":"Get FundingSource by display name","description":"API used to get the complete FundingSource by providing the display name of the FundingSource and the Realm","operationId":"getFundingSourceByDisplayName","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the FundingSource for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"name","in":"path","description":"Display name that you want to the FundingSource for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the FundingSource","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of FundingSource","content":{"text/json":{}}}}}},"/api/fundingSource/realmId/{realmId}":{"get":{"tags":["fundingSource"],"summary":"Get FundingSource list for Realm","description":"API used to get the complete FundingSource list for a Realm","operationId":"getFundingSourceForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the FundingSource for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the FundingSource list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of FundingSource list","content":{"text/json":{}}}}}},"/api/healthArea/":{"get":{"tags":["healthArea"],"summary":"Get HealthArea list","description":"API used to get the complete HealthArea list.","operationId":"getHealthArea","responses":{"200":{"description":"Returns the HealthArea list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of HealthArea list","content":{"text/json":{}}}}},"put":{"tags":["healthArea"],"summary":"Update HealthArea","description":"API used to update a HealthArea","operationId":"updateHealhArea","requestBody":{"description":"The HealthArea object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthArea"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the HealthAreaId supplied does not exist","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["healthArea"],"summary":"Add HealthArea","description":"API used to add a HealthArea","operationId":"addHealthArea","requestBody":{"description":"The HealthArea object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthArea"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/healthArea/{healthAreaId}":{"get":{"tags":["healthArea"],"summary":"Get HealthArea for a HealthAreaId","description":"API used to get the HealthArea for a specific HealthAreaId","operationId":"getHealthAreaById","parameters":[{"name":"healthAreaId","in":"path","description":"HealthAreaId that you want to the HealthArea for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the HealthArea","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the HealthAreaId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of HealthArea","content":{"text/json":{}}}}}},"/api/healthArea/realmId/{realmId}":{"get":{"tags":["healthArea"],"summary":"Get HealthArea list for Realm","description":"API used to get the complete HealthArea list for a Realm","operationId":"getHealthAreaByRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the HealthArea list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the HealthArea list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of HealthArea list","content":{"text/json":{}}}}}},"/api/healthArea/realmCountryId/{realmCountryId}":{"get":{"tags":["healthArea"],"summary":"Get HealthArea list for RealmCountry","description":"API used to get the complete HealthArea list for a RealmCountry","operationId":"getHealthAreaByRealmCountry","parameters":[{"name":"realmCountryId","in":"path","description":"RealmCountryId that you want to the HealthArea list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the HealthArea list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the RealmCountryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of HealthArea list","content":{"text/json":{}}}}}},"/api/healthArea/program":{"get":{"tags":["healthArea"],"summary":"Get HealthArea list for active Programs","description":"API used to get the complete HealthArea list that are linked to active Programs","operationId":"getHealthAreaByForProgram","responses":{"200":{"description":"Returns the HealthArea list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the User has access to multiple Realms","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of HealthArea list","content":{"text/json":{}}}}}},"/api/healthArea/program/realmId/{realmId}":{"get":{"tags":["healthArea"],"summary":"Get HealthArea list for active Programs","description":"API used to get the complete HealthArea list that are linked to active Programs","operationId":"getHealthAreaForProgramByRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the HealthArea list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the HealthArea list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of HealthArea list","content":{"text/json":{}}}}}},"/api/healthArea/getDisplayName/realmId/{realmId}/name/{name}":{"get":{"tags":["healthArea"],"summary":"Get HealthArea by display name","description":"API used to get the complete HealthArea by providing the display name of the HealthArea and the Realm","operationId":"getHealthAreaByDisplayName","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the HealthArea for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"name","in":"path","description":"Display name that you want to the HealthArea for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the HealthArea","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of HealthArea","content":{"text/json":{}}}}}},"/api/integrationProgram/":{"get":{"tags":["integrationProgram"],"summary":"Get Integration Program list","description":"API used to get the complete Integration Program list.","operationId":"getIntegrationProgram","responses":{"200":{"description":"Returns the Integration Program list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Integration Program list","content":{"text/json":{}}}}},"put":{"tags":["integrationProgram"],"summary":"Update IntegrationProgram","description":"API used to update an IntegrationProgram","operationId":"updateIntegrationProgram","requestBody":{"description":"An array of Integration Program objects that you want to update","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IntegrationProgram"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the IntegrationId supplied does not exist","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/integrationProgram/{integrationProgramId}":{"get":{"tags":["integrationProgram"],"summary":"Get Integration Programs for an IntegrationProgramId","description":"API used to get the Integration Programs for a specific IntegrationProgramId","operationId":"getIntegrationProgram_1","parameters":[{"name":"integrationProgramId","in":"path","description":"IntegrationProgramId that you want to the Integration Program for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Integration Program","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the IntegrationId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Integration Program","content":{"text/json":{}}}}}},"/api/integrationProgram/program/{programId}":{"get":{"tags":["integrationProgram"],"summary":"Get Integration Program list for a ProgramId","description":"API used to get the complete Integration Program list for a ProgramId.","operationId":"getIntegrationProgramForProgramId","parameters":[{"name":"programId","in":"path","description":"programId that you want to the Integration Program list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Integration Program list for a ProgramId","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Integration Program list","content":{"text/json":{}}}}}},"/api/integration/{integrationId}":{"get":{"tags":["integration"],"summary":"Get Integration for an IntegrationId","description":"API used to get the Integration for a specific IntegrationId","operationId":"getIntegration","parameters":[{"name":"integrationId","in":"path","description":"IntegrationId that you want to the Integration for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Integration","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the IntegrationId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Integration","content":{"text/json":{}}}}}},"/api/integration/":{"get":{"tags":["integration"],"summary":"Get Integration list","description":"API used to get the complete Integration list.","operationId":"getIntegration_1","responses":{"200":{"description":"Returns the Integration list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Integration list","content":{"text/json":{}}}}},"put":{"tags":["integration"],"summary":"Update Integration","description":"API used to update an Integration","operationId":"updateIntegration","requestBody":{"description":"The Integration object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Integration"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the IntegrationId supplied does not exist","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["integration"],"summary":"Add Integration","description":"API used to add an Integration","operationId":"addIntegration","requestBody":{"description":"The Integration object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Integration"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/integration/viewList":{"get":{"tags":["integration"],"summary":"Get Integration View list","description":"API used to get the complete Integration View list.","operationId":"getIntegrationView","responses":{"200":{"description":"Returns the Integration View list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Integration list","content":{"text/json":{}}}}}},"/api/jira/syncJiraAccountIds":{"get":{"tags":["jiraServiceDesk"],"summary":"Sync user\'s Jira account id","description":"API used to sync user\'s Jira account id in user table.","operationId":"syncUserJiraAccountId","responses":{"200":{"description":"Returns the json object with Jira account details","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/jira/addIssue":{"post":{"tags":["jiraServiceDesk"],"summary":"Add issue in Jira","description":"API used to add issue in Jira","operationId":"addIssue","requestBody":{"description":"Issue details to add in Jira in json format","content":{"application/json":{"schema":{"type":"string"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/jira/addIssueAttachment/{issueId}":{"post":{"tags":["jiraServiceDesk"],"summary":"Add attachment in Jira issue","description":"API used to add attachment in the issue in Jira","operationId":"addIssueAttachment","parameters":[{"name":"issueId","in":"path","description":"Issue id for which attachment needs to be added for","required":true,"schema":{"type":"string"}},{"name":"file","description":"Attachment which needs to be added in Jira issue"}],"requestBody":{"description":"Attachment which needs to be added in Jira issue","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary"}}}}}},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/jira/openIssues":{"get":{"tags":["jiraServiceDesk"],"summary":"Get number of open and addressed issues","description":"API used to get number of open and addressed issues","operationId":"getOpenIssue","responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/language/":{"get":{"tags":["language"],"summary":"Get Language list","description":"API used to get the Language list. Returns only those Languages that are marked as Active","operationId":"getLanguageList","responses":{"200":{"description":"Returns the Language list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Language list","content":{"text/json":{}}}}},"put":{"tags":["language"],"summary":"Update Language","description":"API used to update a Language","operationId":"updateLanguage","requestBody":{"description":"The Language object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Language"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["language"],"summary":"Add Language","description":"API used to add a Language","operationId":"addLanguage","requestBody":{"description":"The Language object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Language"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/language/{languageId}":{"get":{"tags":["language"],"summary":"Get Language for a LanguageId","description":"API used to get the Language for a specific LanguageId","operationId":"getLanguageById","parameters":[{"name":"languageId","in":"path","description":"LanguageId that you want to the Language for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Language","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the LanguageId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Language","content":{"text/json":{}}}}}},"/api/language/all":{"get":{"tags":["language"],"summary":"Get Language list","description":"API used to get the complete Language list.","operationId":"getLanguageListAll","responses":{"200":{"description":"Returns the Language list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Language list","content":{"text/json":{}}}}}},"/{languageCode}":{"get":{"tags":["locale"],"summary":"Get the language json for static labels","description":"API used to get the language json for static labels.","operationId":"getLanguageJson","parameters":[{"name":"languageCode","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the language json","content":{"text/json":{}}}}}},"/api/modelingType":{"get":{"tags":["modelingType"],"summary":"Get active ModelingType list","description":"API used to get the complete ModelingType list. Will only return those ModelingTypes that are marked Active.","operationId":"getModelingTypeList","responses":{"200":{"description":"Returns the ModelingType list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ModelingType list","content":{"text/json":{}}}}},"post":{"tags":["modelingType"],"summary":"Add or Update ModelingType","description":"API used to add or update ModelingType","operationId":"addAndUpadteModelingType","requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ModelingType"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if you do not have rights to add/update this object","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not acceptable","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/modelingType/all":{"get":{"tags":["modelingType"],"summary":"Get complete ModelingType list","description":"API used to get the complete ModelingType list.","operationId":"getModelingTypeListAll","responses":{"200":{"description":"Returns the ModelingType list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ModelingType list","content":{"text/json":{}}}}}},"/api/organisation/":{"get":{"tags":["organisation"],"summary":"Get Organisation list","description":"API used to get the complete Organisation list.","operationId":"getOrganisation_1","responses":{"200":{"description":"Returns the Organisation list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation list","content":{"text/json":{}}}}},"put":{"tags":["organisation"],"summary":"Update Organisation","description":"API used to update an Organisation","operationId":"updateOrganisation","requestBody":{"description":"The Organisation object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organisation"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the OrganisationId supplied does not exist","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["organisation"],"summary":"Add Organisation","description":"API used to add an Organisation","operationId":"addOrganisation","requestBody":{"description":"The Organisation object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organisation"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/organisation/{organisationId}":{"get":{"tags":["organisation"],"summary":"Get Organisation for a OrganisationId","description":"API used to get the Organisation for a specific OrganisationId","operationId":"getOrganisation","parameters":[{"name":"organisationId","in":"path","description":"OrganisationId that you want to the Organisation for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Organisation","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the OrganisationId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation","content":{"text/json":{}}}}}},"/api/organisation/realmId/{realmId}":{"get":{"tags":["organisation"],"summary":"Get Organisation list for Realm","description":"API used to get the complete Organisation list for a Realm","operationId":"getOrganisationByRealmId","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the Organisation list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Organisation list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation list","content":{"text/json":{}}}}}},"/api/organisation/realmCountryId/{realmCountryId}":{"get":{"tags":["organisation"],"summary":"Get Organisation list for RealmCountry","description":"API used to get the complete Organisation list for a RealmCountry","operationId":"getOrganisationByRealmCountry","parameters":[{"name":"realmCountryId","in":"path","description":"RealmCountryId that you want to the Organisation list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Organisation list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the RealmCountryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation list","content":{"text/json":{}}}}}},"/api/organisation/getDisplayName/realmId/{realmId}/name/{name}":{"get":{"tags":["organisation"],"summary":"Get Organisation by display name","description":"API used to get the complete Organisation by providing the display name of the Organisation and the Realm","operationId":"getOrganisationDisplayName","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the Organisation for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"name","in":"path","description":"Display name that you want to the Organisation for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the Organisation","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation","content":{"text/json":{}}}}}},"/api/organisationType/{organisationTypeId}":{"get":{"tags":["organisationType"],"summary":"Get Organisation for a OrganisationTypeId","description":"API used to get the Organisation type for a specific OrganisationId","operationId":"getOrganisationType","parameters":[{"name":"organisationTypeId","in":"path","description":"OrganisationTypeId that you want to the Organisation type for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Organisation type","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the OrganisationTypeId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation type","content":{"text/json":{}}}}}},"/api/organisationType/":{"get":{"tags":["organisationType"],"summary":"Get Active Organisation type list","description":"API used to get the Organisation type list that are active.","operationId":"getOrganisationTypeList","responses":{"200":{"description":"Returns the Organisation list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation list","content":{"text/json":{}}}}},"put":{"tags":["organisationType"],"summary":"Update Organisation Type","description":"API used to update an Organisation type","operationId":"putOrganisationType","requestBody":{"description":"The OrganisationType object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganisationType"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the OrganisationId supplied does not exist","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["organisationType"],"summary":"Add Organisation Type","description":"API used to add an Organisation Type","operationId":"postOrganisationType","requestBody":{"description":"The OrganisationType object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganisationType"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/organisationType/all":{"get":{"tags":["organisationType"],"summary":"Get complete Organisation type list","description":"API used to get the complete Organisation type list.","operationId":"getOrganisationTypeListAll","responses":{"200":{"description":"Returns the Organisation list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation list","content":{"text/json":{}}}}}},"/api/organisationType/realmId/{realmId}":{"get":{"tags":["organisationType"],"summary":"Get Organisation type list for Realm","description":"API used to get the complete Organisation type list for a Realm","operationId":"getOrganisationTypeByRealmId","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the Organisation type list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Organisation type list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Organisation type list","content":{"text/json":{}}}}}},"/api/pipeline/qatTemp/program/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get QAT Temp Program","description":"API used to get pipeline program data from QAT temp tables","operationId":"getQatTempProgram","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need to temp program data for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a QatTempProgram object if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["pipeline"],"summary":"Save Pipeline Program Data","description":"API used to save pipeline program data into QAT temp tables","operationId":"postQatTempProgram","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need to save program for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"program","description":"Program object which you need to save in temp table"}],"requestBody":{"description":"Program object which you need to save in temp table","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QatTempProgram"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to save program","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/":{"get":{"tags":["pipeline"],"summary":"Get Pipeline Program List","description":"API used to get pipeline program list from adb table","operationId":"getPipelineProgramList","responses":{"200":{"description":"Returns a pipeline program list if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/shipment/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get Pipeline Shipment Data","description":"API used to get pipeline shipment data by pipelineId","operationId":"getPipelineShipmentdata","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need shipment data for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a pipeline shipment data if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the Shipment data for the specified pipelineId does not exist","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["pipeline"],"summary":"Save Shipment Data For Program","description":"API used to save shipment for specified program into temp table","operationId":"saveShipmentData","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need shipment to save for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"shipments","description":"Array of shipments which needs to be saved"}],"requestBody":{"description":"Array of shipments which needs to be saved","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/QatTempShipment"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/qatTemp/planningUnitListFinalInventry/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get List of Planning Unit Inventory Count","description":"API used to get list of planning unit inventory count from temp tables","operationId":"getQatTempPlanningUnitListInventoryCount","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need the list of planning unit inventory count for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a list of planning unit inventory count if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/programdata/{pipelineId}":{"post":{"tags":["pipeline"],"summary":"Save Final Program Data","description":"API used to save final program data into QAT tables from temp table for specified pipelineId","operationId":"finalSaveProgramData","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need program data to save for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Program supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/realmCountryPlanningUnit/{pipelineId}/{realmCountryId}":{"put":{"tags":["pipeline"],"summary":"Save Planning Unit For Realm Country","description":"API used to save planning unit for specified realm country","operationId":"createRealmCountryPlanningUnits","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need planning unit to save for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"realmCountryId","in":"path","description":"realmCountryId for which you need planning unit to save for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/product/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get Planning Unit List","description":"API used to get planning unit list from adb tables","operationId":"getPlanningUnit","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need to planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a planning unit list if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/pipelineJson/{fileName}":{"post":{"tags":["pipeline"],"summary":"Save Pipeline Data","description":"API used to save pipeline db data in to QAT adb(access database) tables","operationId":"postPipelineData","parameters":[{"name":"fileName","in":"path","description":"Filename to save in database","required":true,"schema":{"type":"string"}},{"name":"pipeline","description":"Pipeline object which you need to save in adb tables"}],"requestBody":{"description":"Pipeline object which you need to save in adb tables","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pipeline"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the program specified already exists","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/programInfo/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get Pipeline Program Info","description":"API used to get pipeline program info by pipelineId","operationId":"getProgramInfo","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need program info for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a pipeline program info if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the Program info for the specified pipelineId does not exist","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/planningUnit/{pipelineId}":{"put":{"tags":["pipeline"],"summary":"Save Planning Unit For Program","description":"API used to save planning unit for specified program into temp table","operationId":"savePlanningUnitForProgram","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need planning units to save for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"ppu","description":"Array of planning unit which needs to be saved"}],"requestBody":{"description":"Array of planning unit which needs to be saved","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/QatTempProgramPlanningUnit"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/qatTemp/planningUnitList/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get QAT Temp Planning Unit List","description":"API used to get planning unit list from temp tables","operationId":"getQatTempPlanningUnitList","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need to planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a planning unit list if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/consumption/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get Consumtion Data","description":"API used to get consumption data from adb tables","operationId":"getPlanningProgramConsumption","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need to consumption data for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a PplConsumption object if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"put":{"tags":["pipeline"],"summary":"Save Consumption For Program","description":"API used to save consumption for specified program into temp table","operationId":"saveConsumptionForProgram","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need consumption to save for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"ppu","description":"Array of consumption which needs to be saved"}],"requestBody":{"description":"Array of consumption which needs to be saved","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/QatTempConsumption"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/qatTemp/regions/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get Program Region","description":"API used to get program region from temp table","operationId":"getQatTempProgramRegion","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need to program region for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a Region object if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/qatTemp/consumption/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get Consumtion List","description":"API used to get consumption data from adb tables","operationId":"getQatTempConsumptionList","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need to consumption list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a list of QatTempConsumption object if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/inventory/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get Pipeline Inventory Data","description":"API used to get pipeline inventory data from adb or temp tables","operationId":"getPipelineProgramInventory","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need to pipeline inventory data for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a pipeline inventory data object if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"put":{"tags":["pipeline"],"summary":"Save Inventory Data For Program","description":"API used to save inventory for specified program into temp table","operationId":"saveInventoryForProgram","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need inventory to save for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"ppu","description":"Array of inventory which needs to be saved"}],"requestBody":{"description":"Array of inventory which needs to be saved","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/QatTempInventory"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/datasource/{pipelineId}":{"put":{"tags":["pipeline"],"summary":"Save QAT Temp Data Source","description":"API used to save data source for specified program into temp table","operationId":"saveDataSourceForProgram","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need data source to save for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"ppu","description":"Array of data source which needs to be saved"}],"requestBody":{"description":"Array of data source which needs to be saved","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/QatTempDataSource"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/qatTemp/datasource/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get List of Data Source","description":"API used to get list of data source from temp tables","operationId":"getQatTempDataSourceList","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need the list of data source for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a list of data source if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/fundingsource/{pipelineId}":{"put":{"tags":["pipeline"],"summary":"Save QAT Temp Funding Source","description":"API used to save funding source for specified program into temp table","operationId":"saveFundingSourceForProgram","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need funding source to save for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"ppu","description":"Array of funding source which needs to be saved"}],"requestBody":{"description":"Array of funding source which needs to be saved","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/QatTempFundingSource"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/qatTemp/fundingsource/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get List of Funding Source","description":"API used to get list of funding source from temp tables","operationId":"getQatTempFundingSourceList","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need the list of funding source for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a list of funding source if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/procurementagent/{pipelineId}":{"put":{"tags":["pipeline"],"summary":"Save QAT Temp Procurement Agent","description":"API used to save procurement agent for specified program into temp table","operationId":"saveProcurementAgentForProgram","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need procurement agent to save for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"ppu","description":"Array of procurement agent which needs to be saved"}],"requestBody":{"description":"Array of procurement agent which needs to be saved","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/QatTempProcurementAgent"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/pipeline/qatTemp/procurementagent/{pipelineId}":{"get":{"tags":["pipeline"],"summary":"Get List of Procurement Agent","description":"API used to get list of procurement agent from temp tables","operationId":"getQatTempProcurementAgentList","parameters":[{"name":"pipelineId","in":"path","description":"PipelineId for which you need the list of procurement agent for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a list of procurement agent if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/planningUnit/":{"get":{"tags":["planningUnit"],"summary":"Get active PlanningUnit list","description":"API used to get the list of active PlanningUnits.","operationId":"getPlanningUnit_1","responses":{"200":{"description":"Returns the active PlanningUnit list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of active PlanningUnit list","content":{"text/json":{}}}}},"put":{"tags":["planningUnit"],"summary":"Update PlanningUnit","description":"API used to update a PlanningUnit","operationId":"putPlanningUnit","requestBody":{"description":"The PlanningUnit object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlanningUnit"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["planningUnit"],"summary":"Add PlanningUnit","description":"API used to add a PlanningUnit","operationId":"postPlanningUnit","requestBody":{"description":"The PlanningUnit object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlanningUnit"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/planningUnit/{planningUnitId}":{"get":{"tags":["planningUnit"],"summary":"Get PlanningUnit for a PlanningUnitId","description":"API used to get the PlanningUnit for a specific PlanningUnitId","operationId":"getPlanningUnitById","parameters":[{"name":"planningUnitId","in":"path","description":"PlanningUnitId that you want to the PlanningUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit object","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the PlanningUnitId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit","content":{"text/json":{}}}}}},"/api/planningUnit/capacity/all":{"get":{"tags":["planningUnit"],"summary":"Get a complete PlanningUnitCapacity list","description":"API used to get a complete PlanningUnitCapacity list","operationId":"getPlanningUnitCapacityList","responses":{"200":{"description":"Returns the PlanningUnitCapacity list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the PlanningUnitCapacity list does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnitCapacity list","content":{"text/json":{}}}}}},"/api/planningUnit/capacity/{planningUnitId}/between/{startDate}/{stopDate}":{"get":{"tags":["planningUnit"],"summary":"Get PlanningUnitCapacity list for a PlanningUnitId and a given date range","description":"API used to get PlanningUnitCapacity list for a PlanningUnitId and a given date range","operationId":"getPlanningUnitCapacityForId","parameters":[{"name":"planningUnitId","in":"path","description":"planningUnitId that you want a PlanningUnitCapacity list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"startDate","in":"path","description":"startDate the date you want the PlanningUnitCapacity data from","required":true,"schema":{"type":"string"}},{"name":"stopDate","in":"path","description":"stopDate the date you want the PlanningUnitCapacity data till","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the PlanningUnitCapacity list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the PlanningUnitCapacity list does not exist","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if certain conditions to get the list does not met","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnitCapacity list","content":{"text/json":{}}}}}},"/api/planningUnit/capacity/{planningUnitId}":{"get":{"tags":["planningUnit"],"summary":"Get PlanningUnitCapacity list for a PlanningUnitId","description":"API used to get PlanningUnitCapacity list for a PlanningUnitId","operationId":"getPlanningUnitCapacityForId_1","parameters":[{"name":"planningUnitId","in":"path","description":"planningUnitId that you want a PlanningUnitCapacity list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnitCapacity list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if certain conditions to get the list does not met","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnitCapacity list","content":{"text/json":{}}}}}},"/api/planningUnit/capacity":{"put":{"tags":["planningUnit"],"summary":"Update PlanningUnitCapacity","description":"API used to update PlanningUnitCapacity","operationId":"savePlanningUnitCapacity","requestBody":{"description":"planningUnitCapacity objects that you want to update","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PlanningUnitCapacity"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the user does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the PlanningUnitCapacity does not exist","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if certain conditions to update the date does not met","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/planningUnit/all":{"get":{"tags":["planningUnit"],"summary":"Get PlanningUnit list","description":"API used to get the complete PlanningUnit list.","operationId":"getPlanningUnitAll","responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/realmId/{realmId}":{"get":{"tags":["planningUnit"],"summary":"Get active PlanningUnit list for Realm","description":"API used to get the list of active PlanningUnits for a Realm","operationId":"getPlanningUnitForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the PlanningUnit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/realmId/{realmId}/all":{"get":{"tags":["planningUnit"],"summary":"Get PlanningUnit list for Realm","description":"API used to get the complete PlanningUnit list for a Realm","operationId":"getPlanningUnitForRealmAll","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the PlanningUnit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/planningUnit/forecastingUnit/{forecastingUnitId}":{"get":{"tags":["planningUnit"],"summary":"Get a PlanningUnit list for forecastingUnitId","description":"API used to get a PlanningUnit list for forecastingUnitId","operationId":"getPlanningUnitByForecastingUnitId","parameters":[{"name":"forecastingUnitId","in":"path","description":"ForecastingUnitId that you want the planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ForecastingUnitId specified does not exist","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/planningUnit/capacity/realmId/{realmId}/between/{startDate}/{stopDate}":{"get":{"tags":["planningUnit"],"summary":"Get PlanningUnitCapacity for a Realm and a given date range","description":"API used to get PlanningUnitCapacity for a Realm and a given date range","operationId":"getPlanningUnitCapacityForRealmId","parameters":[{"name":"realmId","in":"path","description":"realmId that you want a PlanningUnitCapacity from","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"startDate","in":"path","description":"startDate the date you want the PlanningUnitCapacity data from","required":true,"schema":{"type":"string"}},{"name":"stopDate","in":"path","description":"stopDate the date you want the PlanningUnitCapacity data till","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the PlanningUnitCapacity list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the PlanningUnitCapacity list does not exist","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if certain conditions to get the list does not met","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnitCapacity list","content":{"text/json":{}}}}}},"/api/planningUnit/capacity/realmId/{realmId}":{"get":{"tags":["planningUnit"],"summary":"Get PlanningUnitCapacity for a Realm","description":"API used to get PlanningUnitCapacity for a Realm","operationId":"getPlanningUnitCapacityForRealmId_1","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want a PlanningUnitCapacity from","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnitCapacity list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the PlanningUnitCapacity list does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnitCapacity list","content":{"text/json":{}}}}}},"/api/planningUnit/productCategory/{productCategoryId}/all":{"get":{"tags":["planningUnit"],"summary":"Get PlanningUnit list for ProductCategory","description":"API used to get the complete PlanningUnit list for a ProductCategory","operationId":"getPlanningUnitForproductCategoryAll","parameters":[{"name":"productCategoryId","in":"path","description":"productCategoryId that you want the PlanningUnit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the productCategoryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/productCategory/{productCategoryId}/active":{"get":{"tags":["planningUnit"],"summary":"Get active PlanningUnit list for ProductCategory","description":"API used to get the list of active PlanningUnits for a ProductCategory","operationId":"getPlanningUnitForproductCategory","parameters":[{"name":"productCategoryId","in":"path","description":"productCategoryId that you want the PlanningUnit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the active PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the productCategoryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/productCategoryList/active":{"post":{"tags":["planningUnit"],"summary":"Get active PlanningUnit list for ProductCategory","description":"API used to get the list of active PlanningUnits for a ProductCategory","operationId":"getPlanningUnitForproductCategoryList","requestBody":{"description":"array of productCategoryIds that you want the PlanningUnit","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the active PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the productCategoryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/getPlanningUnitByTracerCategory/planningUnitId/{planningUnitId}/{procurementAgentId}/{term}":{"get":{"tags":["planningUnit"],"summary":"The procurement agent PlanningUnits list","description":"API used to get the procurement agent PlanningUnits list","operationId":"getPlanningUnitByTracerCategory","parameters":[{"name":"planningUnitId","in":"path","description":"planningUnitId that you want a procurement agent PlanningUnits list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"procurementAgentId","in":"path","description":"procurementAgentId that you want a procurement agent PlanningUnits list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"term","in":"path","description":"term that you want a procurement agent PlanningUnits list for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the procurement agent PlanningUnits list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the planningUnitId or procurementAgentId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of procurement agent PlanningUnits list","content":{"text/json":{}}}}}},"/api/planningUnit/tracerCategory/program/":{"post":{"tags":["planningUnit"],"summary":"Get active PlanningUnit list for a TracerCategory and a Program","description":"API used to get the list of active PlanningUnits for a tracerCategory and a program","operationId":"getPlanningUnitByTracerCategoryAndProgram","requestBody":{"description":"object containing array of tracerCategory and program that you want the PlanningUnit List for","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProgramAndTracerCategoryDTO_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the active PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the tracerCategories and programs specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/realmCountry/{realmCountryId}":{"get":{"tags":["planningUnit"],"summary":"Get active PlanningUnit list for a realm country","description":"API used to get the list of active PlanningUnits for a realm country","operationId":"getPlanningUnitByRealmCountry","parameters":[{"name":"realmCountryId","in":"path","description":"realmCountryId that you want the PlanningUnit List for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the active PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the tracerCategories and programs specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/planningUnit/tracerCategory/{tracerCategoryId}":{"get":{"tags":["planningUnit"],"summary":"Get the list of PlanningUnits for a tracerCategoryId","description":"API used to get the list of PlanningUnits for a tracerCategoryId","operationId":"getPlanningUnitForTracerCategory","parameters":[{"name":"tracerCategoryId","in":"path","description":"tracerCategoryId that you want the PlanningUnit List for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the active PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the tracerCategoryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/planningUnit/tracerCategorys":{"post":{"tags":["planningUnit"],"summary":"Get the list of PlanningUnits for multiple tracerCategoryIds","description":"API used to get the list of PlanningUnits for multiple tracerCategoryIds","operationId":"getPlanningUnitForTracerCategorys","requestBody":{"description":"Array of tracerCategoryIds that you want the PlanningUnit List for","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the active PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the tracerCategoryIds specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/planningUnit/planningUnit/productCategory/{productCategoryId}/programId/{programId}":{"get":{"tags":["planningUnit"],"summary":"Get the list of PlanningUnits for productCategoryId and programId","description":"API used to get the list of PlanningUnits for productCategoryId and programId","operationId":"getPlanningUnitForProductCategoryAndProgram","parameters":[{"name":"productCategoryId","in":"path","description":"productCategoryId that you want a PlanningUnits list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"programId","in":"path","description":"programId that you want a PlanningUnits list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the active PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the productCategoryId and programId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/problem/realmId/{realmId}":{"get":{"tags":["problem"],"summary":"Get active Problem list for a realm country","description":"API used to get the list of active problem list for a realm","operationId":"getProblmeByRealmId","parameters":[{"name":"realmId","in":"path","description":"realmId that you want the problem list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the active Problem list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the realmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Problem list","content":{"text/json":{}}}}}},"/api/problem/problemReport/programId/{programId}/versionId/{versionId}":{"get":{"tags":["problem"],"summary":"Get active Problem Report list for a program and version","description":"API used to get the list of active problem report list for a programId and versionId","operationId":"getProblmeReport","parameters":[{"name":"programId","in":"path","description":"programId that you want the problem report list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want the problem report list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the active Problem report list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the programId and versionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Problem report list","content":{"text/json":{}}}}}},"/api/problem/problemStatus":{"get":{"tags":["problem"],"summary":"Get Problem Status list","description":"API used to get the complete list of problem status","operationId":"getProblemStatusList","responses":{"200":{"description":"Returns the Problem Status list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Problem status list","content":{"text/json":{}}}}}},"/api/procurementAgent/procurementAgentType":{"get":{"tags":["ProcurementAgentType"],"summary":"Get Complete ProcurementAgentType list","description":"API used to get the complete list of ProcurementAgentType.","operationId":"getProcurementAgentType","responses":{"200":{"description":"Returns the ProcurementAgentType list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgentType list","content":{"text/json":{}}}}},"put":{"tags":["procurementAgentType"],"summary":"Update procurementAgentType","description":"API used to update a procurementAgentType","operationId":"putProcurementAgentType","requestBody":{"description":"The procurementAgentType object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcurementAgentType"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["ProcurementAgentType"],"summary":"Add ProcurementAgentType","description":"API used to add a ProcurementAgentType","operationId":"postProcurementAgentType","requestBody":{"description":"The procurementAgentType object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcurementAgentType"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/procurementAgent/procurementAgentType/{procurementAgentTypeId}":{"get":{"tags":["procurementAgentType"],"summary":"Get procurementAgentType for a procurementAgentTypeId","description":"API used to get the procurementAgentType for a specific procurementAgentTypeId","operationId":"getProcurementAgentType_1","parameters":[{"name":"procurementAgentTypeId","in":"path","description":"procurementAgentTypeId that you want to the procurementAgentType for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the procurementAgentType","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the procurementAgentTypeId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of procurementAgentType","content":{"text/json":{}}}}}},"/api/procurementAgent/":{"get":{"tags":["procurementAgent"],"summary":"Get Complete ProcurementAgent list","description":"API used to get the complete list of ProcurementAgent.","operationId":"getProcurementAgent","responses":{"200":{"description":"Returns the ProcurementAgent list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent list","content":{"text/json":{}}}}},"put":{"tags":["procurementAgent"],"summary":"Update ProcurementAgent","description":"API used to update a ProcurementAgent","operationId":"updateProcurementAgent","requestBody":{"description":"The ProcurementAgent object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcurementAgent"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["procurementAgent"],"summary":"Add ProcurementAgent","description":"API used to add a ProcurementAgent","operationId":"addProcurementAgent","requestBody":{"description":"The ProcurementAgent object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcurementAgent"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/procurementAgent/{procurementAgentId}/planningUnit":{"get":{"tags":["procurementAgent"],"summary":"Get ProcurementAgent Planning Unit list for a Procurement Agent","description":"API used to get the ProcurementAgent Planning Unit list for a Procurement Agent. Will only return those PlanningUnits that are marked active.","operationId":"getProcurementAgentPlanningUnitList","parameters":[{"name":"procurementAgentId","in":"path","description":"ProcurementAgentId that you want to the ProcurementAgent PlanningUnit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the procurementAgentId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent Planning Unit list","content":{"text/json":{}}}}}},"/api/procurementAgent/{procurementAgentId}/procurementUnit":{"get":{"tags":["procurementAgent"],"summary":"Get ProcurementAgent Procurement Unit list for a Procurement Agent.","description":"API used to get the ProcurementAgent ProcurementUnit list for a Procurement Agent. Will only return those ProcurementUnits that are marked active.","operationId":"getProcurementAgentProcurementUnitList","parameters":[{"name":"procurementAgentId","in":"path","description":"ProcurementAgentId that you want to the Procurement Unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the procurementAgentId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent Procurement Unit list","content":{"text/json":{}}}}}},"/api/procurementAgent/procurementAgent/planningUnits":{"post":{"tags":["procurementAgent"],"summary":"Get ProcurementAgent Planning Unit list for a multiple planningUnitIds","description":"API used to get the ProcurementAgent Planning Unit list for multiple planningUnitIds.","operationId":"getProcurementAgentPlanningUnitListByPlanningUnitList","requestBody":{"description":"planningUnitIds that you want to the ProcurementAgent PlanningUnit list for","content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int32"}}}},"required":true},"responses":{"200":{"description":"Returns the ProcurementAgent PlanningUnit list","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the planningUnitIds specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent Planning Unit list","content":{"text/json":{}}}}}},"/api/procurementAgent/{procurementAgentId}":{"get":{"tags":["procurementAgent"],"summary":"Get ProcurementAgent for a ProcurementAgentId","description":"API used to get the ProcurementAgent for a specific ProcurementAgentId","operationId":"getProcurementAgent_1","parameters":[{"name":"procurementAgentId","in":"path","description":"ProcurementAgentId that you want to the ProcurementAgent for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementAgent","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ProcurementAgentId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent","content":{"text/json":{}}}}}},"/api/procurementAgent/getDisplayName/realmId/{realmId}/name/{name}":{"get":{"tags":["procurementAgent"],"summary":"Get ProcurementAgent by display name","description":"API used to get the ProcurementAgent by providing the display name of the ProcurementAgent and the Realm","operationId":"getProcurementAgentDisplayName","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the ProcurementAgent for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"name","in":"path","description":"Display name that you want to the ProcurementAgent for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the ProcurementAgent","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent","content":{"text/json":{}}}}}},"/api/procurementAgent/realmId/{realmId}":{"get":{"tags":["procurementAgent"],"summary":"Get ProcurementAgent list for Realm","description":"API used to get the ProcurementAgent list for a Realm","operationId":"getProcurementAgentForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the ProcurementAgent for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementAgent list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent list","content":{"text/json":{}}}}}},"/api/procurementAgent/procurementAgentType/realmId/{realmId}":{"get":{"tags":["procurementAgentType"],"summary":"Get procurementAgentType list for Realm","description":"API used to get the procurementAgentType list for a Realm","operationId":"getProcurementAgentTypeForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the procurementAgentType for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the procurementAgentType list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of procurementAgentType list","content":{"text/json":{}}}}}},"/api/procurementAgent/planningingUnit":{"put":{"tags":["procurementAgent"],"summary":"Update ProcurementAgent PlanningUnits","description":"API used to save the ProcurementAgentPlanningUnits list","operationId":"savePlanningUnitForProcurementAgent","requestBody":{"description":"Array of ProcurementAgentPlanningUnits that you want to save","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProcurementAgentPlanningUnit"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/procurementAgent/{procurementAgentId}/planningUnit/all":{"get":{"tags":["procurementAgent"],"summary":"Get Complete ProcurementAgent Planning Unit list for a Procurement Agent","description":"API used to get the complete ProcurementAgent Planning Unit list for a Procurement Agent.","operationId":"getProcurementAgentPlanningUnitListAll","parameters":[{"name":"procurementAgentId","in":"path","description":"ProcurementAgentId that you want to the PlanningUnit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ProcurementAgentId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent Planning Unit list","content":{"text/json":{}}}}}},"/api/procurementAgent/procurementUnit":{"put":{"tags":["procurementAgent"],"summary":"Update ProcurementAgent ProcurementUnits","description":"API used to save the ProcurementAgentProcurementUnits list","operationId":"saveProcurementUnitForProcurementAgent","requestBody":{"description":"Array of ProcurementAgentProcurementUnits that you want to save","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProcurementAgentProcurementUnit"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/procurementAgent/{procurementAgentId}/procurementUnit/all":{"get":{"tags":["procurementAgent"],"summary":"Get Complete ProcurementAgent Procurement Unit list for a Procurement Agent","description":"API used to get the complete ProcurementAgent ProcurementUnit list for a Procurement Agent.","operationId":"getProcurementAgentProcurementUnitListAll","parameters":[{"name":"procurementAgentId","in":"path","description":"ProcurementAgentId that you want to the Procurement unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ProcurementAgentId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Procurement Unit list","content":{"text/json":{}}}}}},"/api/procurementUnit/":{"get":{"tags":["procurementUnit"],"summary":"Get active ProcurementUnit list","description":"API used to get the complete ProcurementUnit list. Will only return those ProcurementUnits that are marked Active.","operationId":"getProcurementUnit","responses":{"200":{"description":"Returns the ProcurementUnit list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementUnit list","content":{"text/json":{}}}}},"put":{"tags":["procurementUnit"],"summary":"Update ProcurementUnit","description":"API used to update a ProcurementUnit","operationId":"updateProcurementUnit","requestBody":{"description":"The ProcurementUnit object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcurementUnit"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["procurementUnit"],"summary":"Add ProcurementUnit","description":"API used to add a ProcurementUnit","operationId":"addProcurementUnit","requestBody":{"description":"The ProcurementUnit object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcurementUnit"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/procurementUnit/{procurementUnitId}":{"get":{"tags":["procurementUnit"],"summary":"Get ProcurementUnit for a ProcurementUnitId","description":"API used to get the ProcurementUnit for a specific ProcurementUnitId","operationId":"getProcurementUnitById","parameters":[{"name":"procurementUnitId","in":"path","description":"ProcurementUnitId that you want to the ProcurementUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementUnit","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ProcurementUnitId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementUnit","content":{"text/json":{}}}}}},"/api/procurementUnit/all":{"get":{"tags":["procurementUnit"],"summary":"Get ProcurementUnit list","description":"API used to get the complete ProcurementUnit list.","operationId":"getProcurementUnitAll","responses":{"200":{"description":"Returns the ProcurementUnit list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementUnit list","content":{"text/json":{}}}}}},"/api/procurementUnit/realmId/{realmId}":{"get":{"tags":["procurementUnit"],"summary":"Get ProcurementUnit for a RealmId","description":"API used to get all the ProcurementUnits for a specific RealmId. Will only return those ProcurementUnits that are marked active","operationId":"getProcurementUnitForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the ProcurementUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementUnits list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementUnit","content":{"text/json":{}}}}}},"/api/procurementUnit/realmId/{realmId}/all":{"get":{"tags":["procurementUnit"],"summary":"Get ProcurementUnit for a RealmId","description":"API used to get all the ProcurementUnits for a specific RealmId.","operationId":"getProcurementUnitForRealmAll","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the ProcurementUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementUnits list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementUnit","content":{"text/json":{}}}}}},"/api/procurementUnit/planningUnitId/{planningUnitId}":{"get":{"tags":["procurementUnit"],"summary":"Get ProcurementUnit for a PlanningUnitId","description":"API used to get all the ProcurementUnits for a specific PlanningUnitId. Will only return those ProcurementUnits that are marked active","operationId":"getProcurementUnitForPlanningUnit","parameters":[{"name":"planningUnitId","in":"path","description":"PlanningUnitId that you want to the ProcurementUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementUnits list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the PlanningUnitId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementUnit","content":{"text/json":{}}}}}},"/api/procurementUnit/planningUnitId/{planningUnitId}/all":{"get":{"tags":["procurementUnit"],"summary":"Get ProcurementUnit for a PlanningUnitId","description":"API used to get all the ProcurementUnits for a specific PlanningUnitId.","operationId":"getProcurementUnitForPlanningUnitAll","parameters":[{"name":"planningUnitId","in":"path","description":"PlanningUnitId that you want to the ProcurementUnit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementUnits list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the PlanningUnitId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementUnit","content":{"text/json":{}}}}}},"/api/productCategory/realmId/{realmId}":{"get":{"tags":["productCategory"],"summary":"Get ProductCategory list for Realm","description":"API used to get the complete ProductCategory list for a Realm","operationId":"getProductCategory","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the ProductCategory list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProductCategory list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProductCategory list","content":{"text/json":{}}}}}},"/api/productCategory/":{"put":{"tags":["productCategory"],"summary":"Update ProductCategory tree","description":"API used to update the ProductCategory tree","operationId":"updateProductCategory","requestBody":{"description":"The Array of ProductCategories that you want to update","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Node"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/productCategory/realmId/{realmId}/list/{productCategoryId}/{includeCurrentLevel}/{includeAllChildren}":{"get":{"tags":["productCategory"],"summary":"Get ProductCategory list for Realm","description":"API used to get the complete ProductCategory list for a Realm","operationId":"getProductCategoryByRealmId","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the ProductCategory list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"productCategoryId","in":"path","description":"ProductCategoryId that you want the Tree for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"includeCurrentLevel","in":"path","description":"true indicates that you want to include the current node of the tree in the output, false will skip the current level and give all the child nodes","required":true,"schema":{"type":"boolean"}},{"name":"includeAllChildren","in":"path","description":"true will include all the child nodes in the tree in the response, false will only include the immediate child nodes","required":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returns the ProductCategory list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProductCategory list","content":{"text/json":{}}}}}},"/api/productCategory/realmId/{realmId}/programId/{programId}":{"get":{"tags":["productCategory"],"summary":"Get ProductCategory list for Realm and Program","description":"API used to get the complete ProductCategory list for a Realm and Program","operationId":"getProductCategoryForProgram","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the ProductCategory list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"programId","in":"path","description":"ProgramId that you want the ProductCategory list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProductCategory list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProductCategory list","content":{"text/json":{}}}}}},"/api/programData/programId/{programId}/versionId/{versionId}":{"get":{"tags":["programData"],"summary":"Get ProgramData for a ProgramId and VersionId","description":"API used to get ProgramData for ProgramId and VersionId","operationId":"getProgramData","parameters":[{"name":"programId","in":"path","description":"programId that you want to the ProgramData for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to the ProgramData for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProgramData","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ProgramData specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProgramData","content":{"text/json":{}}}}}},"/api/programData/versionType":{"get":{"tags":["programData"],"summary":"Get the complete list of VersionType","description":"API used to get the complete list of VersionType","operationId":"getVersionType","responses":{"200":{"description":"Returns the list of VersionType","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of list of VersionType","content":{"text/json":{}}}}}},"/api/programData/versionStatus":{"get":{"tags":["programData"],"summary":"Get the complete list of VersionStatus","description":"API used to get the complete list of VersionStatus","operationId":"getVersionStatus","responses":{"200":{"description":"Returns the list of VersionStatus","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of list of VersionStatus","content":{"text/json":{}}}}}},"/api/programData/getLastModifiedDateForProgram/{programId}/{versionId}":{"get":{"tags":["programData"],"summary":"Get the last modified date for a program","description":"API to get the last modified date for a program and versionId","operationId":"getLastModifiedDateForProgram","parameters":[{"name":"programId","in":"path","description":"programId that you want the last modified date for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want the last modified date for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the last modified date of program","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of last modified date of program","content":{"text/json":{}}}}}},"/api/programData/program/actualConsumptionReport":{"post":{"tags":["programData"],"summary":"Forecasting Unit import data from Supply Plan","description":"API Used in Forecasting Unit import data from Supply Plan","operationId":"getProgramProductCatalog","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActualConsumptionDataInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns list of ActualConsumptionDataOutput","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of list of ActualConsumptionDataOutput","content":{"text/json":{}}}}}},"/api/programData/programVersion/programId/{programId}/versionId/{versionId}/realmCountryId/{realmCountryId}/healthAreaId/{healthAreaId}/organisationId/{organisationId}/versionTypeId/{versionTypeId}/versionStatusId/{versionStatusId}/dates/{startDate}/{stopDate}":{"get":{"tags":["programData"],"summary":"Get the list of programVersion based on given parameters and date range","description":"API used to get the list of programVersion based on given parameters and date range","operationId":"getProgramVersionList","parameters":[{"name":"programId","in":"path","description":"programId that you want to the programVersion list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to the programVersion list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"realmCountryId","in":"path","description":"realmCountryId that you want to the programVersion list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"healthAreaId","in":"path","description":"healthAreaId that you want to the programVersion list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"organisationId","in":"path","description":"organisationId that you want to the programVersion list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionTypeId","in":"path","description":"versionTypeId that you want to the programVersion list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionStatusId","in":"path","description":"versionStatusId that you want to the programVersion list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"startDate","in":"path","description":"startDate that you want to the programVersion list from","required":true,"schema":{"type":"string"}},{"name":"stopDate","in":"path","description":"stopDate that you want to the programVersion list till","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the list of programVersion","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the programVersion does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of list of programVersion","content":{"text/json":{}}}}}},"/api/programData/programVersion/programId/{programId}/versionId/{versionId}/versionStatusId/{versionStatusId}":{"put":{"tags":["programData"],"summary":"Update a programVersion for given programId and versionId","description":"API used to update a programVersion for given programId and versionId","operationId":"updateProgramVersion","parameters":[{"name":"programId","in":"path","description":"programId that you want to update programVersion for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to update programVersion for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionStatusId","in":"path","description":"versionStatusId that you want to update in programVersion","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"updateProgramVersion","description":"updateProgramVersion object that you want to update"}],"requestBody":{"description":"updateProgramVersion object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateProgramVersion"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the programVersion does not exist","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/programData/checkErpOrder/orderNo/{orderNo}/primeLineNo/{primeLineNo}/realmCountryId/{realmCountryId}/planningUnitId/{planningUnitId}":{"get":{"tags":["programData"],"summary":"Check ERP order status","description":"API to check ERP order status","operationId":"checkErpOrder","parameters":[{"name":"orderNo","in":"path","required":true,"schema":{"type":"string"}},{"name":"primeLineNo","in":"path","required":true,"schema":{"type":"string"}},{"name":"realmCountryId","in":"path","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"planningUnitId","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ordr status","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ERP order status","content":{"text/json":{}}}}}},"/api/programData/":{"post":{"tags":["programData"],"summary":"Get ProgramData list for listed ProgramIds and VersionIds","description":"API used to get ProgramData list for listed ProgramIds and VersionIds","operationId":"getLoadProgramData","requestBody":{"description":"programVersionList list of ProgramIds and VersionIds that you want a ProgramData list for","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProgramIdAndVersionId_InternalView"}}}},"required":true},"responses":{"200":{"description":"Returns the ProgramData list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ProgramData specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProgramData","content":{"text/json":{}}}}}},"/api/programData/artmis/programId/{programId}/versionId/{versionId}":{"get":{"tags":["programData"],"summary":"Get Artmis view ProgramData list for given ProgramId and VersionId","description":"API used to get Artmis view ProgramData list for given ProgramId and VersionId","operationId":"getProgramDataArtmis","parameters":[{"name":"programId","in":"path","description":"programId that you want to the ProgramData for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to the ProgramData for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProgramData list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ProgramData specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProgramData","content":{"text/json":{}}}}}},"/api/programData/gfpvan/programId/{programId}/versionId/{versionId}":{"get":{"tags":["programData"],"summary":"Get Artmis view ProgramData list for given ProgramId and VersionId","description":"API used to get GfpVan view ProgramData list for given ProgramId and VersionId","operationId":"getProgramDataGfpVan","parameters":[{"name":"programId","in":"path","description":"programId that you want to the ProgramData for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to the ProgramData for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProgramData list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the ProgramData specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProgramData","content":{"text/json":{}}}}}},"/api/programData/shipmentSync/programId/{programId}/versionId/{versionId}/userId/{userId}/lastSyncDate/{lastSyncDate}":{"get":{"tags":["programData"],"summary":"Get list of Shipment data for given programId and versionId which are modified after given date","description":"API used to get list of Shipment data for given programId and versionId which are modified after given date","operationId":"shipmentSync","parameters":[{"name":"programId","in":"path","description":"programId that want the Shipment data for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that want the Shipment data for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"userId","in":"path","description":"userId need this back in response","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"lastSyncDate","in":"path","description":"lastSyncDate that you want a Shipment data list","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the Shipment data list","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if certain conditions to get the Shipment data list does not met","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Shipment data list","content":{"text/json":{}}}}}},"/api/programData/checkNewerVersions":{"post":{"tags":["programData"],"summary":"To check if newer version available for list programIds and versionIds","description":"API to check if newer version available for list programIds and versionIds","operationId":"checkNewerVersions","requestBody":{"description":"programVersionList that you want to check newer version for","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProgramIdAndVersionId"}}}},"required":true},"responses":{"200":{"description":"Returns the Newer version status","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of newer version of program","content":{"text/json":{}}}}}},"/api/programData/getLatestVersionForProgram/{programId}":{"get":{"tags":["programData"],"summary":"Get the latest version for a program","description":"API to get the latest version for a program","operationId":"getLatestVersionForProgram","parameters":[{"name":"programId","in":"path","description":"programId that you want the latest version for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the latest version of program","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of latest version of program","content":{"text/json":{}}}}}},"/api/programData/programData/getLatestVersionForPrograms":{"post":{"tags":["programData"],"summary":"Get latest version for given programs","description":"API Used to get latest version for given programIds","operationId":"getLatestVersionForProgram_1","requestBody":{"description":"programIds that you want latest version for","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns list of latest version of programs","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of list of latest version of programs","content":{"text/json":{}}}}}},"/api/program/programIds":{"post":{"tags":["program"],"summary":"Get Program list for Program Ids","description":"API used to get the Program list for a list of Program Ids","operationId":"getProgram","requestBody":{"description":"Array of ProgramIds that you want to the list of Programs","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the Program list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Program list","content":{"text/json":{}}}}}},"/api/program/":{"get":{"tags":["program"],"summary":"Get Active Program list","description":"API used to get the active Program list","operationId":"getProgram_1","responses":{"200":{"description":"Returns the Program list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Program list","content":{"text/json":{}}}}},"put":{"tags":["program"],"summary":"Update Program","description":"API used to update a Program","operationId":"putProgram","requestBody":{"description":"Program object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Program"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["program"],"summary":"Add Program","description":"API used to add a Program","operationId":"postProgram","requestBody":{"description":"Program object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Program"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Program object supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/program/{programId}":{"get":{"tags":["program"],"summary":"Get Program Object For Specified ProgramId","description":"API used to get the Program object for specified programId","operationId":"getProgram_2","parameters":[{"name":"programId","in":"path","description":"programId that you want to get Program object for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Program object","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Program object","content":{"text/json":{}}}}}},"/api/program/loadProgram/programId/{programId}/page/{page}":{"get":{"tags":["program"],"summary":"List five versions of program from give page number for specified programId","description":"API used to list five versions of program from given page number for specified programId","operationId":"getLoadProgram","parameters":[{"name":"programId","in":"path","description":"programId that you want to get program list for ","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"page","in":"path","description":"number that you want to get program list from","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a list of five versions of program","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/program/loadProgram":{"get":{"tags":["program"],"summary":"Load Program","description":"API used to load program.","operationId":"getLoadProgram_1","responses":{"200":{"description":"Returns program to load","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retrival of program","content":{"text/json":{}}}}}},"/api/program/validate/realmId/{realmId}/programId/{programId}/programCode/{programCode}":{"get":{"tags":["program"],"summary":"Validate Program for specified realmId,programId and programCode","description":"API used to validate Program for specified realmId,programId and programCode","operationId":"validateProgramCode","parameters":[{"name":"realmId","in":"path","description":"realmId that you want to validate program for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"programId","in":"path","description":"programId that you want to validate program for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"programCode","in":"path","description":"programCode that you want to validate program for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a true/false if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/program/planningUnit":{"put":{"tags":["program"],"summary":"Save a PlanningUnit Unit For Specified Program","description":"API used to save a PlanningUnit Unit for specified programId","operationId":"savePlanningUnitForProgram_1","requestBody":{"description":"Array of ProgramPlanningUnit object that you want to save","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProgramPlanningUnit"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/program/all":{"get":{"tags":["program"],"summary":"Get Complete Program list","description":"API used to get the complete Program list","operationId":"getProgramAll","responses":{"200":{"description":"Returns the Program list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Program list","content":{"text/json":{}}}}}},"/api/program/{programId}/planningUnit":{"get":{"tags":["program"],"summary":"Get Planning Unit List For Specified ProgramId","description":"API used to get the Planning unit list for specified programId","operationId":"getPlanningUnitForProgram","parameters":[{"name":"programId","in":"path","description":"programId that you want to get Planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Planning unit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Planning unit list","content":{"text/json":{}}}}}},"/api/program/{programId}/tracerCategory/planningUnit":{"post":{"tags":["program"],"summary":"Get Planning Unit List For Specified ProgramId and TracerCategoryIds","description":"API used to get the Planning unit list for specified programId and tracerCategoryIds","operationId":"getPlanningUnitForProgramTracerCategory","parameters":[{"name":"programId","in":"path","description":"programId that you want to get Planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"tracerCategoryIds","description":"Array of tracerCategoryIds that you want to get Planning unit list for"}],"requestBody":{"description":"Array of tracerCategoryIds that you want to get Planning unit list for","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the Planning unit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Planning unit list","content":{"text/json":{}}}}}},"/api/program/program/{programId}/tracerCategory/simple/planningUnit":{"post":{"tags":["program"],"summary":"Get simple Planning Unit List For Specified ProgramId and TracerCategoryIds","description":"API used to get simple Planning unit list for specified programId and tracerCategoryIds","operationId":"getSimplePlanningUnitForProgramTracerCategory","parameters":[{"name":"programId","in":"path","description":"programId that you want to get simple Planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"tracerCategoryIds","description":"Array of tracerCategoryIds that you want to get simple Planning unit list for"}],"requestBody":{"description":"Array of tracerCategoryIds that you want to get simple Planning unit list for","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the simple Planning unit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of simple Planning unit list","content":{"text/json":{}}}}}},"/api/program/{programId}/planningUnit/all":{"get":{"tags":["program"],"summary":"Get Complete Planning Unit List For Specified ProgramId","description":"API used to get the complete Planning unit list for specified programId ","operationId":"getPlanningUnitForProgramAll","parameters":[{"name":"programId","in":"path","description":"programId that you want to get Planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Planning unit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Planning unit list","content":{"text/json":{}}}}}},"/api/program/planningUnit/procurementAgent/{programPlanningUnitId}":{"get":{"tags":["program"],"summary":"Get ProcurementAgent List For Specified ProgramPlanningUnitId","description":"API used to get the ProcurementAgent list for specified ProgramPlanningUnitId","operationId":"getProgramPlanningUnitProcurementAgent","parameters":[{"name":"programPlanningUnitId","in":"path","description":"ProgramPlanningUnitId that you want to get ProcurementAgent list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the ProcurementAgent list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgent list","content":{"text/json":{}}}}}},"/api/program/planningingUnit/procurementAgent":{"put":{"tags":["program"],"summary":"Save PlanningUnit Unit, ProcurementAgent and Price","description":"API used to save a PlanningUnit Unit, ProcurementAgent and Price","operationId":"saveProgramPlanningUnitProcurementAgentPrices","requestBody":{"description":"Array of programPlanningUnitProcurementAgentPrices object that you want to save","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProgramPlanningUnitProcurementAgentPrice"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/program/planningUnit/programs":{"post":{"tags":["program"],"summary":"get PlanningUnit List For Specified ProgramIds","description":"API used to get the PlanningUnit list for specified ProgramIds","operationId":"getPlanningUnitForProgramList","requestBody":{"description":"Array of programIds that you want to get PlanningUnit list for","content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int32"}}}},"required":true},"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/program/realmId/{realmId}":{"get":{"tags":["program"],"summary":"Get Program List For Specified Realm","description":"API used to get the Program list for specified realm","operationId":"getProgramForRealm","parameters":[{"name":"realmId","in":"path","description":"realmId that you want to get Program list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Program list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Program list","content":{"text/json":{}}}}}},"/api/program/{programId}/{productCategory}/planningUnit/all":{"get":{"tags":["program"],"summary":"Get Planning Unit List For Specified ProgramId and ProductCategoryId","description":"API used to get the Planning unit list for specified programId and ProductCategoryId","operationId":"getPlanningUnitForProgramAndProductCategory","parameters":[{"name":"programId","in":"path","description":"programId that you want to get Planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"productCategoryId","in":"path","description":"productCategoryId that you want to get Planning unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Planning unit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Planning unit list","content":{"text/json":{}}}}}},"/api/program/initialize":{"post":{"tags":["program"],"summary":"Add a ProgramInitialize","description":"API used to add a ProgramInitialize","operationId":"postProgramInitialize","requestBody":{"description":"ProgramInitialize object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProgramInitialize"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Program object supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/program/supplyPlanReviewer/programId/{programId}":{"get":{"tags":["program"],"summary":"Get supply plan reviewer list for specified program","description":"API used to get supply plan reviewer list for specified program","operationId":"getSupplyPlanReviewerListForProgram","parameters":[{"name":"programId","in":"path","description":"programId that you want to supply plan reviewer list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the supply plan reviewer list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of supply plan reviewer list","content":{"text/json":{}}}}}},"/api/quantimed/import/{programId}":{"post":{"tags":["quantimed"],"summary":"Format forecast data to import","description":"API used to format forecast data to import in a specified program ","operationId":"quantimedImport","parameters":[{"name":"programId","in":"path","description":"ProgramId that you want to format forecast data to import for","required":true,"schema":{"type":"string"}},{"name":"file","description":"File containing forecast data to format for import"}],"requestBody":{"description":"File containing forecast data to format for import","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary"}}}}}},"responses":{"200":{"description":"Returns a QuantimedImportDTO object if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/realmCountry/{realmCountryId}":{"get":{"tags":["realmCountry"],"summary":"Get RealmCountry for a specific RealmCountryId","description":"API used to get the RealmCountry for a specific RealmCountryId","operationId":"getRealmCountry","parameters":[{"name":"realmCountryId","in":"path","description":"RealmCountryId that you want RealmCountry for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the RealmCountry object","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if no RealmCountryId found","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of RealmCountry object","content":{"text/json":{}}}}}},"/api/realmCountry/":{"get":{"tags":["realmCountry"],"summary":"Get active RealmCountry list","description":"API used to get the complete RealmCountry list. Will only return those RealmCountries that are marked Active.","operationId":"getRealmCountry_1","responses":{"200":{"description":"Returns the RealmCountry list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if no RealmCountry found","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of RealmCountry list","content":{"text/json":{}}}}},"put":{"tags":["realmCountry"],"summary":"Update RealmCountry","description":"API used to update a RealmCountry","operationId":"putRealmCountry","requestBody":{"description":"List of RealmCountry that you want to update","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RealmCountry"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the RealmCountry supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["realmCountry"],"summary":"Add RealmCountry","description":"API used to add a RealmCountry","operationId":"postRealmCountry","requestBody":{"description":"List of RealmCountry that you want to add","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RealmCountry"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the RealmCountry supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/realmCountry/planningUnit":{"put":{"tags":["realmCountry"],"summary":"Save PlanningUnit for RealmCountry","description":"API used to save PlanningUnit for RealmCountry","operationId":"savePlanningUnitForCountry","requestBody":{"description":"Array of realmCountryPlanningUnits that you want to save","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RealmCountryPlanningUnit"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/realmCountry/programIds/planningUnit":{"put":{"tags":["realmCountry"],"summary":"Get RealmCountryPlanningUnit list for a specific programIds","description":"API used to get RealmCountryPlanningUnit list for a specific programIds","operationId":"getPlanningUnitForProgramList_1","requestBody":{"description":"Array of programIds that you want RealmCountryPlanningUnit list for","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the RealmCountryPlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if no programIds found","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of RealmCountryPlanningUnit list","content":{"text/json":{}}}}}},"/api/realmCountry/realmId/{realmId}":{"get":{"tags":["realmCountry"],"summary":"Get RealmCountry list for a specific realmId","description":"API used to get the RealmCountry list for a specific realmId","operationId":"getRealmCountryByRealmId","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want RealmCountry list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the RealmCountry list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if no realmId found","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of RealmCountry list","content":{"text/json":{}}}}}},"/api/realmCountry/{realmCountryId}/planningUnit":{"get":{"tags":["realmCountry"],"summary":"Get PlanningUnit list for a specific realmCountryId","description":"API used to get the active PlanningUnit list for a specific realmCountryId","operationId":"getPlanningUnitForCountry","parameters":[{"name":"realmCountryId","in":"path","description":"RealmCountryId that you want PlanningUnit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if no realmCountryId found","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/realmCountry/{realmCountryId}/planningUnit/all":{"get":{"tags":["realmCountry"],"summary":"Get Complete PlanningUnit list for a specific realmCountryId","description":"API used to get the complete PlanningUnit list for a specific realmCountryId","operationId":"getPlanningUnitForCountryAll","parameters":[{"name":"realmCountryId","in":"path","description":"RealmCountryId that you want PlanningUnit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the PlanningUnit list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if no realmCountryId found","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of PlanningUnit list","content":{"text/json":{}}}}}},"/api/realmCountry/program/realmId/{realmId}":{"get":{"tags":["realmCountry"],"summary":"Get RealmCountry list by specified reamId for active programs","description":"API used to get the RealmCountry list by specified reamId for active programs","operationId":"getRealmCountryByRealmIdForActivePrograms","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want RealmCountry list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the RealmCountry list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if no realmId found","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of RealmCountry list","content":{"text/json":{}}}}}},"/api/realmCountry/program":{"get":{"tags":["realmCountry"],"summary":"Get the RealmCountry list active programs","description":"API used to get the RealmCountry list active programs","operationId":"getRealmCountryForActivePrograms","responses":{"200":{"description":"Returns the RealmCountry list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if no RealmCountry found","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if a User with access to multiple Realms tried to access a RealmCountry Program list without specifying a Realm","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of RealmCountry list","content":{"text/json":{}}}}}},"/api/realm/":{"get":{"tags":["realm"],"summary":"Get Realm list","description":"API used to get the complete Realm list.","operationId":"getRealm","responses":{"200":{"description":"Returns the Realm list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Realm list","content":{"text/json":{}}}}},"put":{"tags":["realm"],"summary":"Update Realm","description":"API used to update a Realm","operationId":"updateRealm","requestBody":{"description":"The Realm object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Realm"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["realm"],"summary":"Add Realm","description":"API used to add a Realm","operationId":"addRealm","requestBody":{"description":"The Realm object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Realm"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/realm/{realmId}":{"get":{"tags":["realm"],"summary":"Get Realm for a RealmId","description":"API used to get the Realm for a specific RealmId","operationId":"getRealmById","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want to the Realm for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Realm","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Realm","content":{"text/json":{}}}}}},"/api/region/":{"get":{"tags":["region"],"summary":"Get Region list","description":"API used to get the complete Region list.","operationId":"getRegion","responses":{"200":{"description":"Returns the Region list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Region list","content":{"text/json":{}}}}},"put":{"tags":["region"],"summary":"Update Region","description":"API used to update a Region","operationId":"putRegion","requestBody":{"description":"The array of Regions that you want to update","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Region"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/region/{regionId}":{"get":{"tags":["region"],"summary":"Get Region for a RegionId","description":"API used to get the Region for a specific RegionId","operationId":"getRegionById","parameters":[{"name":"regionId","in":"path","description":"RegionId that you want to the Region for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Region","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RegionId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Region","content":{"text/json":{}}}}}},"/api/region/realmCountryId/{realmCountryId}":{"get":{"tags":["region"],"summary":"Get Region list based on RealmCountry list","description":"API used to get the Region list for a list of RealmCountry Ids. Empty list means you want the complete list of Regions","operationId":"getRegionByRealmCountry","parameters":[{"name":"realmCountryId","in":"path","description":"RealmCountryId that you want the Region list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Region list based on the RealmCountry that was passed","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Region list","content":{"text/json":{}}}}}},"/api/report/expiredStock":{"post":{"tags":["report"],"summary":"get the ExpiredStockOutput list","description":"API used to get the ExpiredStockOutput list.","operationId":"getExpiredStock","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExpiredStockInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ExpiredStockOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ExpiredStockOutput list","content":{"text/json":{}}}}}},"/api/report/costOfInventory":{"post":{"tags":["report"],"summary":"get the CostOfInventoryOutput list","description":"API used to get the CostOfInventoryOutput list.","operationId":"getCostOfInventory","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CostOfInventoryInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the CostOfInventoryOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of CostOfInventoryOutput list","content":{"text/json":{}}}}}},"/api/report/inventoryTurns":{"post":{"tags":["report"],"summary":"get the InventoryTurnsOutput list","description":"API used to get the InventoryTurnsOutput list.","operationId":"getInventoryTurns","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CostOfInventoryInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the InventoryTurnsOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of InventoryTurnsOutput list","content":{"text/json":{}}}}}},"/api/report/stockAdjustmentReport":{"post":{"tags":["report"],"summary":"get the StockAdjustmentReportOutput list","description":"API used to get the StockAdjustmentReportOutput list.","operationId":"getStockAdjustmentReport","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StockAdjustmentReportInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the StockAdjustmentReportOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of StockAdjustmentReportOutput list","content":{"text/json":{}}}}}},"/api/report/procurementAgentShipmentReport":{"post":{"tags":["report"],"summary":"get the ProcurementAgentShipmentReportOutput list","description":"API used to get the ProcurementAgentShipmentReportOutput list.","operationId":"getProcurementAgentShipmentReport","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcurementAgentShipmentReportInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ProcurementAgentShipmentReportOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProcurementAgentShipmentReportOutput list","content":{"text/json":{}}}}}},"/api/report/programLeadTimes":{"post":{"tags":["report"],"summary":"get the ProgramLeadTimesOutput list","description":"API used to get the ProgramLeadTimesOutput list.","operationId":"getProgramLeadTimes","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProgramLeadTimesInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ProgramLeadTimesOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProgramLeadTimesOutput list","content":{"text/json":{}}}}}},"/api/report/fundingSourceShipmentReport":{"post":{"tags":["report"],"summary":"get the FundingSourceShipmentReportOutput list","description":"API used to get the FundingSourceShipmentReportOutput list.","operationId":"getFundingSourceShipmentReport","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FundingSourceShipmentReportInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the FundingSourceShipmentReportOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of FundingSourceShipmentReportOutput list","content":{"text/json":{}}}}}},"/api/report/stockStatusVertical":{"post":{"tags":["report"],"summary":"get the StockStatusVerticalOutput list","description":"API used to get the StockStatusVerticalOutput list.","operationId":"getStockStatusVertical","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StockStatusVerticalInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the StockStatusVerticalOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of StockStatusVerticalOutput list","content":{"text/json":{}}}}}},"/api/report/stockStatusOverTime":{"post":{"tags":["report"],"summary":"get the StockStatusOverTimeOutput list","description":"API used to get the StockStatusOverTimeOutput list.","operationId":"getStockStatusOverTime","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StockStatusOverTimeInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the StockStatusOverTimeOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of StockStatusOverTimeOutput list","content":{"text/json":{}}}}}},"/api/report/programProductCatalog":{"post":{"tags":["report"],"summary":"get the ProgramProductCatalogOutput list","description":"API used to get the ProgramProductCatalogOutput list.","operationId":"getProgramProductCatalog_1","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProgramProductCatalogInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ProgramProductCatalogOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ProgramProductCatalogOutput list","content":{"text/json":{}}}}}},"/api/report/consumptionForecastVsActual":{"post":{"tags":["report"],"summary":"get the ConsumptionForecastVsActualOutput list","description":"API used to get the ConsumptionForecastVsActualOutput list.","operationId":"getConsumptionForecastVsActual","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConsumptionForecastVsActualInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ConsumptionForecastVsActualOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ConsumptionForecastVsActualOutput list","content":{"text/json":{}}}}}},"/api/report/globalConsumption":{"post":{"tags":["report"],"summary":"get the GlobalConsumptionOutput list","description":"API used to get the GlobalConsumptionOutput list.","operationId":"getGlobalConsumption","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GlobalConsumptionInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the GlobalConsumptionOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of GlobalConsumptionOutput list","content":{"text/json":{}}}}}},"/api/report/forecastMetricsMonthly":{"post":{"tags":["report"],"summary":"get the ForecastMetricsMonthlyOutput list","description":"API used to get the ForecastMetricsMonthlyOutput list.","operationId":"getForecastMetricsMonthly","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForecastMetricsMonthlyInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ForecastMetricsMonthlyOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastMetricsMonthlyOutput list","content":{"text/json":{}}}}}},"/api/report/forecastMetricsComparision":{"post":{"tags":["report"],"summary":"get the ForecastMetricsComparisionOutput list","description":"API used to get the ForecastMetricsComparisionOutput list.","operationId":"getForecastMetricsComparision","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForecastMetricsComparisionInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ForecastMetricsComparisionOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ForecastMetricsComparisionOutput list","content":{"text/json":{}}}}}},"/api/report/stockStatusMatrix":{"post":{"tags":["report"],"summary":"get the StockStatusMatrixOutput list","description":"API used to get the StockStatusMatrixOutput list.","operationId":"getStockStatusMatrix","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StockStatusMatrixInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the StockStatusMatrixOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of StockStatusMatrixOutput list","content":{"text/json":{}}}}}},"/api/report/shipmentDetails":{"post":{"tags":["report"],"summary":"get the ShipmentDetailsOutput object","description":"API used to get the ShipmentDetailsOutput object.","operationId":"getShipmentDetails","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShipmentDetailsInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ShipmentDetailsOutput object","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ShipmentDetailsOutput object","content":{"text/json":{}}}}}},"/api/report/shipmentOverview":{"post":{"tags":["report"],"summary":"get the ShipmentOverviewOutput object","description":"API used to get the ShipmentOverviewOutput object.","operationId":"getShipmentOverview","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShipmentOverviewInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ShipmentOverviewOutput object","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ShipmentOverviewOutput object","content":{"text/json":{}}}}}},"/api/report/shipmentGlobalDemand":{"post":{"tags":["report"],"summary":"get the ShipmentGlobalDemandOutput object","description":"API used to get the ShipmentGlobalDemandOutput object.","operationId":"getShipmentGlobalDemand","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShipmentGlobalDemandInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ShipmentGlobalDemandOutput object","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ShipmentGlobalDemandOutput object","content":{"text/json":{}}}}}},"/api/report/annualShipmentCost":{"post":{"tags":["report"],"summary":"get the AnnualShipmentCostOutput list","description":"API used to get the AnnualShipmentCostOutput list.","operationId":"getAnnualShipmentCost","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnnualShipmentCostInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the AnnualShipmentCostOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of AnnualShipmentCostOutput list","content":{"text/json":{}}}}}},"/api/report/aggregateShipmentByProduct":{"post":{"tags":["report"],"summary":"get the ShipmentReportOutput list","description":"API used to get the ShipmentReportOutput list.","operationId":"getAggregateShipmentByProduct","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShipmentReportInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the ShipmentReportOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ShipmentReportOutput list","content":{"text/json":{}}}}}},"/api/report/stockStatusForProgram":{"post":{"tags":["report"],"summary":"get the StockStatusForProgramOutput list","description":"API used to get the StockStatusForProgramOutput list.","operationId":"getStockStatusForProgram","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StockStatusForProgramInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the StockStatusForProgramOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of StockStatusForProgramOutput list","content":{"text/json":{}}}}}},"/api/report/budgetReport":{"post":{"tags":["report"],"summary":"get the BudgetReportOutput list","description":"API used to get the BudgetReportOutput list.","operationId":"getBudgetReport","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BudgetReportInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the BudgetReportOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of BudgetReportOutput list","content":{"text/json":{}}}}}},"/api/report/forecastError":{"post":{"tags":["report"],"summary":"Get Forecast error report","description":"API used to get the forecast error report.","operationId":"getForecastError","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForecastErrorInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the forecast error report","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of forecast error report","content":{"text/json":{}}}}}},"/api/report/monthlyForecast":{"post":{"tags":["report"],"summary":"Get MOnthly Forecast report","description":"API used to get the monthly forecast report.","operationId":"getMonthlyForecast","requestBody":{"description":"MonthlyForecastInput object that you want to monthly forecast report for","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MonthlyForecastInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the monthly forecast report","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of monthly forecast report","content":{"text/json":{}}}}}},"/api/report/forecastSummary":{"post":{"tags":["report"],"summary":"Get Forecast summary report","description":"API used to get the forecast summary report.","operationId":"getForecastSummary","requestBody":{"description":"ForecastSummaryInput object that you want to forecast summary report for","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForecastSummaryInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the forecast summary report","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of forecast summary report","content":{"text/json":{}}}}}},"/api/report/warehouseCapacityReport":{"post":{"tags":["report"],"summary":"get the WarehouseCapacityOutput list","description":"API used to get the WarehouseCapacityOutput list.","operationId":"getwarehouseCapacityReport","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WarehouseCapacityInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the WarehouseCapacityOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of WarehouseCapacityOutput list","content":{"text/json":{}}}}}},"/api/report/warehouseByCountry":{"post":{"tags":["report"],"summary":"get the WarehouseByCountryOutput list","description":"API used to get the WarehouseByCountryOutput list.","operationId":"getWarehouseByCountry","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WarehouseByCountryInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the WarehouseByCountryOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of WarehouseByCountryOutput list","content":{"text/json":{}}}}}},"/api/report/stockStatusAcrossProducts":{"post":{"tags":["report"],"summary":"get the StockStatusAcrossProductsOutput list","description":"API used to get the StockStatusAcrossProductsOutput list.","operationId":"getStockStatusAcrossProducts","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StockStatusAcrossProductsInput_ReportView"}}},"required":true},"responses":{"200":{"description":"Returns the StockStatusAcrossProductsOutput list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of StockStatusAcrossProductsOutput list","content":{"text/json":{}}}}}},"/api/shipmentStatus/getShipmentStatusListActive":{"get":{"tags":["shipmentStatus"],"summary":"Get Active ShipmentStatus list.","description":"API used to get the active ShipmentStatus list.","operationId":"getShipmentStatusListActive","responses":{"200":{"description":"Returns the ShipmentStatus list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of ShipmentStatus list","content":{"text/json":{}}}}}},"/api/supplier/{supplierId}":{"get":{"tags":["supplier"],"summary":"Get Supplier for a SupplierId","description":"API used to get the Supplier for a specific SupplierId","operationId":"getSupplier","parameters":[{"name":"supplierId","in":"path","description":"SupplierId that you want to the Supplier for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Supplier","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the SupplierId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Supplier","content":{"text/json":{}}}}}},"/api/supplier/":{"get":{"tags":["supplier"],"summary":"Get Supplier list","description":"API used to get the complete Supplier list.","operationId":"getSupplier_1","responses":{"200":{"description":"Returns the Supplier list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Supplier list","content":{"text/json":{}}}}},"put":{"tags":["supplier"],"summary":"Update Supplier","description":"API used to update a Supplier","operationId":"updateSupplier","requestBody":{"description":"The Supplier object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Supplier"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["supplier"],"summary":"Add Supplier","description":"API used to add a Supplier","operationId":"addSupplier","requestBody":{"description":"The Supplier object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Supplier"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/supplier/realmId/{realmId}":{"get":{"tags":["supplier"],"summary":"Get Supplier list for Realm","description":"API used to get the complete Supplier list for a Realm","operationId":"getSupplierForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the Supplier list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Supplier list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Supplier list","content":{"text/json":{}}}}}},"/api/supplyPlan/newSupplyPlan/programId/{programId}/versionId/{versionId}/rebuild/{rebuild}":{"get":{"tags":["supplyPlan"],"summary":"To rebuild supply plan based on rebuild true or false ","description":"API is to rebuild supply plan based on rebuild true or false ","operationId":"buildNewSupplyPlan","parameters":[{"name":"programId","in":"path","description":"programId that you want to rebuild supply plan for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"versionId","in":"path","description":"versionId that you want to rebuild supply plan for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"rebuild","in":"path","description":"rebuild true for rebuild supply plan , rebuild false for do not rebuild supply plan","required":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returns the success message or SimplifiedSupplyPlan list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if certain conditions to rebuild supply plan does not met","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of SimplifiedSupplyPlan list or rebuild supply plan","content":{"text/json":{}}}}}},"/api/supplyPlan/rebuildSupplyPlans":{"post":{"tags":["supplyPlan"],"summary":"To rebuild supply plan for listed programIds and versionIds ","description":"API is to rebuild supply plan for listed programIds and versionIds ","operationId":"rebuildSupplyPlans","requestBody":{"description":"pvList list of programIds and versionIds to rebuild supply plan for","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProgramIdAndVersionId"}}}},"required":true},"responses":{"200":{"description":"Returns the success/error message","content":{"text/json":{}}},"500":{"description":"Internal error that prevented rebuild supply plan","content":{"text/json":{}}}}}},"/api/acl/aclTest":{"post":{"tags":["user"],"summary":"Check for user access to specified programIds","description":"API used to check for user access to specified programIds","operationId":"postCheckAccessToProgram","requestBody":{"description":"Array of programIds to check access for ","content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int32"}}}},"required":true},"responses":{"200":{"description":"Returns a true if user has access and false if user does not access","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to get the program","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/acl/aclTestQuery":{"post":{"tags":["user"],"summary":"Check for user access to specified programIds using query","description":"API used to check for user access to specified programIds using query","operationId":"postCheckAccessViaQuery","requestBody":{"description":"Array of programIds to check access for ","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns a List of program if user has access","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to get the program","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/tracerCategory/{tracerCategoryId}":{"get":{"tags":["tracerCategory"],"summary":"Get TracerCategory for a TracerCategoryId","description":"API used to get the TracerCategory for a specific TracerCategoryId","operationId":"getTracerCategory","parameters":[{"name":"tracerCategoryId","in":"path","description":"TracerCategoryId that you want to the TracerCategory for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the TracerCategory","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the TracerCategoryId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of TracerCategory","content":{"text/json":{}}}}}},"/api/tracerCategory/":{"get":{"tags":["tracerCategory"],"summary":"Get TracerCategory list","description":"API used to get the complete TracerCategory list.","operationId":"getTracerCategory_1","responses":{"200":{"description":"Returns the TracerCategory list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of TracerCategory list","content":{"text/json":{}}}}},"put":{"tags":["tracerCategory"],"summary":"Update TracerCategory","description":"API used to update a TracerCategory","operationId":"updateTracerCategory","requestBody":{"description":"The TracerCategory object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TracerCategory"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["tracerCategory"],"summary":"Add TracerCategory","description":"API used to add a TracerCategory","operationId":"addTracerCategory","requestBody":{"description":"The TracerCategory object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TracerCategory"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/tracerCategory/realmId/{realmId}":{"get":{"tags":["tracerCategory"],"summary":"Get TracerCategory list for Realm","description":"API used to get the complete TracerCategory list for a Realm","operationId":"getTracerCategoryForRealm","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the TracerCategory list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the TracerCategory list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of TracerCategory list","content":{"text/json":{}}}}}},"/api/tracerCategory/realmId/{realmId}/programId/{programId}":{"get":{"tags":["tracerCategory"],"summary":"Get TracerCategory list for Realm and Program","description":"API used to get the complete TracerCategory list for a Realm and Program","operationId":"getTracerCategoryForRealmProgram","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the TracerCategory list for","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"programId","in":"path","description":"ProgramId that you want the TracerCategory list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the TracerCategory list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of TracerCategory list","content":{"text/json":{}}}}}},"/api/tracerCategory/realmId/{realmId}/programIds":{"post":{"tags":["tracerCategory"],"summary":"Get TracerCategory list for Realm and active ProgramPlanningUnits","description":"API used to get the TracerCategory list for a Realm. Only returns those Tracer Categories that are from Planning Units in active Programs","operationId":"getTracerCategoryForRealmPrograms","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the TracerCategory list for","required":true,"schema":{"type":"integer","format":"int32"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"Returns the TracerCategory list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of TracerCategory list","content":{"text/json":{}}}}}},"/api/treeTemplate":{"get":{"tags":["treeTemplate"],"summary":"Get active TreeTemplate list","description":"API used to get the complete TreeTemplate list. Will only return those TreeTemplates that are marked Active.","operationId":"getTreeTemplate","responses":{"200":{"description":"Returns the TreeTemplate list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of TreeTemplate list","content":{"text/json":{}}}}},"put":{"tags":["treeTemplate"],"summary":"Update TreeTemplate","description":"API used to update a TreeTemplate","operationId":"updateTreeTemplate","requestBody":{"description":"The treeTemplate object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TreeTemplate"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["treeTemplate"],"summary":"Add TreeTemplate","description":"API used to add a TreeTemplate","operationId":"addTreeTemplate","requestBody":{"description":"The TreeTemplate object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TreeTemplate"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/treeTemplate/{treeTemplateId}":{"get":{"tags":["treeTemplate"],"summary":"Get TreeTemplate based on the Id","description":"API used to get a specific TreeTemplate based on the Id.","operationId":"getTreeTemplate_1","parameters":[{"name":"treeTemplateId","in":"path","description":"treeTemplateId that you want to TreeTemplate list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the TreeTemplate for the Id","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of TreeTemplate","content":{"text/json":{}}}}}},"/api/treeTemplate/all":{"get":{"tags":["treeTemplate"],"summary":"Get complete TreeTemplate list","description":"API used to get the complete TreeTemplate list.","operationId":"getTreeTemplateAll","responses":{"200":{"description":"Returns the TreeTemplate list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of TreeTemplate list","content":{"text/json":{}}}}}},"/api/unit/{unitId}":{"get":{"tags":["unit"],"summary":"Get Unit for a UnitId","description":"API used to get the Unit for a specific UnitId","operationId":"getUnit","parameters":[{"name":"unitId","in":"path","description":"UnitId that you want to the Unit for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the Unit","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the UnitId specified does not exist","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Unit","content":{"text/json":{}}}}}},"/api/unit/":{"get":{"tags":["unit"],"summary":"Get Unit list","description":"API used to get the complete Unit list.","operationId":"getUnit_1","responses":{"200":{"description":"Returns the Unit list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Unit list","content":{"text/json":{}}}}},"put":{"tags":["unit"],"summary":"Update Unit","description":"API used to update a Unit","operationId":"updateUnit","requestBody":{"description":"The Unit object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unit"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["unit"],"summary":"Add Unit","description":"API used to add a Unit","operationId":"addUnit","requestBody":{"description":"The Unit object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unit"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/unit/unit/dimension/{dimensionId}":{"get":{"tags":["unit"],"summary":"Get unit list by dimensionId","description":"API used to get unit list by providing dimensionId","operationId":"getUnitByDimension","parameters":[{"name":"dimensionId","in":"path","description":"dimensionId that you want to the unit list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the unit list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of unit list","content":{"text/json":{}}}}}},"/api/usagePeriod":{"get":{"tags":["usagePeriod"],"summary":"Get active UsagePeriod list","description":"API used to get the complete UsagePeriod list. Will only return those UsagePeriods that are marked Active.","operationId":"getUsagePeriodList","responses":{"200":{"description":"Returns the UsagePeriod list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of UsagePeriod list","content":{"text/json":{}}}}},"post":{"tags":["usagePeriod"],"summary":"Add or Update UsagePeriod","description":"API used to add or update UsagePeriod","operationId":"addAndUpadteUsagePeriod","requestBody":{"description":"The list of UsagePeriod objects that you want to add or update. If usagePeriodId is null or 0 then it is added if usagePeriodId is not null and non 0 it is updated","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UsagePeriod"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if you do not have rights to add/update this object","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not acceptable","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/usagePeriod/all":{"get":{"tags":["usagePeriod"],"summary":"Get complete UsagePeriod list","description":"API used to get the complete UsagePeriod list.","operationId":"getUsagePeriodListAll","responses":{"200":{"description":"Returns the UsagePeriod list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of UsagePeriod list","content":{"text/json":{}}}}}},"/api/usageTemplate":{"get":{"tags":["usageTemplate"],"summary":"Get active UsageTemplate list","description":"API used to get the complete UsageTemplate list. Will only return those UsageTemplates that are marked Active.","operationId":"getUsageTemplateList","responses":{"200":{"description":"Returns the UsageTemplate list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of UsageTemplate list","content":{"text/json":{}}}}},"post":{"tags":["usageTemplate"],"summary":"Add or Update UsageTemplate","description":"API used to add or update UsageTemplate","operationId":"addAndUpadteUsageTemplate","requestBody":{"description":"The list of UsageTemplate objects that you want to add or update. If usageTemplateId is null or 0 then it is added if usageTemplateId is not null and non 0 it is updated","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UsageTemplate"}}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if you do not have rights to add/update this object","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not acceptable","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/usageTemplate/all":{"get":{"tags":["usageTemplate"],"summary":"Get complete UsageTemplate list","description":"API used to get the complete UsageTemplate list.","operationId":"getUsageTemplateListAll","responses":{"200":{"description":"Returns the UsageTemplate list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of UsageTemplate list","content":{"text/json":{}}}}}},"/api/usageTemplate/tracerCategory/{tracerCategoryId}":{"get":{"tags":["usageTemplate"],"summary":"Get active UsageTemplate list","description":"API used to get the complete UsageTemplate list. Will only return those UsageTemplates that are marked Active.","operationId":"getUsageTemplateListWihtFilters","parameters":[{"name":"tracerCategoryId","in":"path","description":"The TracerCategory that you want to filter the UsageTemplate","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the UsageTemplate list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of UsageTemplate list","content":{"text/json":{}}}}}},"/api/userManual/uploadUserManual":{"post":{"tags":["userManual"],"summary":"Upload UserManual","description":"API used to upload UserManual","operationId":"uploadUserManual","requestBody":{"description":"User manual file to upload","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary"}}}}}},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to upload the user manual","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/logout":{"get":{"tags":["user"],"summary":"Logout","description":"API used to logout","operationId":"logout","responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if token is invalid","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/":{"get":{"tags":["user"],"summary":"Get User list","description":"API used to get the User list","operationId":"getUserList","responses":{"200":{"description":"Returns the User list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of User list","content":{"text/json":{}}}}},"put":{"tags":["user"],"summary":"Update User","description":"API used to update a user","operationId":"editUser","requestBody":{"description":"user object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the Username or email id already exists","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["user"],"summary":"Add User","description":"API used to add a user","operationId":"addUser","requestBody":{"description":"user object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the Username or email id already exists","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/realmId/{realmId}":{"get":{"tags":["user"],"summary":"Get the User list for specified realmId","description":"API used to get the User list for specified realmId","operationId":"getUserList_1","parameters":[{"name":"realmId","in":"path","description":"RealmId that you want the User list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the User list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to get the User list","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of User list","content":{"text/json":{}}}}}},"/api/user/user/programId/{programId}":{"get":{"tags":["user"],"summary":"Get user list by programId","description":"API used to get user list by providing programId","operationId":"getUserListForProgram","parameters":[{"name":"programId","in":"path","description":"programId that you want to the user list for","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns the user list","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to get the User list","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of user list","content":{"text/json":{}}}}}},"/api/user/{userId}":{"get":{"tags":["user"],"summary":"Get the User object for specified userId","description":"API used to get the User object for specified userId","operationId":"getUserByUserId","parameters":[{"name":"userId","in":"path","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"realmId","description":"UserId that you want the User object for"}],"responses":{"200":{"description":"Returns the User object","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User does not have access to get the User list","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of User object","content":{"text/json":{}}}}}},"/api/user/businessFunction":{"get":{"tags":["user"],"summary":"Get BusinessFunction list","description":"API used to get the BusinessFunction list","operationId":"getBusinessFunctionList","responses":{"200":{"description":"Returns the BusinessFunction list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of BusinessFunction list","content":{"text/json":{}}}}}},"/api/user/updatePassword":{"post":{"tags":["user"],"summary":"Update password","description":"API used to update password","operationId":"updatePassword","requestBody":{"description":"EmailUser object for which password has to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailUser"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the token is invalid","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the new password is same as current password","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/language":{"post":{"tags":["user"],"summary":"Update user language","description":"API used to update user language","operationId":"updateUserLanguage","requestBody":{"description":"LanguageUser object that you want language to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LanguageUser"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/user/module/{moduleId}":{"post":{"tags":["user"],"summary":"Update a user module","description":"API used to update a user module","operationId":"updateUserModule","parameters":[{"name":"moduleId","in":"path","description":"moduleId that you want to update a user module","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/user/agreement":{"post":{"tags":["user"],"summary":"Update user agreement accepted","description":"API used to update user agreement accepted","operationId":"acceptUserAgreement","responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/role/{roleId}":{"get":{"tags":["user"],"summary":"Get Role object for a specific roleId","description":"API used to get the Role object for a specific roleId","operationId":"getRoleById","parameters":[{"name":"roleId","in":"path","description":"roleId that you want the Role Object for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the Role object","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Role","content":{"text/json":{}}}}}},"/api/user/role":{"get":{"tags":["user"],"summary":"Get Role list for current user","description":"API used to get the Role list for current user","operationId":"getRoleList","responses":{"200":{"description":"Returns the Role list","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of Role list","content":{"text/json":{}}}}},"put":{"tags":["user"],"summary":"Update Role","description":"API used to update a Role","operationId":"editRole","requestBody":{"description":"role object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Role object supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}},"post":{"tags":["user"],"summary":"Add Role","description":"API used to add a Role","operationId":"addNewRole","requestBody":{"description":"role object that you want to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"406":{"description":"Returns a HttpStatus.NOT_ACCEPTABLE if the Role object supplied is not unique","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/userDetails":{"get":{"tags":["user"],"summary":"Get userDetails for current user","description":"API used to get the userDetails for current user","operationId":"getUserDetails","responses":{"200":{"description":"Returns the User","content":{"text/json":{}}},"500":{"description":"Internal error that prevented the retreival of User","content":{"text/json":{}}}}}},"/api/user/updateExpiredPassword":{"post":{"tags":["user"],"summary":"Update Expired Password","description":"API used to update expired password","operationId":"updateExpiredPassword","requestBody":{"description":"password object that you want to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Password"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the passwords does not match","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the old password and new password does not match","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/changePassword":{"post":{"tags":["user"],"summary":"Change password","description":"API used to update changed password","operationId":"changePassword","requestBody":{"description":"password object that you want to change","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Password"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"412":{"description":"Returns a HttpStatus.PRECONDITION_FAILED if the old password and new password does not match","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/forgotPassword":{"post":{"tags":["user"],"summary":"Reset forgot password","description":"API used to reset forgot password","operationId":"forgotPassword","requestBody":{"description":"EmailUser object for which password has to reset ","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailUser"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"403":{"description":"Returns a HttpStatus.FORBIDDEN if the User is disabled","content":{"text/json":{}}},"404":{"description":"Returns a HttpStatus.NOT_FOUND if User does not exists with given Email Id.","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/confirmForgotPasswordToken":{"post":{"tags":["user"],"summary":"Confirm Forgot Password","description":"API used to confirm if forgot password token is valid","operationId":"confirmForgotPasswordToken","requestBody":{"description":"EmailUser object for which token has to validate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailUser"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}},"/api/user/accessControls":{"put":{"tags":["user"],"summary":"Map Access Control to User","description":"API used to map access controls like realmCountry, organisation, healthArea and program with specified user","operationId":"accessControl","requestBody":{"description":"user object for which access control need to map with","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"Returns a Success code if the operation was successful","content":{"text/json":{}}},"500":{"description":"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete","content":{"text/json":{}}}}}}},"components":{"schemas":{"BaseModel":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"BasicUser":{"type":"object","properties":{"userId":{"type":"integer","format":"int32"},"username":{"type":"string"}}},"Budget":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"budgetId":{"type":"integer","format":"int32"},"budgetCode":{"type":"string"},"program":{"$ref":"#/components/schemas/SimpleCodeObject"},"fundingSource":{"$ref":"#/components/schemas/FundingSource"},"label":{"$ref":"#/components/schemas/Label"},"currency":{"$ref":"#/components/schemas/Currency"},"budgetAmt":{"type":"number","format":"double"},"budgetUsdAmt":{"type":"number","format":"double"},"usedUsdAmt":{"type":"number","format":"double"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"notes":{"type":"string"},"budgetUsable":{"type":"boolean"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Currency":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"currencyId":{"type":"integer","format":"int32"},"currencyCode":{"type":"string"},"label":{"$ref":"#/components/schemas/Label"},"conversionRateToUsd":{"type":"number","format":"double"},"isSync":{"type":"boolean"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"FundingSource":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"fundingSourceId":{"type":"integer","format":"int32"},"fundingSourceCode":{"type":"string"},"label":{"$ref":"#/components/schemas/Label"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"allowedInBudget":{"type":"boolean"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Label":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"labelId":{"type":"integer","format":"int32"},"label_en":{"type":"string"},"label_sp":{"type":"string"},"label_fr":{"type":"string"},"label_pr":{"type":"string"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"SimpleCodeObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"code":{"type":"string"},"idString":{"type":"string"}}},"Batch":{"type":"object","properties":{"batchId":{"type":"integer","format":"int32"},"batchNo":{"type":"string"},"autoGenerated":{"type":"boolean"},"planningUnitId":{"type":"integer","format":"int32"},"expiryDate":{"type":"string","format":"date-time"},"createdDate":{"type":"string","format":"date-time"}}},"Consumption":{"type":"object","properties":{"consumptionId":{"type":"integer","format":"int32"},"region":{"$ref":"#/components/schemas/SimpleObject"},"planningUnit":{"$ref":"#/components/schemas/SimplePlanningUnitProductCategoryObject"},"realmCountryPlanningUnit":{"$ref":"#/components/schemas/SimpleObject"},"alternateReportingUnit":{"$ref":"#/components/schemas/SimpleObject"},"multiplier":{"type":"number","format":"double"},"conversionFactor":{"type":"number","format":"double"},"consumptionDate":{"type":"string"},"actualFlag":{"type":"boolean"},"consumptionRcpuQty":{"type":"number","format":"double"},"consumptionQty":{"type":"number","format":"double"},"dayOfStockOut":{"type":"integer","format":"int32"},"dataSource":{"$ref":"#/components/schemas/SimpleObject"},"notes":{"type":"string"},"versionId":{"type":"integer","format":"int32"},"batchInfoList":{"type":"array","items":{"$ref":"#/components/schemas/ConsumptionBatchInfo"}},"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"}}},"ConsumptionBatchInfo":{"type":"object","properties":{"consumptionTransBatchInfoId":{"type":"integer","format":"int32"},"batch":{"$ref":"#/components/schemas/Batch"},"consumptionQty":{"type":"number","format":"double"}}},"Country":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"countryId":{"type":"integer","format":"int32"},"countryCode":{"type":"string"},"countryCode2":{"type":"string"},"label":{"$ref":"#/components/schemas/Label"},"currency":{"$ref":"#/components/schemas/SimpleObject"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Criticality":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"colorHtmlCode":{"type":"string"},"idString":{"type":"string"}}},"Inventory":{"type":"object","properties":{"inventoryId":{"type":"integer","format":"int32"},"inventoryDate":{"type":"string"},"region":{"$ref":"#/components/schemas/SimpleObject"},"realmCountryPlanningUnit":{"$ref":"#/components/schemas/SimpleObject"},"alternateReportingUnit":{"$ref":"#/components/schemas/SimpleObject"},"planningUnit":{"$ref":"#/components/schemas/SimplePlanningUnitProductCategoryObject"},"multiplier":{"type":"number","format":"double"},"conversionFactor":{"type":"number","format":"double"},"actualQty":{"type":"number","format":"double"},"adjustmentQty":{"type":"number","format":"double"},"expectedBal":{"type":"number","format":"double"},"dataSource":{"$ref":"#/components/schemas/SimpleObject"},"notes":{"type":"string"},"versionId":{"type":"integer","format":"int32"},"batchInfoList":{"type":"array","items":{"$ref":"#/components/schemas/InventoryBatchInfo"}},"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"}}},"InventoryBatchInfo":{"type":"object","properties":{"inventoryTransBatchInfoId":{"type":"integer","format":"int32"},"batch":{"$ref":"#/components/schemas/Batch"},"adjustmentQty":{"type":"number","format":"double"},"actualQty":{"type":"number","format":"double"}}},"Problem":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"problemId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"problemCategory":{"$ref":"#/components/schemas/SimpleObject"},"actionUrl":{"type":"string"},"actionLabel":{"$ref":"#/components/schemas/Label"},"actualConsumptionTrigger":{"type":"boolean"},"forecastedConsumptionTrigger":{"type":"boolean"},"inventoryTrigger":{"type":"boolean"},"adjustmentTrigger":{"type":"boolean"},"shipmentTrigger":{"type":"boolean"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProblemReport":{"type":"object","properties":{"problemReportId":{"type":"integer","format":"int32"},"program":{"$ref":"#/components/schemas/SimpleCodeObject"},"versionId":{"type":"integer","format":"int32"},"realmProblem":{"$ref":"#/components/schemas/RealmProblem"},"dt":{"type":"string"},"region":{"$ref":"#/components/schemas/SimpleObject"},"planningUnit":{"$ref":"#/components/schemas/SimpleObject"},"shipmentId":{"type":"integer","format":"int32"},"data5":{"type":"string"},"problemCategory":{"$ref":"#/components/schemas/SimpleObject"},"problemStatus":{"$ref":"#/components/schemas/SimpleObject"},"problemType":{"$ref":"#/components/schemas/SimpleObject"},"reviewed":{"type":"boolean"},"reviewNotes":{"type":"string"},"reviewedDate":{"type":"string","format":"date-time"},"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"problemTransList":{"type":"array","items":{"$ref":"#/components/schemas/ProblemReportTrans"}}}},"ProblemReportTrans":{"type":"object","properties":{"problemReportTransId":{"type":"integer","format":"int32"},"problemStatus":{"$ref":"#/components/schemas/SimpleObject"},"notes":{"type":"string"},"reviewed":{"type":"boolean"},"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"}}},"ProgramData":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"programId":{"type":"integer","format":"int32"},"programCode":{"type":"string"},"realmCountry":{"$ref":"#/components/schemas/RealmCountry"},"organisation":{"$ref":"#/components/schemas/SimpleCodeObject"},"healthAreaList":{"type":"array","items":{"$ref":"#/components/schemas/SimpleCodeObject"}},"label":{"$ref":"#/components/schemas/Label"},"programManager":{"$ref":"#/components/schemas/BasicUser"},"programNotes":{"type":"string"},"airFreightPerc":{"type":"number","format":"double"},"seaFreightPerc":{"type":"number","format":"double"},"plannedToSubmittedLeadTime":{"type":"number","format":"double"},"submittedToApprovedLeadTime":{"type":"number","format":"double"},"approvedToShippedLeadTime":{"type":"number","format":"double"},"shippedToArrivedByAirLeadTime":{"type":"number","format":"double"},"shippedToArrivedBySeaLeadTime":{"type":"number","format":"double"},"arrivedToDeliveredLeadTime":{"type":"number","format":"double"},"versionType":{"$ref":"#/components/schemas/SimpleObject"},"versionStatus":{"$ref":"#/components/schemas/SimpleObject"},"notes":{"type":"string"},"regionList":{"type":"array","items":{"$ref":"#/components/schemas/Region"}},"currentVersion":{"$ref":"#/components/schemas/Version"},"versionList":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"consumptionList":{"type":"array","items":{"$ref":"#/components/schemas/Consumption"}},"inventoryList":{"type":"array","items":{"$ref":"#/components/schemas/Inventory"}},"shipmentList":{"type":"array","items":{"$ref":"#/components/schemas/Shipment"}},"batchInfoList":{"type":"array","items":{"$ref":"#/components/schemas/Batch"}},"problemReportList":{"type":"array","items":{"$ref":"#/components/schemas/ProblemReport"}},"supplyPlan":{"type":"array","items":{"$ref":"#/components/schemas/SimplifiedSupplyPlan"}},"requestedProgramVersion":{"type":"integer","format":"int32"},"planningUnitList":{"type":"array","items":{"$ref":"#/components/schemas/SimplePlanningUnitForSupplyPlanObject"}},"procurementAgentList":{"type":"array","items":{"$ref":"#/components/schemas/SimpleCodeObject"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Realm":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"realmId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"realmCode":{"type":"string"},"defaultRealm":{"type":"boolean"},"minMosMinGaurdrail":{"type":"integer","format":"int32"},"minMosMaxGaurdrail":{"type":"integer","format":"int32"},"maxMosMaxGaurdrail":{"type":"integer","format":"int32"},"minQplTolerance":{"type":"integer","format":"int32"},"minQplToleranceCutOff":{"type":"integer","format":"int32"},"maxQplTolerance":{"type":"integer","format":"int32"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"RealmCountry":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"realmCountryId":{"type":"integer","format":"int32"},"country":{"$ref":"#/components/schemas/Country"},"realm":{"$ref":"#/components/schemas/Realm"},"defaultCurrency":{"$ref":"#/components/schemas/Currency"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"RealmProblem":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"realmProblemId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"problem":{"$ref":"#/components/schemas/Problem"},"criticality":{"$ref":"#/components/schemas/Criticality"},"data1":{"type":"string"},"data2":{"type":"string"},"data3":{"type":"string"},"problemType":{"$ref":"#/components/schemas/SimpleObject"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Region":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"regionId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"realmCountry":{"$ref":"#/components/schemas/RealmCountry"},"gln":{"type":"string"},"capacityCbm":{"type":"number","format":"double"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Shipment":{"type":"object","properties":{"shipmentId":{"type":"integer","format":"int32"},"parentShipmentId":{"type":"integer","format":"int32"},"planningUnit":{"$ref":"#/components/schemas/SimplePlanningUnitProductCategoryObject"},"expectedDeliveryDate":{"type":"string"},"suggestedQty":{"type":"integer","format":"int64"},"procurementAgent":{"$ref":"#/components/schemas/SimpleProcurementAgentObject"},"budget":{"$ref":"#/components/schemas/SimpleBudgetObject"},"fundingSource":{"$ref":"#/components/schemas/SimpleCodeObject"},"procurementUnit":{"$ref":"#/components/schemas/SimpleObject"},"supplier":{"$ref":"#/components/schemas/SimpleObject"},"shipmentQty":{"type":"integer","format":"int64"},"conversionFactor":{"type":"number","format":"double"},"rate":{"type":"number","format":"double"},"currency":{"$ref":"#/components/schemas/Currency"},"productCost":{"type":"number","format":"double"},"shipmentMode":{"type":"string"},"freightCost":{"type":"number","format":"double"},"plannedDate":{"type":"string"},"submittedDate":{"type":"string"},"approvedDate":{"type":"string"},"shippedDate":{"type":"string"},"arrivedDate":{"type":"string"},"receivedDate":{"type":"string"},"shipmentStatus":{"$ref":"#/components/schemas/SimpleObject"},"notes":{"type":"string"},"dataSource":{"$ref":"#/components/schemas/SimpleObject"},"accountFlag":{"type":"boolean"},"erpFlag":{"type":"boolean"},"orderNo":{"type":"string"},"primeLineNo":{"type":"string"},"emergencyOrder":{"type":"boolean"},"localProcurement":{"type":"boolean"},"versionId":{"type":"integer","format":"int32"},"batchInfoList":{"type":"array","items":{"$ref":"#/components/schemas/ShipmentBatchInfo"}},"active":{"type":"boolean"},"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"}}},"ShipmentBatchInfo":{"type":"object","properties":{"shipmentTransBatchInfoId":{"type":"integer","format":"int32"},"batch":{"$ref":"#/components/schemas/Batch"},"shipmentQty":{"type":"integer","format":"int64"}}},"SimpleBatchQuantity":{"type":"object","properties":{"batchId":{"type":"integer","format":"int32"},"batchNo":{"type":"string"},"expiryDate":{"type":"string","format":"date-time"},"autoGenerated":{"type":"boolean"},"qty":{"type":"integer","format":"int64"},"qtyWps":{"type":"integer","format":"int64"},"expiredQty":{"type":"integer","format":"int64"},"expiredQtyWps":{"type":"integer","format":"int64"},"consumptionQty":{"type":"integer","format":"int64"},"stockQty":{"type":"integer","format":"int64"},"adjustmentQty":{"type":"integer","format":"int64"},"shipmentQty":{"type":"integer","format":"int64"},"shipmentQtyWps":{"type":"integer","format":"int64"},"unallocatedQty":{"type":"integer","format":"int64"},"unallocatedQtyWps":{"type":"integer","format":"int64"},"openingBalance":{"type":"integer","format":"int64"},"openingBalanceWps":{"type":"integer","format":"int64"},"createdDate":{"type":"string","format":"date-time"}}},"SimpleBudgetObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"code":{"type":"string"},"currency":{"$ref":"#/components/schemas/Currency"},"idString":{"type":"string"}}},"SimpleForecastingUnitProductCategoryObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"productCategory":{"$ref":"#/components/schemas/SimpleObject"},"idString":{"type":"string"}}},"SimpleObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"idString":{"type":"string"}}},"SimplePlanningUnitForSupplyPlanObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"forecastingUnit":{"$ref":"#/components/schemas/SimpleObject"},"active":{"type":"boolean"},"conversionFactor":{"type":"number","format":"double"},"procurementAgentSkuList":{"type":"array","items":{"$ref":"#/components/schemas/SimpleProcurementAgentSkuObject"}},"monthsInFutureForAmc":{"type":"integer","format":"int32"},"monthsInPastForAmc":{"type":"integer","format":"int32"},"reorderFrequencyInMonths":{"type":"integer","format":"int32"},"minMonthsOfStock":{"type":"integer","format":"int32"},"productCategory":{"$ref":"#/components/schemas/SimpleObject"},"idString":{"type":"string"}}},"SimplePlanningUnitProductCategoryObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"forecastingUnit":{"$ref":"#/components/schemas/SimpleForecastingUnitProductCategoryObject"},"idString":{"type":"string"}}},"SimpleProcurementAgentObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"code":{"type":"string"},"colorHtmlCode":{"type":"string"},"idString":{"type":"string"}}},"SimpleProcurementAgentSkuObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"code":{"type":"string"},"skuCode":{"type":"string"},"active":{"type":"boolean"},"idString":{"type":"string"}}},"SimplifiedSupplyPlan":{"type":"object","properties":{"supplyPlanId":{"type":"integer","format":"int32"},"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"planningUnitId":{"type":"integer","format":"int32"},"conversionFactor":{"type":"number","format":"double"},"transDate":{"type":"string"},"actualFlag":{"type":"boolean"},"consumptionQty":{"type":"integer","format":"int64"},"receivedShipmentsTotalData":{"type":"integer","format":"int64"},"shippedShipmentsTotalData":{"type":"integer","format":"int64"},"approvedShipmentsTotalData":{"type":"integer","format":"int64"},"submittedShipmentsTotalData":{"type":"integer","format":"int64"},"plannedShipmentsTotalData":{"type":"integer","format":"int64"},"onholdShipmentsTotalData":{"type":"integer","format":"int64"},"receivedErpShipmentsTotalData":{"type":"integer","format":"int64"},"shippedErpShipmentsTotalData":{"type":"integer","format":"int64"},"approvedErpShipmentsTotalData":{"type":"integer","format":"int64"},"submittedErpShipmentsTotalData":{"type":"integer","format":"int64"},"plannedErpShipmentsTotalData":{"type":"integer","format":"int64"},"onholdErpShipmentsTotalData":{"type":"integer","format":"int64"},"stockQty":{"type":"integer","format":"int64"},"adjustmentQty":{"type":"integer","format":"int64"},"regionCount":{"type":"integer","format":"int32"},"regionCountForStock":{"type":"integer","format":"int32"},"amc":{"type":"number","format":"double"},"amcCount":{"type":"integer","format":"int32"},"minStock":{"type":"number","format":"double"},"minStockMoS":{"type":"number","format":"double"},"maxStock":{"type":"number","format":"double"},"maxStockMoS":{"type":"number","format":"double"},"batchDetails":{"type":"array","items":{"$ref":"#/components/schemas/SimpleBatchQuantity"}},"expiredStock":{"type":"integer","format":"int64"},"expiredStockWps":{"type":"integer","format":"int64"},"unmetDemand":{"type":"integer","format":"int64"},"unmetDemandWps":{"type":"integer","format":"int64"},"openingBalance":{"type":"integer","format":"int64"},"openingBalanceWps":{"type":"integer","format":"int64"},"closingBalance":{"type":"integer","format":"int64"},"closingBalanceWps":{"type":"integer","format":"int64"},"nationalAdjustment":{"type":"integer","format":"int64"},"nationalAdjustmentWps":{"type":"integer","format":"int64"},"mos":{"type":"number","format":"double"},"mosWps":{"type":"number","format":"double"},"shipmentTotalQty":{"type":"integer","format":"int64"},"manualTotalQty":{"type":"integer","format":"int64"},"erpTotalQty":{"type":"integer","format":"int64"}}},"Version":{"type":"object","properties":{"versionId":{"type":"integer","format":"int32"},"versionType":{"$ref":"#/components/schemas/SimpleObject"},"versionStatus":{"$ref":"#/components/schemas/SimpleObject"},"notes":{"type":"string"},"createdBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedDate":{"type":"string","format":"date-time"},"forecastStartDate":{"type":"string","format":"date-time"},"forecastStopDate":{"type":"string","format":"date-time"},"daysInMonth":{"type":"integer","format":"int32"},"freightPerc":{"type":"number","format":"double"},"forecastThresholdHighPerc":{"type":"number","format":"double"},"forecastThresholdLowPerc":{"type":"number","format":"double"}}},"CommitRequestInput":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"programIds":{"type":"array","items":{"type":"string"}},"programIdsString":{"type":"string"},"startDateString":{"type":"string"},"stopDateString":{"type":"string"}}},"DataSource":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"dataSourceId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"program":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"dataSourceType":{"$ref":"#/components/schemas/SimpleObject"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"DataSourceType":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"dataSourceTypeId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProgramIdAndVersionId":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"}}},"Program":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"programId":{"type":"integer","format":"int32"},"programCode":{"type":"string"},"realmCountry":{"$ref":"#/components/schemas/RealmCountry"},"organisation":{"$ref":"#/components/schemas/SimpleCodeObject"},"healthAreaList":{"type":"array","items":{"$ref":"#/components/schemas/SimpleCodeObject"}},"label":{"$ref":"#/components/schemas/Label"},"programManager":{"$ref":"#/components/schemas/BasicUser"},"programNotes":{"type":"string"},"airFreightPerc":{"type":"number","format":"double"},"seaFreightPerc":{"type":"number","format":"double"},"plannedToSubmittedLeadTime":{"type":"number","format":"double"},"submittedToApprovedLeadTime":{"type":"number","format":"double"},"approvedToShippedLeadTime":{"type":"number","format":"double"},"shippedToArrivedByAirLeadTime":{"type":"number","format":"double"},"shippedToArrivedBySeaLeadTime":{"type":"number","format":"double"},"arrivedToDeliveredLeadTime":{"type":"number","format":"double"},"programTypeId":{"type":"integer","format":"int32"},"regionList":{"type":"array","items":{"$ref":"#/components/schemas/Region"}},"currentVersion":{"$ref":"#/components/schemas/Version"},"versionList":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"healthAreaArray":{"type":"array","items":{"type":"string"}},"regionArray":{"type":"array","items":{"type":"string"}},"healthAreaIdList":{"type":"array","items":{"type":"integer","format":"int32"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Dimension":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"dimensionId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"EquivalencyUnit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"equivalencyUnitId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"healthAreaList":{"type":"array","items":{"$ref":"#/components/schemas/SimpleCodeObject"}},"label":{"$ref":"#/components/schemas/Label"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"EquivalencyUnitMapping":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"equivalencyUnitMappingId":{"type":"integer","format":"int32"},"equivalencyUnit":{"$ref":"#/components/schemas/EquivalencyUnit"},"forecastingUnit":{"$ref":"#/components/schemas/SimpleObject"},"unit":{"$ref":"#/components/schemas/SimpleCodeObject"},"tracerCategory":{"$ref":"#/components/schemas/SimpleObject"},"convertToEu":{"type":"number","format":"double"},"notes":{"type":"string"},"program":{"$ref":"#/components/schemas/SimpleCodeObject"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ForecastMethod":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"forecastMethodId":{"type":"integer","format":"int32"},"forecastMethodTypeId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ForecastingUnit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"forecastingUnitId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"genericLabel":{"$ref":"#/components/schemas/Label"},"label":{"$ref":"#/components/schemas/Label"},"productCategory":{"$ref":"#/components/schemas/SimpleObject"},"tracerCategory":{"$ref":"#/components/schemas/SimpleObject"},"unit":{"$ref":"#/components/schemas/SimpleCodeObject"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"HealthArea":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"healthAreaId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"healthAreaCode":{"type":"string"},"realmCountryArray":{"type":"array","items":{"type":"string"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Integration":{"type":"object","properties":{"integrationId":{"type":"integer","format":"int32"},"integrationName":{"type":"string"},"realm":{"$ref":"#/components/schemas/SimpleObject"},"folderLocation":{"type":"string"},"fileName":{"type":"string"},"integrationView":{"$ref":"#/components/schemas/IntegrationView"}}},"IntegrationProgram":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"integrationProgramId":{"type":"integer","format":"int32"},"integration":{"$ref":"#/components/schemas/Integration"},"program":{"$ref":"#/components/schemas/SimpleObject"},"versionType":{"$ref":"#/components/schemas/SimpleObject"},"versionStatus":{"$ref":"#/components/schemas/SimpleObject"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"IntegrationView":{"type":"object","properties":{"integrationViewId":{"type":"integer","format":"int32"},"integrationViewDesc":{"type":"string"},"integrationViewName":{"type":"string"}}},"Language":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"languageId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"languageCode":{"type":"string"},"countryCode":{"type":"string"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ModelingType":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"modelingTypeId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Organisation":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"organisationId":{"type":"integer","format":"int32"},"organisationCode":{"type":"string"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"organisationType":{"$ref":"#/components/schemas/SimpleObject"},"label":{"$ref":"#/components/schemas/Label"},"realmCountryArray":{"type":"array","items":{"type":"string"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"OrganisationType":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"organisationTypeId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"QatTempShipment":{"type":"object","properties":{"shipmentId":{"type":"integer","format":"int32"},"planningUnit":{"type":"string"},"expectedDeliveryDate":{"type":"string","format":"date-time"},"suggestedQty":{"type":"number","format":"double"},"procurementAgent":{"type":"string"},"procurementUnit":{"type":"string"},"supplier":{"type":"string"},"quantity":{"type":"number","format":"double"},"rate":{"type":"number","format":"double"},"productCost":{"type":"number","format":"double"},"shipmentMode":{"type":"string"},"freightCost":{"type":"number","format":"double"},"plannedDate":{"type":"string","format":"date-time"},"submittedDate":{"type":"string","format":"date-time"},"approvedDate":{"type":"string","format":"date-time"},"shippedDate":{"type":"string","format":"date-time"},"arrivedDate":{"type":"string","format":"date-time"},"receivedDate":{"type":"string","format":"date-time"},"shipmentStatus":{"type":"string"},"notes":{"type":"string"},"dataSource":{"type":"string"},"accountFlag":{"type":"boolean"},"erpFlag":{"type":"boolean"},"versionId":{"type":"integer","format":"int32"},"fundingSource":{"type":"string"},"active":{"type":"boolean"}}},"Pipeline":{"type":"object","properties":{"commodityprice":{"type":"array","items":{"$ref":"#/components/schemas/PplCommodityprice"}},"consumption":{"type":"array","items":{"$ref":"#/components/schemas/PplConsumption"}},"datasource":{"type":"array","items":{"$ref":"#/components/schemas/PplDatasource"}},"fundingsource":{"type":"array","items":{"$ref":"#/components/schemas/PplFundingsource"}},"inventory":{"type":"array","items":{"$ref":"#/components/schemas/PplInventory"}},"method":{"type":"array","items":{"$ref":"#/components/schemas/PplMethod"}},"monthlystockarchive":{"type":"array","items":{"$ref":"#/components/schemas/PplMonthlystockarchive"}},"paste_errors":{"type":"array","items":{"$ref":"#/components/schemas/PplPasterrors"}},"product":{"type":"array","items":{"$ref":"#/components/schemas/PplProduct"}},"productfreightcost":{"type":"array","items":{"$ref":"#/components/schemas/PplProductfreightcost"}},"productsuppliercasesize":{"type":"array","items":{"$ref":"#/components/schemas/PplProductsuppliercasesize"}},"programinfo":{"type":"array","items":{"$ref":"#/components/schemas/PplPrograminfo"}},"shipment":{"type":"array","items":{"$ref":"#/components/schemas/PplShipment"}},"source":{"type":"array","items":{"$ref":"#/components/schemas/PplSource"}},"tblbe_version":{"type":"array","items":{"$ref":"#/components/schemas/PplTblbe_version"}},"tblimportproducts":{"type":"array","items":{"$ref":"#/components/schemas/PplTblimportproducts"}},"tblimportrecords":{"type":"array","items":{"$ref":"#/components/schemas/PplTblimportrecords"}}}},"PplCommodityprice":{"type":"object","properties":{"productid":{"type":"string"},"supplierid":{"type":"string"},"dtmeffective":{"type":"string","format":"date-time"},"unitprice":{"type":"number","format":"double"},"dtmchanged":{"type":"string","format":"date-time"},"user":{"type":"string"},"note":{"type":"string"},"fuserdefined":{"type":"boolean"},"pipelineId":{"type":"integer","format":"int32"}}},"PplConsumption":{"type":"object","properties":{"productid":{"type":"string"},"consstartyear":{"type":"integer","format":"int32"},"consstartmonth":{"type":"integer","format":"int32"},"consactualflag":{"type":"boolean"},"consnummonths":{"type":"integer","format":"int32"},"consamount":{"type":"number","format":"double"},"consdatasourceid":{"type":"string"},"consiflator":{"type":"number","format":"double"},"consnote":{"type":"string"},"consdatechanged":{"type":"string","format":"date-time"},"consid":{"type":"integer","format":"int32"},"consdisplaynote":{"type":"boolean"},"old_consumption":{"type":"number","format":"double"},"pipelineId":{"type":"integer","format":"int32"},"conDate":{"type":"string"}}},"PplDatasource":{"type":"object","properties":{"datasourceid":{"type":"string"},"datasourcename":{"type":"string"},"datasourcetypeid":{"type":"string"},"pipelineId":{"type":"integer","format":"int32"}}},"PplFundingsource":{"type":"object","properties":{"fundingsourceid":{"type":"string"},"fundingsourcename":{"type":"string"},"fundingnote":{"type":"string"},"pipelineId":{"type":"integer","format":"int32"}}},"PplInventory":{"type":"object","properties":{"productid":{"type":"string"},"period":{"type":"string","format":"date-time"},"invamount":{"type":"number","format":"double"},"invtransferflag":{"type":"boolean"},"invnote":{"type":"string"},"invdatechanged":{"type":"string","format":"date-time"},"ctrindex":{"type":"integer","format":"int32"},"invdisplaynote":{"type":"boolean"},"invdatasourceid":{"type":"string"},"fimported":{"type":"boolean"},"old_inventory":{"type":"number","format":"double"},"pipelineId":{"type":"integer","format":"int32"},"inventoryDate":{"type":"string"}}},"PplMethod":{"type":"object","properties":{"methodid":{"type":"string"},"methodname":{"type":"string"},"cypfactor":{"type":"number","format":"double"},"methodnote":{"type":"string"},"parentid":{"type":"integer","format":"int32"},"categoryid":{"type":"integer","format":"int32"},"frollup":{"type":"boolean"},"pipelineId":{"type":"integer","format":"int32"}}},"PplMonthlystockarchive":{"type":"object","properties":{"productid":{"type":"string"},"eoybalance":{"type":"number","format":"double"},"stockyear":{"type":"integer","format":"int32"},"stockmonth":{"type":"integer","format":"int32"},"pipelineId":{"type":"integer","format":"int32"}}},"PplPasterrors":{"type":"object","properties":{"f1":{"type":"string"},"f2":{"type":"string"},"f3":{"type":"number","format":"double"},"pipelineId":{"type":"integer","format":"int32"}}},"PplProduct":{"type":"object","properties":{"productid":{"type":"string"},"productname":{"type":"string"},"productminmonths":{"type":"integer","format":"int32"},"productmaxmonths":{"type":"integer","format":"int32"},"supplierid":{"type":"string"},"methodid":{"type":"string"},"productactiveflag":{"type":"boolean"},"productactivedate":{"type":"string","format":"date-time"},"defaultcasesize":{"type":"integer","format":"int32"},"productnote":{"type":"string"},"prodcmax":{"type":"integer","format":"int32"},"prodcmin":{"type":"integer","format":"int32"},"proddesstock":{"type":"integer","format":"int32"},"txtinnovatordrugname":{"type":"string"},"dbllowestunitqty":{"type":"number","format":"double"},"txtlowestunitmeasure":{"type":"string"},"txtsubstitutionlist":{"type":"string"},"fpermittedincountry":{"type":"boolean"},"memavailabilitynotes":{"type":"string"},"favailabilitystatus":{"type":"boolean"},"fuserdefined":{"type":"boolean"},"strimportsource":{"type":"string"},"buconversion":{"type":"integer","format":"int32"},"txtpreferencenotes":{"type":"string"},"lngamcstart":{"type":"integer","format":"int32"},"lngamcmonths":{"type":"integer","format":"int32"},"famcchanged":{"type":"boolean"},"txtmigrationstatus":{"type":"integer","format":"int32"},"txtmigrationstatusdate":{"type":"string","format":"date-time"},"strtype":{"type":"string"},"oldproductid":{"type":"string"},"oldproductname":{"type":"string"},"lngbatch":{"type":"integer","format":"int32"},"oldmethodid":{"type":"string"},"pipelineId":{"type":"integer","format":"int32"}}},"PplProductfreightcost":{"type":"object","properties":{"productid":{"type":"string"},"supplierid":{"type":"string"},"freightcost":{"type":"number","format":"double"},"dtmchanged":{"type":"string","format":"date-time"},"pipelineId":{"type":"integer","format":"int32"}}},"PplProductsuppliercasesize":{"type":"object","properties":{"productid":{"type":"string"},"supplierid":{"type":"string"},"dtmeffective":{"type":"string","format":"date-time"},"intcasesize":{"type":"integer","format":"int32"},"dtmchanged":{"type":"string","format":"date-time"},"user":{"type":"string"},"note":{"type":"string"},"pipelineId":{"type":"integer","format":"int32"}}},"PplPrograminfo":{"type":"object","properties":{"programname":{"type":"string"},"datadirectory":{"type":"string"},"language":{"type":"string"},"defaultleadtimeplan":{"type":"number","format":"double"},"defaultleadtimeorder":{"type":"number","format":"double"},"defaultleadtimeship":{"type":"number","format":"double"},"defaultshipcost":{"type":"number","format":"double"},"programcontact":{"type":"string"},"telephone":{"type":"string"},"fax":{"type":"string"},"email":{"type":"string"},"countrycode":{"type":"string"},"countryname":{"type":"string"},"iscurrent":{"type":"boolean"},"note":{"type":"string"},"programcode":{"type":"string"},"isactive":{"type":"boolean"},"startsize":{"type":"string"},"isdefault":{"type":"boolean"},"archivedate":{"type":"string","format":"date-time"},"archiveyear":{"type":"integer","format":"int32"},"archiveinclude":{"type":"boolean"},"pipelineId":{"type":"integer","format":"int32"}}},"PplShipment":{"type":"object","properties":{"shipmentid":{"type":"string"},"productid":{"type":"string"},"supplierid":{"type":"string"},"shipdatasourceid":{"type":"string"},"shipamount":{"type":"number","format":"double"},"shipplanneddate":{"type":"string","format":"date-time"},"shipordereddate":{"type":"string","format":"date-time"},"shipshippeddate":{"type":"string","format":"date-time"},"shipreceiveddate":{"type":"string","format":"date-time"},"shipstatuscode":{"type":"string"},"shipnote":{"type":"string"},"shipdatechanged":{"type":"string","format":"date-time"},"shipfreightcost":{"type":"number","format":"double"},"shipvalue":{"type":"number","format":"double"},"shipcaselot":{"type":"integer","format":"int32"},"shipdisplaynote":{"type":"boolean"},"shippo":{"type":"string"},"old_shipment":{"type":"number","format":"double"},"shipfundingsourceid":{"type":"string"},"pipelineId":{"type":"integer","format":"int32"}}},"PplSource":{"type":"object","properties":{"supplierid":{"type":"string"},"suppliername":{"type":"string"},"supplierleadtimeplan":{"type":"number","format":"double"},"supplierleadtimeorder":{"type":"number","format":"double"},"supplierleadtimeship":{"type":"number","format":"double"},"suppliernote":{"type":"string"},"freight":{"type":"number","format":"double"},"defaultsupplier":{"type":"boolean"},"pipelineId":{"type":"integer","format":"int32"}}},"PplTblbe_version":{"type":"object","properties":{"sbe_version":{"type":"string"},"dtmupdated":{"type":"string","format":"date-time"},"pipelineId":{"type":"integer","format":"int32"}}},"PplTblimportproducts":{"type":"object","properties":{"strproductid":{"type":"string"},"strname":{"type":"string"},"strdose":{"type":"string"},"lngcyp":{"type":"number","format":"double"},"dtmexport":{"type":"string","format":"date-time"},"fprocessed":{"type":"boolean"},"lngid":{"type":"integer","format":"int32"},"strsource":{"type":"string"},"strmapping":{"type":"string"},"pipelineId":{"type":"integer","format":"int32"}}},"PplTblimportrecords":{"type":"object","properties":{"strproductid":{"type":"string"},"dtmperiod":{"type":"string","format":"date-time"},"lngconsumption":{"type":"integer","format":"int32"},"lngadjustment":{"type":"integer","format":"int32"},"dbldatainterval":{"type":"number","format":"double"},"lngparentid":{"type":"integer","format":"int32"},"pipelineId":{"type":"integer","format":"int32"}}},"QatTempProgram":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"programId":{"type":"integer","format":"int32"},"programCode":{"type":"string"},"realmCountry":{"$ref":"#/components/schemas/RealmCountry"},"organisation":{"$ref":"#/components/schemas/SimpleCodeObject"},"healthAreaList":{"type":"array","items":{"$ref":"#/components/schemas/SimpleCodeObject"}},"label":{"$ref":"#/components/schemas/Label"},"programManager":{"$ref":"#/components/schemas/BasicUser"},"programNotes":{"type":"string"},"airFreightPerc":{"type":"number","format":"double"},"seaFreightPerc":{"type":"number","format":"double"},"plannedToSubmittedLeadTime":{"type":"number","format":"double"},"submittedToApprovedLeadTime":{"type":"number","format":"double"},"approvedToShippedLeadTime":{"type":"number","format":"double"},"shippedToArrivedByAirLeadTime":{"type":"number","format":"double"},"shippedToArrivedBySeaLeadTime":{"type":"number","format":"double"},"arrivedToDeliveredLeadTime":{"type":"number","format":"double"},"monthsInPastForAmc":{"type":"integer","format":"int32"},"monthsInFutureForAmc":{"type":"integer","format":"int32"},"shelfLife":{"type":"number","format":"double"},"regionList":{"type":"array","items":{"$ref":"#/components/schemas/Region"}},"regionArray":{"type":"array","items":{"type":"string"}},"currentVersion":{"$ref":"#/components/schemas/Version"},"versionList":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"healthAreaArray":{"type":"array","items":{"type":"string"}},"healthAreaIdList":{"type":"array","items":{"type":"integer","format":"int32"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"QatTempProgramPlanningUnit":{"type":"object","properties":{"programPlanningUnitId":{"type":"string"},"program":{"$ref":"#/components/schemas/SimpleObject"},"planningUnitId":{"type":"string"},"multiplier":{"type":"number","format":"double"},"reorderFrequencyInMonths":{"type":"integer","format":"int32"},"minMonthsOfStock":{"type":"integer","format":"int32"},"productCategoryId":{"type":"integer","format":"int32"},"pipelineProductName":{"type":"string"},"pipelineProductCategoryName":{"type":"string"},"localProcurmentLeadTime":{"type":"number","format":"double"},"shelfLife":{"type":"integer","format":"int32"},"catalogPrice":{"type":"number","format":"double"},"monthsInPastForAmc":{"type":"integer","format":"int32"},"monthsInFutureForAmc":{"type":"integer","format":"int32"},"active":{"type":"boolean"}}},"QatTempConsumption":{"type":"object","properties":{"consumptionId":{"type":"integer","format":"int32"},"regionId":{"type":"string"},"planningUnitId":{"type":"string"},"consumptionDate":{"type":"string"},"actualFlag":{"type":"boolean"},"consumptionQty":{"type":"number","format":"double"},"dayOfStockOut":{"type":"integer","format":"int32"},"dataSourceId":{"type":"string"},"consNumMonth":{"type":"integer","format":"int32"},"notes":{"type":"string"},"realmCountryPlanningUnitId":{"type":"integer","format":"int32"},"multiplier":{"type":"number","format":"double"}}},"QatTempInventory":{"type":"object","properties":{"planningUnitId":{"type":"string"},"dataSourceId":{"type":"string"},"regionId":{"type":"string"},"inventoryDate":{"type":"string"},"inventory":{"type":"integer","format":"int64"},"manualAdjustment":{"type":"integer","format":"int64"},"notes":{"type":"string"},"active":{"type":"boolean"},"realmCountryPlanningUnitId":{"type":"integer","format":"int32"},"multiplier":{"type":"number","format":"double"}}},"QatTempDataSource":{"type":"object","properties":{"dataSourceId":{"type":"integer","format":"int32"},"dataSourceTypeId":{"type":"integer","format":"int32"},"pipelineDataSourceType":{"type":"string"},"pipelineDataSource":{"type":"string"},"pipelineDataSourceId":{"type":"string"}}},"QatTempFundingSource":{"type":"object","properties":{"fundingSourceId":{"type":"integer","format":"int32"},"pipelineFundingSource":{"type":"string"},"pipelineFundingSourceId":{"type":"string"}}},"QatTempProcurementAgent":{"type":"object","properties":{"procurementAgentId":{"type":"integer","format":"int32"},"pipelineProcurementAgent":{"type":"string"},"pipelineProcurementAgentId":{"type":"string"}}},"PlanningUnitCapacity":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"planningUnitCapacityId":{"type":"integer","format":"int32"},"planningUnit":{"$ref":"#/components/schemas/SimpleObject"},"supplier":{"$ref":"#/components/schemas/SimpleObject"},"startDate":{"type":"string"},"stopDate":{"type":"string"},"capacity":{"type":"number","format":"double"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"PlanningUnit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"planningUnitId":{"type":"integer","format":"int32"},"forecastingUnit":{"$ref":"#/components/schemas/ForecastingUnit"},"label":{"$ref":"#/components/schemas/Label"},"unit":{"$ref":"#/components/schemas/SimpleCodeObject"},"multiplier":{"type":"number","format":"double"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProgramAndTracerCategoryDTO_ReportView":{"type":"object","properties":{"tracerCategoryIds":{"type":"array","items":{"type":"string"}},"programIds":{"type":"array","items":{"type":"string"}},"programIdsString":{"type":"string"},"tracerCategoryIdsString":{"type":"string"}}},"ProcurementAgent":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"procurementAgentId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"procurementAgentType":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"procurementAgentCode":{"type":"string"},"submittedToApprovedLeadTime":{"type":"number","format":"double"},"approvedToShippedLeadTime":{"type":"number","format":"double"},"colorHtmlCode":{"type":"string"},"programList":{"type":"array","items":{"$ref":"#/components/schemas/SimpleObject"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProcurementAgentType":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"procurementAgentTypeId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"procurementAgentTypeCode":{"type":"string"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProcurementAgentPlanningUnit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"procurementAgentPlanningUnitId":{"type":"integer","format":"int32"},"procurementAgent":{"$ref":"#/components/schemas/SimpleCodeObject"},"planningUnit":{"$ref":"#/components/schemas/SimpleObject"},"skuCode":{"type":"string"},"catalogPrice":{"type":"number","format":"double"},"moq":{"type":"integer","format":"int32"},"unitsPerPalletEuro1":{"type":"integer","format":"int32"},"unitsPerPalletEuro2":{"type":"integer","format":"int32"},"unitsPerContainer":{"type":"integer","format":"int32"},"volume":{"type":"number","format":"double"},"weight":{"type":"number","format":"double"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProcurementAgentProcurementUnit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"procurementAgentProcurementUnitId":{"type":"integer","format":"int32"},"procurementAgent":{"$ref":"#/components/schemas/SimpleObject"},"procurementUnit":{"$ref":"#/components/schemas/SimpleObject"},"skuCode":{"type":"string"},"vendorPrice":{"type":"number","format":"double"},"approvedToShippedLeadTime":{"type":"number","format":"double"},"gtin":{"type":"string"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProcurementUnit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"procurementUnitId":{"type":"integer","format":"int32"},"planningUnit":{"$ref":"#/components/schemas/PlanningUnit"},"label":{"$ref":"#/components/schemas/Label"},"unit":{"$ref":"#/components/schemas/SimpleObject"},"multiplier":{"type":"number","format":"double"},"supplier":{"$ref":"#/components/schemas/SimpleObject"},"widthQty":{"type":"number","format":"double"},"heightQty":{"type":"number","format":"double"},"lengthQty":{"type":"number","format":"double"},"lengthUnit":{"$ref":"#/components/schemas/SimpleObject"},"weightQty":{"type":"number","format":"double"},"weightUnit":{"$ref":"#/components/schemas/SimpleObject"},"volumeQty":{"type":"number","format":"double"},"volumeUnit":{"$ref":"#/components/schemas/SimpleObject"},"unitsPerCase":{"type":"number","format":"double"},"unitsPerPalletEuro1":{"type":"number","format":"double"},"unitsPerPalletEuro2":{"type":"number","format":"double"},"unitsPerContainer":{"type":"number","format":"double"},"labeling":{"type":"string"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Node":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"parentId":{"type":"integer","format":"int32"},"payload":{"type":"object"},"level":{"type":"integer","format":"int32"},"sortOrder":{"type":"string"},"payloadId":{"type":"integer","format":"int32"}}},"ActualConsumptionDataInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"regionIds":{"type":"array","items":{"type":"string"}},"planningUnitIdString":{"type":"string"},"regionIdString":{"type":"string"}}},"ReviewedProblem":{"type":"object","properties":{"problemReportId":{"type":"integer","format":"int32"},"reviewed":{"type":"boolean"},"notes":{"type":"string"},"problemStatus":{"$ref":"#/components/schemas/SimpleObject"}}},"UpdateProgramVersion":{"type":"object","properties":{"reviewedProblemList":{"type":"array","items":{"$ref":"#/components/schemas/ReviewedProblem"}},"notes":{"type":"string"}}},"ProgramIdAndVersionId_InternalView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"}}},"ProgramPlanningUnit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"programPlanningUnitId":{"type":"integer","format":"int32"},"program":{"$ref":"#/components/schemas/SimpleObject"},"planningUnit":{"$ref":"#/components/schemas/SimpleObject"},"productCategory":{"$ref":"#/components/schemas/SimpleObject"},"forecastingUnit":{"$ref":"#/components/schemas/SimpleObject"},"multiplier":{"type":"number","format":"double"},"reorderFrequencyInMonths":{"type":"integer","format":"int32"},"minMonthsOfStock":{"type":"integer","format":"int32"},"localProcurementLeadTime":{"type":"number","format":"double"},"shelfLife":{"type":"integer","format":"int32"},"catalogPrice":{"type":"number","format":"double"},"monthsInFutureForAmc":{"type":"integer","format":"int32"},"monthsInPastForAmc":{"type":"integer","format":"int32"},"programPlanningUnitProcurementAgentPrices":{"type":"array","items":{"$ref":"#/components/schemas/ProgramPlanningUnitProcurementAgentPrice"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProgramPlanningUnitProcurementAgentPrice":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"programPlanningUnitProcurementAgentId":{"type":"integer","format":"int32"},"programPlanningUnitId":{"type":"integer","format":"int32"},"procurementAgent":{"$ref":"#/components/schemas/SimpleCodeObject"},"planningUnit":{"$ref":"#/components/schemas/SimpleObject"},"program":{"$ref":"#/components/schemas/SimpleObject"},"price":{"type":"number","format":"double"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ProgramInitialize":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"programId":{"type":"integer","format":"int32"},"programCode":{"type":"string"},"realmCountry":{"$ref":"#/components/schemas/RealmCountry"},"organisation":{"$ref":"#/components/schemas/SimpleCodeObject"},"healthAreaList":{"type":"array","items":{"$ref":"#/components/schemas/SimpleCodeObject"}},"label":{"$ref":"#/components/schemas/Label"},"programManager":{"$ref":"#/components/schemas/BasicUser"},"programNotes":{"type":"string"},"airFreightPerc":{"type":"number","format":"double"},"seaFreightPerc":{"type":"number","format":"double"},"plannedToSubmittedLeadTime":{"type":"number","format":"double"},"submittedToApprovedLeadTime":{"type":"number","format":"double"},"approvedToShippedLeadTime":{"type":"number","format":"double"},"shippedToArrivedByAirLeadTime":{"type":"number","format":"double"},"shippedToArrivedBySeaLeadTime":{"type":"number","format":"double"},"arrivedToDeliveredLeadTime":{"type":"number","format":"double"},"programTypeId":{"type":"integer","format":"int32"},"regionList":{"type":"array","items":{"$ref":"#/components/schemas/Region"}},"currentVersion":{"$ref":"#/components/schemas/Version"},"versionList":{"type":"array","items":{"$ref":"#/components/schemas/Version"}},"programPlanningUnits":{"type":"array","items":{"$ref":"#/components/schemas/ProgramPlanningUnit"}},"healthAreaArray":{"type":"array","items":{"type":"string"}},"regionArray":{"type":"array","items":{"type":"string"}},"healthAreaIdList":{"type":"array","items":{"type":"integer","format":"int32"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"RealmCountryPlanningUnit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"realmCountryPlanningUnitId":{"type":"integer","format":"int32"},"realmCountry":{"$ref":"#/components/schemas/SimpleObject"},"planningUnit":{"$ref":"#/components/schemas/SimpleObject"},"skuCode":{"type":"string"},"label":{"$ref":"#/components/schemas/Label"},"multiplier":{"type":"number","format":"double"},"unit":{"$ref":"#/components/schemas/Unit"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"Unit":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"unitId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"unitCode":{"type":"string"},"dimension":{"$ref":"#/components/schemas/SimpleObject"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ExpiredStockInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"includePlannedShipments":{"type":"boolean"}}},"CostOfInventoryInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"dt":{"type":"string","format":"date-time"},"includePlannedShipments":{"type":"boolean"}}},"StockAdjustmentReportInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"startDateString":{"type":"string"},"stopDateString":{"type":"string"},"planningUnitIdString":{"type":"string"}}},"ProcurementAgentShipmentReportInput_ReportView":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"includePlannedShipments":{"type":"boolean"},"procurementAgentIds":{"type":"array","items":{"type":"string"}},"procurementAgentIdString":{"type":"string"},"planningUnitIdString":{"type":"string"}}},"ProgramLeadTimesInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"procurementAgentIds":{"type":"array","items":{"type":"string"}},"planningUnitIdString":{"type":"string"},"procurementAgentIdString":{"type":"string"}}},"FundingSourceShipmentReportInput_ReportView":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"includePlannedShipments":{"type":"boolean"},"fundingSourceIds":{"type":"array","items":{"type":"string"}},"fundingSourceIdString":{"type":"string"},"planningUnitIdString":{"type":"string"}}},"StockStatusVerticalInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"planningUnitId":{"type":"integer","format":"int32"},"allPlanningUnits":{"type":"boolean"}}},"StockStatusOverTimeInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"mosPast":{"type":"integer","format":"int32"},"mosFuture":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"planningUnitIdString":{"type":"string"}}},"ProgramProductCatalogInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"productCategoryId":{"type":"integer","format":"int32"},"tracerCategoryId":{"type":"integer","format":"int32"}}},"ConsumptionForecastVsActualInput_ReportView":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"planningUnitId":{"type":"integer","format":"int32"},"reportView":{"type":"integer","format":"int32"}}},"GlobalConsumptionInput_ReportView":{"type":"object","properties":{"realmId":{"type":"integer","format":"int32"},"realmCountryIds":{"type":"array","items":{"type":"string"}},"programIds":{"type":"array","items":{"type":"string"}},"planningUnitIds":{"type":"array","items":{"type":"string"}},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"reportView":{"type":"integer","format":"int32"},"useApprovedSupplyPlanOnly":{"type":"boolean"},"planningUnitIdString":{"type":"string"},"programIdString":{"type":"string"},"realmCountryIdString":{"type":"string"}}},"ForecastMetricsMonthlyInput_ReportView":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"planningUnitId":{"type":"integer","format":"int32"},"previousMonths":{"type":"integer","format":"int32"}}},"ForecastMetricsComparisionInput_ReportView":{"type":"object","properties":{"realmId":{"type":"integer","format":"int32"},"realmCountryIds":{"type":"array","items":{"type":"string"}},"programIds":{"type":"array","items":{"type":"string"}},"planningUnitIds":{"type":"array","items":{"type":"string"}},"tracerCategoryIds":{"type":"array","items":{"type":"string"}},"startDate":{"type":"string","format":"date-time"},"previousMonths":{"type":"integer","format":"int32"},"useApprovedSupplyPlanOnly":{"type":"boolean"}}},"StockStatusMatrixInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"tracerCategoryIds":{"type":"array","items":{"type":"string"}},"includePlannedShipments":{"type":"boolean"}}},"ShipmentDetailsInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"fundingSourceIds":{"type":"array","items":{"type":"string"}},"budgetIds":{"type":"array","items":{"type":"string"}},"planningUnitIds":{"type":"array","items":{"type":"string"}},"reportView":{"type":"integer","format":"int32"},"planningUnitIdsString":{"type":"string"},"fundingSourceIdsString":{"type":"string"},"budgetIdsString":{"type":"string"}}},"ShipmentOverviewInput_ReportView":{"type":"object","properties":{"realmId":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"realmCountryIds":{"type":"array","items":{"type":"string"}},"programIds":{"type":"array","items":{"type":"string"}},"planningUnitIds":{"type":"array","items":{"type":"string"}},"fundingSourceIds":{"type":"array","items":{"type":"string"}},"shipmentStatusIds":{"type":"array","items":{"type":"string"}},"useApprovedSupplyPlanOnly":{"type":"boolean"},"programIdsString":{"type":"string"},"planningUnitIdsString":{"type":"string"},"fundingSourceIdsString":{"type":"string"},"realmCountryIdsString":{"type":"string"},"shipmentStatusIdsString":{"type":"string"}}},"ShipmentGlobalDemandInput_ReportView":{"type":"object","properties":{"realmId":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"realmCountryIds":{"type":"array","items":{"type":"string"}},"planningUnitId":{"type":"integer","format":"int32"},"reportView":{"type":"integer","format":"int32"},"fundingSourceProcurementAgentIds":{"type":"array","items":{"type":"string"}},"useApprovedSupplyPlanOnly":{"type":"boolean"},"includePlannedShipments":{"type":"boolean"},"realmCountryIdsString":{"type":"string"},"fundingSourceProcurementAgentIdsString":{"type":"string"}}},"AnnualShipmentCostInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"procurementAgentIds":{"type":"array","items":{"type":"string"}},"fundingSourceIds":{"type":"array","items":{"type":"string"}},"shipmentStatusIds":{"type":"array","items":{"type":"string"}},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"reportBasedOn":{"type":"integer","format":"int32"},"planningUnitIdString":{"type":"string"},"procurementAgentIdString":{"type":"string"},"fundingSourceIdString":{"type":"string"},"shipmentStatusIdString":{"type":"string"}}},"ShipmentReportInput_ReportView":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"planningUnitIds":{"type":"array","items":{"type":"string"}},"includePlannedShipments":{"type":"boolean"},"planningUnitIdString":{"type":"string"}}},"StockStatusForProgramInput_ReportView":{"type":"object","properties":{"dt":{"type":"string","format":"date-time"},"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"tracerCategoryIds":{"type":"array","items":{"type":"string"}},"includePlannedShipments":{"type":"boolean"},"tracerCategoryIdString":{"type":"string"}}},"BudgetReportInput_ReportView":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"fundingSourceIds":{"type":"array","items":{"type":"string"}},"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"fundingSourceIdString":{"type":"string"}}},"ForecastErrorInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"viewBy":{"type":"integer","format":"int32"},"unitId":{"type":"integer","format":"int32"},"regionIds":{"type":"array","items":{"type":"string"}},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"equivalencyUnitId":{"type":"integer","format":"int32"},"regionIdString":{"type":"string"}}},"MonthlyForecastInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"startDate":{"type":"string","format":"date-time"},"stopDate":{"type":"string","format":"date-time"},"reportView":{"type":"integer","format":"int32"},"aggregateByYear":{"type":"boolean"},"unitIds":{"type":"array","items":{"type":"string"}},"unitIdString":{"type":"string"}}},"ForecastSummaryInput_ReportView":{"type":"object","properties":{"programId":{"type":"integer","format":"int32"},"versionId":{"type":"integer","format":"int32"},"reportView":{"type":"integer","format":"int32"}}},"WarehouseCapacityInput_ReportView":{"type":"object","properties":{"realmCountryIds":{"type":"array","items":{"type":"string"}},"programIds":{"type":"array","items":{"type":"string"}},"programIdString":{"type":"string"},"realmCountryIdString":{"type":"string"}}},"WarehouseByCountryInput_ReportView":{"type":"object","properties":{"realmCountryIds":{"type":"array","items":{"type":"string"}},"realmCountryIdString":{"type":"string"}}},"StockStatusAcrossProductsInput_ReportView":{"type":"object","properties":{"realmId":{"type":"integer","format":"int32"},"dt":{"type":"string","format":"date-time"},"tracerCategoryIds":{"type":"array","items":{"type":"string"}},"realmCountryIds":{"type":"array","items":{"type":"string"}},"programIds":{"type":"array","items":{"type":"string"}},"useApprovedSupplyPlanOnly":{"type":"boolean"},"programIdsString":{"type":"string"},"tracerCategoryIdsString":{"type":"string"},"realmCountryIdsString":{"type":"string"}}},"Supplier":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"supplierId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"TracerCategory":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"tracerCategoryId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"healthArea":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"ExtrapolationData":{"type":"object","properties":{"month":{"type":"string","format":"date-time"},"amount":{"type":"number","format":"double"},"ci":{"type":"number","format":"double"}}},"ExtrapolationDataReportingRate":{"type":"object","properties":{"month":{"type":"string","format":"date-time"},"amount":{"type":"number","format":"double"},"ci":{"type":"number","format":"double"},"reportingRate":{"type":"number","format":"double"},"manualChange":{"type":"number","format":"double"}}},"ForecastNodeTreeNode":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"parent":{"type":"integer","format":"int32"},"payload":{"$ref":"#/components/schemas/TreeNode"},"level":{"type":"integer","format":"int32"},"sortOrder":{"type":"string"},"payloadId":{"type":"integer","format":"int32"}}},"NodeDataExtrapolation":{"type":"object","properties":{"nodeDataExtapolationId":{"type":"integer","format":"int32"},"extrapolationMethod":{"$ref":"#/components/schemas/SimpleObject"},"notes":{"type":"string"},"extrapolationDataList":{"type":"array","items":{"$ref":"#/components/schemas/ExtrapolationDataReportingRate"}}}},"NodeDataExtrapolationOption":{"type":"object","properties":{"nodeDataExtapolationOptionId":{"type":"integer","format":"int32"},"extrapolationMethod":{"$ref":"#/components/schemas/SimpleObject"},"jsonProperties":{"type":"object","additionalProperties":{"type":"object"}},"extrapolationOptionDataList":{"type":"array","items":{"$ref":"#/components/schemas/ExtrapolationData"}},"jsonPropertiesString":{"type":"string"}}},"NodeDataModeling":{"type":"object","properties":{"nodeDataModelingId":{"type":"integer","format":"int32"},"startDate":{"type":"string"},"startDateNo":{"type":"integer","format":"int32"},"stopDate":{"type":"string"},"stopDateNo":{"type":"integer","format":"int32"},"modelingType":{"$ref":"#/components/schemas/SimpleObject"},"dataValue":{"type":"number","format":"double"},"increaseDecrease":{"type":"integer","format":"int32"},"transferNodeDataId":{"type":"integer","format":"int32"},"notes":{"type":"string"}}},"NodeDataMom":{"type":"object","properties":{"nodeDataMomId":{"type":"integer","format":"int32"},"month":{"type":"string"},"startValue":{"type":"number","format":"double"},"endValue":{"type":"number","format":"double"},"calculatedValue":{"type":"number","format":"double"},"calculatedMmdValue":{"type":"number","format":"double"},"difference":{"type":"number","format":"double"},"seasonalityPerc":{"type":"number","format":"double"},"manualChange":{"type":"number","format":"double"}}},"NodeDataOverride":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"nodeDataOverrideId":{"type":"integer","format":"int32"},"month":{"type":"string","format":"date-time"},"monthNo":{"type":"integer","format":"int32"},"manualChange":{"type":"number","format":"double"},"seasonalityPerc":{"type":"number","format":"double"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"NodeType":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"modelingAllowed":{"type":"boolean"},"extrapolationAllowed":{"type":"boolean"},"treeTemplateAllowed":{"type":"boolean"},"forecastTreeAllowed":{"type":"boolean"}}},"SimpleForecastingUnitObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"unit":{"$ref":"#/components/schemas/SimpleCodeObject"},"tracerCategory":{"$ref":"#/components/schemas/SimpleObject"},"productCategory":{"$ref":"#/components/schemas/SimpleObject"},"idString":{"type":"string"}}},"SimpleObjectWithType":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"typeId":{"type":"integer","format":"int32"},"idString":{"type":"string"}}},"SimpleUnitObjectWithMultiplier":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"unit":{"$ref":"#/components/schemas/SimpleCodeObject"},"multiplier":{"type":"number","format":"double"},"idString":{"type":"string"}}},"TreeLevel":{"type":"object","properties":{"levelId":{"type":"integer","format":"int32"},"levelNo":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"unit":{"$ref":"#/components/schemas/SimpleCodeObject"}}},"TreeNode":{"type":"object","properties":{"nodeId":{"type":"integer","format":"int32"},"parentNodeId":{"type":"integer","format":"int32"},"nodeType":{"$ref":"#/components/schemas/NodeType"},"nodeUnit":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"nodeDataMap":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/TreeNodeData"}}}}},"TreeNodeData":{"type":"object","properties":{"nodeDataId":{"type":"integer","format":"int32"},"month":{"type":"string"},"monthNo":{"type":"integer","format":"int32"},"dataValue":{"type":"number","format":"double"},"calculatedDataValue":{"type":"number","format":"double"},"fuNode":{"$ref":"#/components/schemas/TreeNodeDataFu"},"puNode":{"$ref":"#/components/schemas/TreeNodeDataPu"},"extrapolation":{"type":"boolean"},"notes":{"type":"string"},"manualChangesEffectFuture":{"type":"boolean"},"nodeDataModelingList":{"type":"array","items":{"$ref":"#/components/schemas/NodeDataModeling"}},"nodeDataOverrideList":{"type":"array","items":{"$ref":"#/components/schemas/NodeDataOverride"}},"nodeDataMomList":{"type":"array","items":{"$ref":"#/components/schemas/NodeDataMom"}},"nodeDataExtrapolation":{"$ref":"#/components/schemas/NodeDataExtrapolation"},"nodeDataExtrapolationOptionList":{"type":"array","items":{"$ref":"#/components/schemas/NodeDataExtrapolationOption"}}}},"TreeNodeDataFu":{"type":"object","properties":{"nodeDataFuId":{"type":"integer","format":"int32"},"forecastingUnit":{"$ref":"#/components/schemas/SimpleForecastingUnitObject"},"lagInMonths":{"type":"integer","format":"int32"},"usageType":{"$ref":"#/components/schemas/SimpleObject"},"noOfPersons":{"type":"integer","format":"int32"},"noOfForecastingUnitsPerPerson":{"type":"integer","format":"int32"},"oneTimeUsage":{"type":"boolean"},"usageFrequency":{"type":"number","format":"double"},"usagePeriod":{"$ref":"#/components/schemas/UsagePeriod"},"repeatCount":{"type":"number","format":"double"},"repeatUsagePeriod":{"$ref":"#/components/schemas/UsagePeriod"}}},"TreeNodeDataPu":{"type":"object","properties":{"nodeDataPuId":{"type":"integer","format":"int32"},"planningUnit":{"$ref":"#/components/schemas/SimpleUnitObjectWithMultiplier"},"sharePlanningUnit":{"type":"boolean"},"refillMonths":{"type":"integer","format":"int32"},"puPerVisit":{"type":"integer","format":"int32"}}},"TreeTemplate":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"treeTemplateId":{"type":"integer","format":"int32"},"realm":{"$ref":"#/components/schemas/SimpleCodeObject"},"label":{"$ref":"#/components/schemas/Label"},"forecastMethod":{"$ref":"#/components/schemas/SimpleObjectWithType"},"monthsInPast":{"type":"integer","format":"int32"},"monthsInFuture":{"type":"integer","format":"int32"},"notes":{"type":"string"},"levelList":{"type":"array","items":{"$ref":"#/components/schemas/TreeLevel"}},"flatList":{"type":"array","items":{"$ref":"#/components/schemas/ForecastNodeTreeNode"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"UsagePeriod":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"usagePeriodId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"convertToMonth":{"type":"number","format":"double"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"SimpleUnitObject":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"unit":{"$ref":"#/components/schemas/SimpleCodeObject"},"idString":{"type":"string"}}},"UsageTemplate":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"usageTemplateId":{"type":"integer","format":"int32"},"label":{"$ref":"#/components/schemas/Label"},"realmId":{"type":"integer","format":"int32"},"program":{"$ref":"#/components/schemas/SimpleCodeObject"},"forecastingUnit":{"$ref":"#/components/schemas/SimpleUnitObject"},"unit":{"$ref":"#/components/schemas/SimpleCodeObject"},"tracerCategory":{"$ref":"#/components/schemas/SimpleObject"},"lagInMonths":{"type":"integer","format":"int32"},"usageType":{"$ref":"#/components/schemas/SimpleObject"},"noOfPatients":{"type":"integer","format":"int32"},"noOfForecastingUnits":{"type":"integer","format":"int32"},"oneTimeUsage":{"type":"boolean"},"usageFrequencyUsagePeriod":{"$ref":"#/components/schemas/UsagePeriod"},"usageFrequencyCount":{"type":"number","format":"double"},"repeatUsagePeriod":{"$ref":"#/components/schemas/UsagePeriod"},"repeatCount":{"type":"number","format":"double"},"notes":{"type":"string"},"usageInWords":{"$ref":"#/components/schemas/Label"},"noOfFUPerPersonPerTime":{"type":"number","format":"double"},"noOfFUPerPersonPerMonth":{"type":"number","format":"double"},"noOfFURequired":{"type":"number","format":"double"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"BusinessFunction":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"businessFunctionId":{"type":"string"},"label":{"$ref":"#/components/schemas/Label"},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"CanCreateRole":{"type":"object","properties":{"roleId":{"type":"string"},"label":{"$ref":"#/components/schemas/Label"}}},"Role":{"type":"object","properties":{"roleId":{"type":"string"},"label":{"$ref":"#/components/schemas/Label"},"businessFunctionList":{"type":"array","items":{"$ref":"#/components/schemas/BusinessFunction"}},"businessFunctions":{"type":"array","items":{"type":"string"}},"canCreateRoleList":{"type":"array","items":{"$ref":"#/components/schemas/CanCreateRole"}},"canCreateRoles":{"type":"array","items":{"type":"string"}}}},"User":{"type":"object","properties":{"createdBy":{"$ref":"#/components/schemas/BasicUser"},"createdDate":{"type":"string","format":"date-time"},"lastModifiedBy":{"$ref":"#/components/schemas/BasicUser"},"lastModifiedDate":{"type":"string","format":"date-time"},"active":{"type":"boolean"},"userId":{"type":"integer","format":"int32"},"username":{"type":"string"},"password":{"type":"string"},"emailId":{"type":"string"},"orgAndCountry":{"type":"string"},"realm":{"$ref":"#/components/schemas/Realm"},"roleList":{"type":"array","items":{"$ref":"#/components/schemas/Role"}},"roles":{"type":"array","items":{"type":"string"}},"language":{"$ref":"#/components/schemas/Language"},"defaultModuleId":{"type":"integer","format":"int32"},"faildAttempts":{"type":"integer","format":"int32"},"lastLoginDate":{"type":"string","format":"date-time"},"userAclList":{"type":"array","items":{"$ref":"#/components/schemas/UserAcl"}},"userAcls":{"type":"array","items":{"$ref":"#/components/schemas/UserAcl"}},"businessFunctionList":{"type":"array","items":{"type":"string"}},"baseModel":{"$ref":"#/components/schemas/BaseModel"}}},"UserAcl":{"type":"object","properties":{"userId":{"type":"integer","format":"int32"},"realmCountryId":{"type":"integer","format":"int32"},"countryName":{"$ref":"#/components/schemas/Label"},"healthAreaId":{"type":"integer","format":"int32"},"healthAreaName":{"$ref":"#/components/schemas/Label"},"organisationId":{"type":"integer","format":"int32"},"organisationName":{"$ref":"#/components/schemas/Label"},"programId":{"type":"integer","format":"int32"},"programName":{"$ref":"#/components/schemas/Label"},"lastModifiedDate":{"type":"string"}}},"EmailUser":{"type":"object","properties":{"userId":{"type":"integer","format":"int32"},"username":{"type":"string"},"emailId":{"type":"string"},"token":{"type":"string"},"password":{"type":"string"},"hashPassword":{"type":"string"}}},"LanguageUser":{"type":"object","properties":{"userId":{"type":"integer","format":"int32"},"languageCode":{"type":"string"}}},"Password":{"type":"object","properties":{"userId":{"type":"integer","format":"int32"},"emailId":{"type":"string"},"oldPassword":{"type":"string"},"newPassword":{"type":"string"}}}}}}}')}}]);