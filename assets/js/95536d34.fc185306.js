"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[53282],{45314:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>q,contentTitle:()=>j,default:()=>g,frontMatter:()=>h,metadata:()=>o,toc:()=>w});const o=JSON.parse('{"id":"api/quantimed-import","title":"Format forecast data to import","description":"API used to format forecast data to import in a specified program","source":"@site/docs/api/quantimed-import.api.mdx","sourceDirName":"api","slug":"/api/quantimed-import","permalink":"/fasp-documentation/docs/api/quantimed-import","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"quantimed-import","title":"Format forecast data to import","description":"API used to format forecast data to import in a specified program","sidebar_label":"Format forecast data to import","hide_title":true,"hide_table_of_contents":true,"api":"eJytVd9v2jAQ/lcsv2yTGHSV9sLT2EZVpKmFwPZSIXQkDnGX2K7tlKIo//vunEBKqdCmjgcgzv347u77zhX3sHF8eMcfSlBeFiLhyx5PhIutNF5qxYd8NJ2w0omEec1SbQvw9CNicJ4l4IHOZWG09UwqBswZEctUooOxemOhYLzHtREWKOAkwZCHbJPgh+8NoKHwwhKaiit8QLs2APr0uCQsBnzGXwKc7q2YzxDcTpdsi/H/Ai+eYzQrHkppsfSht6XocRdnogA+rLjfGYLhvJVqw+u6d0CWylycALnCQxZr5UEqdDhN28FpEfB62eQXzn/VyY6Svjlmj5O9UJ6igTG5jEPrB/eOQlanBer1vYjDGCwNykvh6G0o8qQNPd6kxJO1VGB32Bj6UCHOaOUa58uLi9NqIuFLqxyyZHZMge+LW9agYDLFOQp2YAwO0zFXxrFwLi3z4/K8ePL7ugKGz+fTXntv5h586fqTm8U4uhn9WM3H0a9xtBpH0W3UZreiyaoLBELPTFiLHQ4ES2TClPYM8lxvX2DFgcS6MDlS+SxQRIp0zzSpwWjXSAC5PeQDMHJwEMigmemgOkihRlMn7ONeKqXN0SvDutxwMNhut/3GOW2nDgrynZex62u7eU07SRkH6E3QQKTZaIGWj2AlrPMwzpqISvCjjqzjJ6BKO6YchEJqTXUoW/rwZnaEiYFK2GgPjC20prFSSQ2qy/6ny/7FCVjcRO8ctRgCGULrESqbB+RtvyEO/W51ejWaT5kXUODbf+0UakSSx/V8vqI4q+vZl03m4o/GFcEE60RtCWT8s4wjAygv1uA/Tplq3V+DpUUShl6Aeg717K562YyqI9f/2dCtyANPTY7bhsoL+KuWmne4TCRadncFznkPbtjtamRKRpRGh6pagxM/bV7XdIzUwXUxvFt25AocTqSj/yiGFHInzpT6PmqX9Qf21rX/asHtIahdEEBe0hP+/S12R/dRvUTjTECCvKMKmvffGpwfFxSl8z/ZwXSRNB4jZLLxz2y7PUGKO+yI6e2cJLlu74hCJ2RsYUv3F34HkDo0LGzfcFbxHNSmhA3ZNjHp8wc56cWj","sidebar_class_name":"post api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get supply plan reviewer list for specified program","permalink":"/fasp-documentation/docs/api/get-supply-plan-reviewer-list-for-program"},"next":{"title":"Get RealmCountry for a specific RealmCountryId","permalink":"/fasp-documentation/docs/api/get-realm-country"}}');var i=a(74848),r=a(28453),n=a(57742),s=a.n(n),p=a(78178),c=a.n(p),d=a(19624),m=a.n(d),l=a(96226),u=a.n(l),f=(a(77675),a(19365),a(51107));const h={id:"quantimed-import",title:"Format forecast data to import",description:"API used to format forecast data to import in a specified program",sidebar_label:"Format forecast data to import",hide_title:!0,hide_table_of_contents:!0,api:"eJytVd9v2jAQ/lcsv2yTGHSV9sLT2EZVpKmFwPZSIXQkDnGX2K7tlKIo//vunEBKqdCmjgcgzv347u77zhX3sHF8eMcfSlBeFiLhyx5PhIutNF5qxYd8NJ2w0omEec1SbQvw9CNicJ4l4IHOZWG09UwqBswZEctUooOxemOhYLzHtREWKOAkwZCHbJPgh+8NoKHwwhKaiit8QLs2APr0uCQsBnzGXwKc7q2YzxDcTpdsi/H/Ai+eYzQrHkppsfSht6XocRdnogA+rLjfGYLhvJVqw+u6d0CWylycALnCQxZr5UEqdDhN28FpEfB62eQXzn/VyY6Svjlmj5O9UJ6igTG5jEPrB/eOQlanBer1vYjDGCwNykvh6G0o8qQNPd6kxJO1VGB32Bj6UCHOaOUa58uLi9NqIuFLqxyyZHZMge+LW9agYDLFOQp2YAwO0zFXxrFwLi3z4/K8ePL7ugKGz+fTXntv5h586fqTm8U4uhn9WM3H0a9xtBpH0W3UZreiyaoLBELPTFiLHQ4ES2TClPYM8lxvX2DFgcS6MDlS+SxQRIp0zzSpwWjXSAC5PeQDMHJwEMigmemgOkihRlMn7ONeKqXN0SvDutxwMNhut/3GOW2nDgrynZex62u7eU07SRkH6E3QQKTZaIGWj2AlrPMwzpqISvCjjqzjJ6BKO6YchEJqTXUoW/rwZnaEiYFK2GgPjC20prFSSQ2qy/6ny/7FCVjcRO8ctRgCGULrESqbB+RtvyEO/W51ejWaT5kXUODbf+0UakSSx/V8vqI4q+vZl03m4o/GFcEE60RtCWT8s4wjAygv1uA/Tplq3V+DpUUShl6Aeg717K562YyqI9f/2dCtyANPTY7bhsoL+KuWmne4TCRadncFznkPbtjtamRKRpRGh6pagxM/bV7XdIzUwXUxvFt25AocTqSj/yiGFHInzpT6PmqX9Qf21rX/asHtIahdEEBe0hP+/S12R/dRvUTjTECCvKMKmvffGpwfFxSl8z/ZwXSRNB4jZLLxz2y7PUGKO+yI6e2cJLlu74hCJ2RsYUv3F34HkDo0LGzfcFbxHNSmhA3ZNjHp8wc56cWj",sidebar_class_name:"post api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},j=void 0,q={},w=[];function S(t){const e={p:"p",...(0,r.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Format forecast data to import"}),"\n",(0,i.jsx)(s(),{method:"post",path:"/api/quantimed/import/{programId}",context:"endpoint"}),"\n",(0,i.jsx)(e.p,{children:"API used to format forecast data to import in a specified program"}),"\n",(0,i.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(c(),{parameters:[{name:"programId",in:"path",description:"ProgramId that you want to format forecast data to import for",required:!0,schema:{type:"string"}},{name:"file",description:"File containing forecast data to format for import"}]}),"\n",(0,i.jsx)(m(),{title:"Body",body:{description:"File containing forecast data to format for import",content:{"application/json":{schema:{type:"object",properties:{file:{type:"string",format:"binary"}}}}}}}),"\n",(0,i.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Returns a QuantimedImportDTO object if the operation was successful",content:{"text/json":{}}},500:{description:"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete",content:{"text/json":{}}}}})]})}function g(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(S,{...t})}):S(t)}}}]);