"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[69329],{97244:(t,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>U,default:()=>m,frontMatter:()=>y,metadata:()=>a,toc:()=>I});const a=JSON.parse('{"id":"api/get-planning-unit-capacity-for-id-1","title":"Get PlanningUnitCapacity list for a PlanningUnitId","description":"API used to get PlanningUnitCapacity list for a PlanningUnitId","source":"@site/docs/api/get-planning-unit-capacity-for-id-1.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-capacity-for-id-1","permalink":"/fasp-documentation/docs/api/get-planning-unit-capacity-for-id-1","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-capacity-for-id-1","title":"Get PlanningUnitCapacity list for a PlanningUnitId","description":"API used to get PlanningUnitCapacity list for a PlanningUnitId","sidebar_label":"Get PlanningUnitCapacity list for a PlanningUnitId","hide_title":true,"hide_table_of_contents":true,"api":"eJylVU1zGjEM/SseX9rOUCCkvXAqDZAw00kIkFOGYZRdwbpd7I2thTI7+98rm03CR9K0yQnbK+k9SU+ikAQLJ9u3MktBa6UXN1qRnNZkjC6yKiNltGzLznAgcoexICMWSGK4Y30GGUSKNiJVjsTcWAF73wexrEmToQUfjG9tySGei9A3dhDPTtg8AwtLJLSeWyE1X9gtO4yqPLcMKJGHhPdNBSVAYmNysQZNB/yO+HMwi/e5sshcyeZYky5KcAmyXUjaZJ6K0oQL9KbssATaPp22ZFlOvbvLjHbovEer2fQ/+/xGSLnVjonhy2Q4emQYSFNAxt/U+Om8e1GWZU1+aZ6+HBjEBVE2JqDc1ftXo++Dbrd3KdQ8QN44tCI26IQ2JBJYoYAoQudegzxp/SPkcNQ7u7rsDiaDq8tZvzP40et68AgtgdKCQWLl/d2DpDyt0IFHWiyAV+h8fa60A7a3GlKB1rIYQ+sziysO4gXMMBbJolqxiZm/sfoMzvQSU6k5SJZl2JYNyFRjV32NqAraKPZFWbITt2H1IPLcpuyfcAldu9FYr9f1+5zVquYqCpMDnNOGVOTqxi6OBD+0Js4jfxHboGESrzsTtlyBVXCXBjkGfSo9NyEpRalX8/UekAAdi84DmpgYk/ogzHML1aqftOrNIwa8Iz6Ebm6VFCrN+GIc6FTVhChUsxrofmc8FISw5K//mz7Po/IeF+PxzMeZXVx/WyQu+py5ZTDhFqUqQh7DHcQO94J5bfnvQ86Nqd+Blb63mXG0BL3jeP6WrbdXoOJJTu/fp9UaCqpkWfEiLKt8ikqJt5KV6HW5u9i5CVV0PrYP9ikLI+G8vWtR3IHDG5uWpX++z9Fu+H36pKUg2Vg5f+YhmEPq8C8JfxxVG/WTeOdqfjbz6hH0Jsg9zf2Nj79wc/y/UU7ZI0GIWZU+i61Rh1Wb0Y7708T7kXmc9vPehCXyB25rhEw=","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get PlanningUnitCapacity list for a PlanningUnitId and a given date range","permalink":"/fasp-documentation/docs/api/get-planning-unit-capacity-for-id"},"next":{"title":"Update PlanningUnitCapacity","permalink":"/fasp-documentation/docs/api/save-planning-unit-capacity"}}');var e=i(74848),s=i(28453),o=i(57742),l=i.n(o),d=i(78178),c=i.n(d),r=i(19624),p=i.n(r),g=i(96226),f=i.n(g),u=(i(77675),i(19365),i(51107));const y={id:"get-planning-unit-capacity-for-id-1",title:"Get PlanningUnitCapacity list for a PlanningUnitId",description:"API used to get PlanningUnitCapacity list for a PlanningUnitId",sidebar_label:"Get PlanningUnitCapacity list for a PlanningUnitId",hide_title:!0,hide_table_of_contents:!0,api:"eJylVU1zGjEM/SseX9rOUCCkvXAqDZAw00kIkFOGYZRdwbpd7I2thTI7+98rm03CR9K0yQnbK+k9SU+ikAQLJ9u3MktBa6UXN1qRnNZkjC6yKiNltGzLznAgcoexICMWSGK4Y30GGUSKNiJVjsTcWAF73wexrEmToQUfjG9tySGei9A3dhDPTtg8AwtLJLSeWyE1X9gtO4yqPLcMKJGHhPdNBSVAYmNysQZNB/yO+HMwi/e5sshcyeZYky5KcAmyXUjaZJ6K0oQL9KbssATaPp22ZFlOvbvLjHbovEer2fQ/+/xGSLnVjonhy2Q4emQYSFNAxt/U+Om8e1GWZU1+aZ6+HBjEBVE2JqDc1ftXo++Dbrd3KdQ8QN44tCI26IQ2JBJYoYAoQudegzxp/SPkcNQ7u7rsDiaDq8tZvzP40et68AgtgdKCQWLl/d2DpDyt0IFHWiyAV+h8fa60A7a3GlKB1rIYQ+sziysO4gXMMBbJolqxiZm/sfoMzvQSU6k5SJZl2JYNyFRjV32NqAraKPZFWbITt2H1IPLcpuyfcAldu9FYr9f1+5zVquYqCpMDnNOGVOTqxi6OBD+0Js4jfxHboGESrzsTtlyBVXCXBjkGfSo9NyEpRalX8/UekAAdi84DmpgYk/ogzHML1aqftOrNIwa8Iz6Ebm6VFCrN+GIc6FTVhChUsxrofmc8FISw5K//mz7Po/IeF+PxzMeZXVx/WyQu+py5ZTDhFqUqQh7DHcQO94J5bfnvQ86Nqd+Blb63mXG0BL3jeP6WrbdXoOJJTu/fp9UaCqpkWfEiLKt8ikqJt5KV6HW5u9i5CVV0PrYP9ikLI+G8vWtR3IHDG5uWpX++z9Fu+H36pKUg2Vg5f+YhmEPq8C8JfxxVG/WTeOdqfjbz6hH0Jsg9zf2Nj79wc/y/UU7ZI0GIWZU+i61Rh1Wb0Y7708T7kXmc9vPehCXyB25rhEw=",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},U=void 0,h={},I=[];function P(t){const n={p:"p",...(0,s.R)(),...t.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"Get PlanningUnitCapacity list for a PlanningUnitId"}),"\n",(0,e.jsx)(l(),{method:"get",path:"/api/planningUnit/capacity/{planningUnitId}",context:"endpoint"}),"\n",(0,e.jsx)(n.p,{children:"API used to get PlanningUnitCapacity list for a PlanningUnitId"}),"\n",(0,e.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,e.jsx)(c(),{parameters:[{name:"planningUnitId",in:"path",description:"planningUnitId that you want a PlanningUnitCapacity list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,e.jsx)(p(),{title:"Body",body:void 0}),"\n",(0,e.jsx)(f(),{id:void 0,label:void 0,responses:{200:{description:"Returns the PlanningUnitCapacity list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},412:{description:"Returns a HttpStatus.PRECONDITION_FAILED if certain conditions to get the list does not met",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of PlanningUnitCapacity list",content:{"text/json":{}}}}})]})}function m(t={}){const{wrapper:n}={...(0,s.R)(),...t.components};return n?(0,e.jsx)(n,{...t,children:(0,e.jsx)(P,{...t})}):P(t)}}}]);