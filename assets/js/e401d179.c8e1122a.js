"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[21660],{2818:(t,n,i)=>{i.r(n),i.d(n,{assets:()=>b,contentTitle:()=>m,default:()=>D,frontMatter:()=>h,metadata:()=>e,toc:()=>P});const e=JSON.parse('{"id":"api/get-planning-unit-by-forecasting-unit-id","title":"Get a PlanningUnit list for forecastingUnitId","description":"API used to get a PlanningUnit list for forecastingUnitId","source":"@site/docs/api/get-planning-unit-by-forecasting-unit-id.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-by-forecasting-unit-id","permalink":"/fasp-documentation/docs/api/get-planning-unit-by-forecasting-unit-id","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-by-forecasting-unit-id","title":"Get a PlanningUnit list for forecastingUnitId","description":"API used to get a PlanningUnit list for forecastingUnitId","sidebar_label":"Get a PlanningUnit list for forecastingUnitId","hide_title":true,"hide_table_of_contents":true,"api":"eJylld9v2jAQx/8Vyy/bJAaMdS88LdPoD2miNNC9VAhdk4N4S2zXdkpRlP99Z5O2oWGdqj0gYsd3973z5y4Vd7CxfHzDdQ5SCrm5lsLxZY+naBMjtBNK8jGPZhestJgyp9gGHQM2a51nubCOrZXxP0zAuubFRcp7XGk04P3QaszJum36bXd6xESDgQIdGi+t4pIWZHrMufDqNLiMv5Tc8ctcBo7tVMm2IB2tkD0mzcp2FuTK4F0pDJJgZ0rscZtkWAAfV9zttNcipMMN+qNkUIDbb30e8bpeenOrlbRovcVoOPR/h+pidKWRNqjolJK8JooCSBci4oMb/LLerKrrusdPhid/dwjs3Dk9d+BK259eLlanl9fT70ysQ6huUazGRKwFXW2q0DKpHMOHf2v48lpSBxoupotJPI1+rOaT+OckXk3i+DJu9Biku7DMqgKZ8muGxhBG4aZSkQY5kOdqG9Q/keQxTFShc2LkVaGklDjKVENeQItYGfMBaDFoM3+4eIHaoOqwV5Mvi+b+kdHS5OQ2o7zteDDYbrf9u5Iwo9ImQTJIyHdOJLavzKYD68yotExCanunoZuuogWdvAcj4DYPMAW6hFyrkKtwuWfx6iAQA5my6DEaWyiVeyekcx9q1P806g87CqjD31lfV0gStHswKT6bBzlNkSEJRW768TSaz5hDKOjtW9OnbhLe4nw+X3k/q/Orr5vMJh+1LcIRurlcJEhN1IoYaaBGZHv9hyHXSvVvwXB/5VpZV4BsGZ69cWYd1KZ6Buy/BmEzOgKiRBuNrrrJomqwvOGEpYe0PYw7yxe+aWfcDUecZFQG77OqbsHitcnr2m/flWh2tL98RisQnArrn6lV1pBbfKUI7+NmPH44MlDeMGWPFqTZBLkL7OelX9Hjb9wd/QbUSzLKEFKi1KexPxcRxdq1PDwPBt9CT0PhbLIgZP4Aryd1cw==","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get PlanningUnit list for Realm","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-realm-all"},"next":{"title":"Get PlanningUnitCapacity for a Realm and a given date range","permalink":"/fasp-documentation/docs/api/get-planning-unit-capacity-for-realm-id"}}');var a=i(74848),o=i(28453),s=i(57742),r=i.n(s),d=i(78178),l=i.n(d),c=i(19624),p=i.n(c),u=i(96226),g=i.n(u),f=(i(77675),i(19365),i(51107));const h={id:"get-planning-unit-by-forecasting-unit-id",title:"Get a PlanningUnit list for forecastingUnitId",description:"API used to get a PlanningUnit list for forecastingUnitId",sidebar_label:"Get a PlanningUnit list for forecastingUnitId",hide_title:!0,hide_table_of_contents:!0,api:"eJylld9v2jAQx/8Vyy/bJAaMdS88LdPoD2miNNC9VAhdk4N4S2zXdkpRlP99Z5O2oWGdqj0gYsd3973z5y4Vd7CxfHzDdQ5SCrm5lsLxZY+naBMjtBNK8jGPZhestJgyp9gGHQM2a51nubCOrZXxP0zAuubFRcp7XGk04P3QaszJum36bXd6xESDgQIdGi+t4pIWZHrMufDqNLiMv5Tc8ctcBo7tVMm2IB2tkD0mzcp2FuTK4F0pDJJgZ0rscZtkWAAfV9zttNcipMMN+qNkUIDbb30e8bpeenOrlbRovcVoOPR/h+pidKWRNqjolJK8JooCSBci4oMb/LLerKrrusdPhid/dwjs3Dk9d+BK259eLlanl9fT70ysQ6huUazGRKwFXW2q0DKpHMOHf2v48lpSBxoupotJPI1+rOaT+OckXk3i+DJu9Biku7DMqgKZ8muGxhBG4aZSkQY5kOdqG9Q/keQxTFShc2LkVaGklDjKVENeQItYGfMBaDFoM3+4eIHaoOqwV5Mvi+b+kdHS5OQ2o7zteDDYbrf9u5Iwo9ImQTJIyHdOJLavzKYD68yotExCanunoZuuogWdvAcj4DYPMAW6hFyrkKtwuWfx6iAQA5my6DEaWyiVeyekcx9q1P806g87CqjD31lfV0gStHswKT6bBzlNkSEJRW768TSaz5hDKOjtW9OnbhLe4nw+X3k/q/Orr5vMJh+1LcIRurlcJEhN1IoYaaBGZHv9hyHXSvVvwXB/5VpZV4BsGZ69cWYd1KZ6Buy/BmEzOgKiRBuNrrrJomqwvOGEpYe0PYw7yxe+aWfcDUecZFQG77OqbsHitcnr2m/flWh2tL98RisQnArrn6lV1pBbfKUI7+NmPH44MlDeMGWPFqTZBLkL7OelX9Hjb9wd/QbUSzLKEFKi1KexPxcRxdq1PDwPBt9CT0PhbLIgZP4Aryd1cw==",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},m=void 0,b={},P=[];function k(t){const n={p:"p",...(0,o.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Get a PlanningUnit list for forecastingUnitId"}),"\n",(0,a.jsx)(r(),{method:"get",path:"/api/planningUnit/planningUnit/forecastingUnit/{forecastingUnitId}",context:"endpoint"}),"\n",(0,a.jsx)(n.p,{children:"API used to get a PlanningUnit list for forecastingUnitId"}),"\n",(0,a.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(l(),{parameters:[{name:"forecastingUnitId",in:"path",description:"ForecastingUnitId that you want the planning unit list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,a.jsx)(p(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"Returns the PlanningUnit list",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the ForecastingUnitId specified does not exist",content:{"text/json":{}}},500:{description:"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete",content:{"text/json":{}}}}})]})}function D(t={}){const{wrapper:n}={...(0,o.R)(),...t.components};return n?(0,a.jsx)(n,{...t,children:(0,a.jsx)(k,{...t})}):k(t)}}}]);