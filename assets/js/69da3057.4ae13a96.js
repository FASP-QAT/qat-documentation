"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[33540],{24016:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>y,default:()=>x,frontMatter:()=>g,metadata:()=>o,toc:()=>b});const o=JSON.parse('{"id":"api/get-product-category-by-realm-id","title":"Get ProductCategory list for Realm","description":"API used to get the complete ProductCategory list for a Realm","source":"@site/docs/api/get-product-category-by-realm-id.api.mdx","sourceDirName":"api","slug":"/api/get-product-category-by-realm-id","permalink":"/fasp-documentation/docs/api/get-product-category-by-realm-id","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-product-category-by-realm-id","title":"Get ProductCategory list for Realm","description":"API used to get the complete ProductCategory list for a Realm","sidebar_label":"Get ProductCategory list for Realm","hide_title":true,"hide_table_of_contents":true,"api":"eJzNVcFu2zAM/RVBl21AFncZdvFpWbG1BXZIm+5UBIViM7FWWVIlOZlh+N9HyU6TuE67psOwUxSZ5HukHsmKOra0NL6h2qi0SNwpc7BUpqSzAU3BJoZrx5WkMR1PLkhhISVOkSU44jIgicq1AAdksu9NBLeOLJQhjFwBEzkdUKXBMB/rIsVoGKHj86UMlvh1QDUzLMe4xlOrqMQ/6GMevnNPSDOX0S7LNgayY46UqiBrJhuuhyhiCAP3BTeAvJwpYEBtkkHOaFxRV2qPzCU6gTdFh5y55urjiNb14IFep4LPEJ10rXsoXxuAv0qRy0QUKZwWxoB032EF4kmSHotwmfIEadouQ0XaeI0WmqBEKrxQi3DnfAJchrMqnC7cgCyYsEDWXAhi77je8xWeEWEyJUu+AsLQJnzOuEhDYPsnpZgrJYDJvszHQpz6YIj2fOKB4ybFHi6bzHazNGC1khb28lRSlHu14nkOKceaHp/azFs3WNYbjE5O/E+3G1xhpD2of4RMFApHuoABv1z003rPqsbi0U99MS/Q3kgmCBiDDR40oQ0+HN6nbQ2wInyFJiiDF8MiLrZ+ptopEaYBvlBMI6Z51GmyqJ0JUdUe6sgDRNWjZqyjqkf929sdZdSIacGsNuOnMALhM+e0jaNovV4P7wtsAL7wbYFFYViN0vHEDpVZHmp0/EOaoGEuXo6v0XLFDGdzEV4wPCmXCxVqwp3w7325BxQ6Y7xBI9coBh8EeTZQo+GH0fDkEQOc3G+sb1eWJGAbNSA+mQY67WOwJDxG2y7fxtMJccD84H5p+qhY7j3Op9NbH+f2/PLzMrPJe23zYIIvLHgCqNwdxLFmKHbS8N+HXCg1nDPj+5lqZV3O5I7jGe6ig+tns3z2ClJt1ffqrdb2ZdCwFgwnSt3Sr1rd3lDUrVdxZ8EOdvZZvD22/RH3bZO4f37HPcMNtZRhqTx8Vc2ZhR9G1LW/vi8A0eOb2VZ+QeUpt/6MbRcm1xM1e3vVjql35Kh121uz9pLJMvSFKPw/PN5BubP6/UQ/iugL1+0RFB8/2NFk/8u1e0RJ+uT6uqL8+5V8fNq77VjP0CsDluK89c3WGI5xHmu3E2K7Cv0yeFiDZ1+vcfj9Bh3mFfQ=","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Update ProductCategory tree","permalink":"/fasp-documentation/docs/api/update-product-category"},"next":{"title":"Get ProductCategory list for Realm and Program","permalink":"/fasp-documentation/docs/api/get-product-category-for-program"}}');var a=r(74848),i=r(28453),n=r(57742),d=r.n(n),l=r(78178),s=r.n(l),c=r(19624),u=r.n(c),p=r(96226),h=r.n(p),m=(r(77675),r(19365),r(51107));const g={id:"get-product-category-by-realm-id",title:"Get ProductCategory list for Realm",description:"API used to get the complete ProductCategory list for a Realm",sidebar_label:"Get ProductCategory list for Realm",hide_title:!0,hide_table_of_contents:!0,api:"eJzNVcFu2zAM/RVBl21AFncZdvFpWbG1BXZIm+5UBIViM7FWWVIlOZlh+N9HyU6TuE67psOwUxSZ5HukHsmKOra0NL6h2qi0SNwpc7BUpqSzAU3BJoZrx5WkMR1PLkhhISVOkSU44jIgicq1AAdksu9NBLeOLJQhjFwBEzkdUKXBMB/rIsVoGKHj86UMlvh1QDUzLMe4xlOrqMQ/6GMevnNPSDOX0S7LNgayY46UqiBrJhuuhyhiCAP3BTeAvJwpYEBtkkHOaFxRV2qPzCU6gTdFh5y55urjiNb14IFep4LPEJ10rXsoXxuAv0qRy0QUKZwWxoB032EF4kmSHotwmfIEadouQ0XaeI0WmqBEKrxQi3DnfAJchrMqnC7cgCyYsEDWXAhi77je8xWeEWEyJUu+AsLQJnzOuEhDYPsnpZgrJYDJvszHQpz6YIj2fOKB4ybFHi6bzHazNGC1khb28lRSlHu14nkOKceaHp/azFs3WNYbjE5O/E+3G1xhpD2of4RMFApHuoABv1z003rPqsbi0U99MS/Q3kgmCBiDDR40oQ0+HN6nbQ2wInyFJiiDF8MiLrZ+ptopEaYBvlBMI6Z51GmyqJ0JUdUe6sgDRNWjZqyjqkf929sdZdSIacGsNuOnMALhM+e0jaNovV4P7wtsAL7wbYFFYViN0vHEDpVZHmp0/EOaoGEuXo6v0XLFDGdzEV4wPCmXCxVqwp3w7325BxQ6Y7xBI9coBh8EeTZQo+GH0fDkEQOc3G+sb1eWJGAbNSA+mQY67WOwJDxG2y7fxtMJccD84H5p+qhY7j3Op9NbH+f2/PLzMrPJe23zYIIvLHgCqNwdxLFmKHbS8N+HXCg1nDPj+5lqZV3O5I7jGe6ig+tns3z2ClJt1ffqrdb2ZdCwFgwnSt3Sr1rd3lDUrVdxZ8EOdvZZvD22/RH3bZO4f37HPcMNtZRhqTx8Vc2ZhR9G1LW/vi8A0eOb2VZ+QeUpt/6MbRcm1xM1e3vVjql35Kh121uz9pLJMvSFKPw/PN5BubP6/UQ/iugL1+0RFB8/2NFk/8u1e0RJ+uT6uqL8+5V8fNq77VjP0CsDluK89c3WGI5xHmu3E2K7Cv0yeFiDZ1+vcfj9Bh3mFfQ=",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},y=void 0,f={},b=[];function P(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Get ProductCategory list for Realm"}),"\n",(0,a.jsx)(d(),{method:"get",path:"/api/productCategory/realmId/{realmId}/list/{productCategoryId}/{includeCurrentLevel}/{includeAllChildren}",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:"API used to get the complete ProductCategory list for a Realm"}),"\n",(0,a.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(s(),{parameters:[{name:"realmId",in:"path",description:"RealmId that you want the ProductCategory list for",required:!0,schema:{type:"integer",format:"int32"}},{name:"productCategoryId",in:"path",description:"ProductCategoryId that you want the Tree for",required:!0,schema:{type:"integer",format:"int32"}},{name:"includeCurrentLevel",in:"path",description:"true indicates that you want to include the current node of the tree in the output, false will skip the current level and give all the child nodes",required:!0,schema:{type:"boolean"}},{name:"includeAllChildren",in:"path",description:"true will include all the child nodes in the tree in the response, false will only include the immediate child nodes",required:!0,schema:{type:"boolean"}}]}),"\n",(0,a.jsx)(u(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"Returns the ProductCategory list",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of ProductCategory list",content:{"text/json":{}}}}})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(P,{...e})}):P(e)}}}]);