"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[94860],{41255:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>h,contentTitle:()=>y,default:()=>I,frontMatter:()=>f,metadata:()=>i,toc:()=>b});const i=JSON.parse('{"id":"api/get-organisation-type-by-realm-id","title":"Get Organisation type list for Realm","description":"API used to get the complete Organisation type list for a Realm","source":"@site/docs/api/get-organisation-type-by-realm-id.api.mdx","sourceDirName":"api","slug":"/api/get-organisation-type-by-realm-id","permalink":"/fasp-documentation/docs/api/get-organisation-type-by-realm-id","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-organisation-type-by-realm-id","title":"Get Organisation type list for Realm","description":"API used to get the complete Organisation type list for a Realm","sidebar_label":"Get Organisation type list for Realm","hide_title":true,"hide_table_of_contents":true,"api":"eJytVE1T2zAQ/SsaXdrOpHEa6CWnhuErFwIknJgMs9jrWK0tCUlO8Hj831nJDoTw1TI9RZF333u7ers1d7C0fHTNlVmCFBacUHJeaeSLHk/QxkZof8VHfHw+YaXFhDnFluiYy5DFqtA5OmTTrXTmKJ/lwjqWKsOAXSLkBe9xpdGEiElCeIQx3SE9qEIofe5xDQYKgjZeXs0l/aEk8/hdeE0aXMZ3hXYYJBAcq1TJ1iBbuW+rJBCDd6UwSNKcKbHHbZxhAXxUcx9JuEI6XKIPpYQCXHu1N+RNs/DpVitp0fqM4WDgf3Z1udJI+44Sgo4VsUgXaPHeRb+tz62bpunx/cHe26jATp3TMweutP3j6eXB5PDw6IyJNPBdWTQsUWiZVI5lsEIGcYzWfki5/5eUZ9P5zfH06uxwQ7l5BqsxFqkg4zzy4/3Hxf58rYUTijcScobGkLXCC2uDKwLxxiRWg86gWFGISj/TZWIm12Wqc2gwInlsxCPQItqdkqjzY1R3h4YSqNWrjW1Lk1NuRm2yoyhar9f9u5LcSP2IAwhQMZUTse0T9AsnnxuVlHFQ34KGgboYzylyBUbAbR78FgwoZKpCQcLl3q4Xz4gYyISNN2xsrlTuQUhnSzXs/xj2By8U0NB/sX7iW7eEFhM/mwU5XSchDp3sRvR4PDtnDsFP/L+WTwMnfMbpbHbjcW5OL34tMxt/17YIIfQ8uYiR5myLcayBZpW1+p9Tpkr1b8Fw/65aWVeA3Eo8oTX2zuba7K1nLamfzPMfVmK3WoIJdQ601JquhLoz3jUn4/nlubuge1vLcLQ5kg8yKtOn1fUtWLwyedP467sSTUX3iyfrBIcmhEln8nsKucV3qv162W3Ib+yTK/bVartLkFVwdV76f3T8g9XWwm8WFJohJOQ6L7v9OiZXareV9zTNfiQeJ/nkaE4WeAA32mcH","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get complete Organisation type list","permalink":"/fasp-documentation/docs/api/get-organisation-type-list-all"},"next":{"title":"Get QAT Temp Program","permalink":"/fasp-documentation/docs/api/get-qat-temp-program"}}');var n=a(74848),s=a(28453),o=a(57742),r=a.n(o),l=a(78178),p=a.n(l),d=a(19624),c=a.n(d),u=a(96226),m=a.n(u),g=(a(77675),a(19365),a(51107));const f={id:"get-organisation-type-by-realm-id",title:"Get Organisation type list for Realm",description:"API used to get the complete Organisation type list for a Realm",sidebar_label:"Get Organisation type list for Realm",hide_title:!0,hide_table_of_contents:!0,api:"eJytVE1T2zAQ/SsaXdrOpHEa6CWnhuErFwIknJgMs9jrWK0tCUlO8Hj831nJDoTw1TI9RZF333u7ers1d7C0fHTNlVmCFBacUHJeaeSLHk/QxkZof8VHfHw+YaXFhDnFluiYy5DFqtA5OmTTrXTmKJ/lwjqWKsOAXSLkBe9xpdGEiElCeIQx3SE9qEIofe5xDQYKgjZeXs0l/aEk8/hdeE0aXMZ3hXYYJBAcq1TJ1iBbuW+rJBCDd6UwSNKcKbHHbZxhAXxUcx9JuEI6XKIPpYQCXHu1N+RNs/DpVitp0fqM4WDgf3Z1udJI+44Sgo4VsUgXaPHeRb+tz62bpunx/cHe26jATp3TMweutP3j6eXB5PDw6IyJNPBdWTQsUWiZVI5lsEIGcYzWfki5/5eUZ9P5zfH06uxwQ7l5BqsxFqkg4zzy4/3Hxf58rYUTijcScobGkLXCC2uDKwLxxiRWg86gWFGISj/TZWIm12Wqc2gwInlsxCPQItqdkqjzY1R3h4YSqNWrjW1Lk1NuRm2yoyhar9f9u5LcSP2IAwhQMZUTse0T9AsnnxuVlHFQ34KGgboYzylyBUbAbR78FgwoZKpCQcLl3q4Xz4gYyISNN2xsrlTuQUhnSzXs/xj2By8U0NB/sX7iW7eEFhM/mwU5XSchDp3sRvR4PDtnDsFP/L+WTwMnfMbpbHbjcW5OL34tMxt/17YIIfQ8uYiR5myLcayBZpW1+p9Tpkr1b8Fw/65aWVeA3Eo8oTX2zuba7K1nLamfzPMfVmK3WoIJdQ601JquhLoz3jUn4/nlubuge1vLcLQ5kg8yKtOn1fUtWLwyedP467sSTUX3iyfrBIcmhEln8nsKucV3qv162W3Ib+yTK/bVartLkFVwdV76f3T8g9XWwm8WFJohJOQ6L7v9OiZXareV9zTNfiQeJ/nkaE4WeAA32mcH",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},y=void 0,h={},b=[];function x(t){const e={p:"p",...(0,s.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"Get Organisation type list for Realm"}),"\n",(0,n.jsx)(r(),{method:"get",path:"/api/organisationType/realmId/{realmId}",context:"endpoint"}),"\n",(0,n.jsx)(e.p,{children:"API used to get the complete Organisation type list for a Realm"}),"\n",(0,n.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(p(),{parameters:[{name:"realmId",in:"path",description:"RealmId that you want the Organisation type list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,n.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Returns the Organisation type list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of Organisation type list",content:{"text/json":{}}}}})]})}function I(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(x,{...t})}):x(t)}}}]);