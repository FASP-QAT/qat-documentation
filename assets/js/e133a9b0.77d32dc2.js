"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[16971],{43558:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>v,contentTitle:()=>h,default:()=>O,frontMatter:()=>f,metadata:()=>i,toc:()=>x});const i=JSON.parse('{"id":"api/get-planning-unit-for-dataset","title":"Get planning unit list for programId and versionId","description":"API used to get the planning unit list for specific programId and versionId.","source":"@site/docs/api/get-planning-unit-for-dataset.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-for-dataset","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-dataset","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-for-dataset","title":"Get planning unit list for programId and versionId","description":"API used to get the planning unit list for specific programId and versionId.","sidebar_label":"Get planning unit list for programId and versionId","hide_title":true,"hide_table_of_contents":true,"api":"eJy9VcFy2jAQ/RWNLm1nKKYkvXAqHULCJSEBThkmo9gLVmskRVpDGI//vSvhGEhC0jCdnrDE6u3b1XurgqOYO9655YlA4QD5tMETcLGVBqVWvMO7wwHLHSQMNZsDMkyBmUwoJdWc5Uoiy6RDNtOWOQOxnMmYGavnViwGCRMqYUuwjrAGSZPxBtcGrMCwJnRCHFZgE8Lqa9uriDS4EYQBSKeJYMEVLehEjU0R0hM0AlP+nPWWAaYC2VrnbCUU+iIOF0AoFh5yaYGooc2hwV2cwkLwTsFxbXx6qRDm4EPpwELgZuukzcuyUXOsK36TYx31HzlO/XFntHLg/Il2q+V/9ondAOZWuQMsCDbWlEFhSAmPGP1y/lxRUg/4aevkMKJgF4hmhAJz1+xf3fwc9Hpnl0zOQq6JA8sSDY4pjSwVS2AijsG5d1Oe/mXKy6vxXf9qctl7SrnVCel3eyGVkkn1NR14fL/27691c0DxVomMgbWUJNy1sbAkEO8qImEBLcglhejZRxtOWckjqa7MFGxDWuvwSBgZmR1vRXWtUVF/llFddFTUnyXB0F0sn6yX24wQU+qj60TRarVqPuSkVO/1YGVB5a1Rxq6p7fyFzodWJ3nsF2wDGobFdXdMkUthpbjPghiDOqWa6VCmxMxr+XovUZgn3adsbKx15kE2vCm63fzWbrZeMKAZ9sl5X23kFJpO+dko0Kn6K+LQ38rC/e5oyBDEgv79aPnkRulPXIxGdx7n7uL6xzx18VfjFiGELi2TMZAJdzJ2jSAjsw3//ZQzrZv3wvoZw412uBBq5+A5TeUDE/nAIH7eoGIrsH8+76uZFGRLODQOy6q8opLqLSepeuHuiNUvdwZ9Z3exW0ZnuyDxpNQbj1cU9/SGTGxWln77IQe7pv3pVm9B1ol0/pusMxOZgzea8vmmmrlf2LEvy6t9qDaFWgcvZLlf0edvWO89df5tOYrtsW/MEWy3N1FOKTgFkZC3fJ83/3fJewZ3Tm4nmTd+PcXOz8Yk9D8Ii/y0","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get dataset list for realm","permalink":"/fasp-documentation/docs/api/get-dataset-for-realm"},"next":{"title":"Load Datatse","permalink":"/fasp-documentation/docs/api/get-load-dataset"}}');var a=e(74848),o=e(28453),s=e(57742),r=e.n(s),d=e(78178),l=e.n(d),p=e(19624),u=e.n(p),c=e(96226),g=e.n(c),m=(e(77675),e(19365),e(51107));const f={id:"get-planning-unit-for-dataset",title:"Get planning unit list for programId and versionId",description:"API used to get the planning unit list for specific programId and versionId.",sidebar_label:"Get planning unit list for programId and versionId",hide_title:!0,hide_table_of_contents:!0,api:"eJy9VcFy2jAQ/RWNLm1nKKYkvXAqHULCJSEBThkmo9gLVmskRVpDGI//vSvhGEhC0jCdnrDE6u3b1XurgqOYO9655YlA4QD5tMETcLGVBqVWvMO7wwHLHSQMNZsDMkyBmUwoJdWc5Uoiy6RDNtOWOQOxnMmYGavnViwGCRMqYUuwjrAGSZPxBtcGrMCwJnRCHFZgE8Lqa9uriDS4EYQBSKeJYMEVLehEjU0R0hM0AlP+nPWWAaYC2VrnbCUU+iIOF0AoFh5yaYGooc2hwV2cwkLwTsFxbXx6qRDm4EPpwELgZuukzcuyUXOsK36TYx31HzlO/XFntHLg/Il2q+V/9ondAOZWuQMsCDbWlEFhSAmPGP1y/lxRUg/4aevkMKJgF4hmhAJz1+xf3fwc9Hpnl0zOQq6JA8sSDY4pjSwVS2AijsG5d1Oe/mXKy6vxXf9qctl7SrnVCel3eyGVkkn1NR14fL/27691c0DxVomMgbWUJNy1sbAkEO8qImEBLcglhejZRxtOWckjqa7MFGxDWuvwSBgZmR1vRXWtUVF/llFddFTUnyXB0F0sn6yX24wQU+qj60TRarVqPuSkVO/1YGVB5a1Rxq6p7fyFzodWJ3nsF2wDGobFdXdMkUthpbjPghiDOqWa6VCmxMxr+XovUZgn3adsbKx15kE2vCm63fzWbrZeMKAZ9sl5X23kFJpO+dko0Kn6K+LQ38rC/e5oyBDEgv79aPnkRulPXIxGdx7n7uL6xzx18VfjFiGELi2TMZAJdzJ2jSAjsw3//ZQzrZv3wvoZw412uBBq5+A5TeUDE/nAIH7eoGIrsH8+76uZFGRLODQOy6q8opLqLSepeuHuiNUvdwZ9Z3exW0ZnuyDxpNQbj1cU9/SGTGxWln77IQe7pv3pVm9B1ol0/pusMxOZgzea8vmmmrlf2LEvy6t9qDaFWgcvZLlf0edvWO89df5tOYrtsW/MEWy3N1FOKTgFkZC3fJ83/3fJewZ3Tm4nmTd+PcXOz8Yk9D8Ii/y0",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},h=void 0,v={},x=[];function I(n){const t={p:"p",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Get planning unit list for programId and versionId"}),"\n",(0,a.jsx)(r(),{method:"get",path:"/api/planningUnit/programId/{programId}/versionId/{versionId}",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:"API used to get the planning unit list for specific programId and versionId."}),"\n",(0,a.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(l(),{parameters:[{name:"programId",in:"path",description:"programId that you want to the planning unit list for",required:!0,schema:{type:"integer",format:"int32"}},{name:"versionId",in:"path",description:"versionId that you want to the planning unit list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,a.jsx)(u(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"Returns the planning unit list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the programId or versionId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of planning unit list",content:{"text/json":{}}}}})]})}function O(n={}){const{wrapper:t}={...(0,o.R)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(I,{...n})}):I(n)}}}]);