"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7543],{3278:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>x,contentTitle:()=>g,default:()=>b,frontMatter:()=>m,metadata:()=>a,toc:()=>U});const a=JSON.parse('{"id":"api/get-planning-unit-for-realm-all","title":"Get PlanningUnit list for Realm","description":"API used to get the complete PlanningUnit list for a Realm","source":"@site/docs/api/get-planning-unit-for-realm-all.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-for-realm-all","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-realm-all","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-for-realm-all","title":"Get PlanningUnit list for Realm","description":"API used to get the complete PlanningUnit list for a Realm","sidebar_label":"Get PlanningUnit list for Realm","hide_title":true,"hide_table_of_contents":true,"api":"eJylVE1z2jAQ/SsaXdrOUExJeuFUOgkJl4TwccowmY29xmqNpEgyhPH4v2clm+AktGmmJ2Sxb9/b1dstuYOV5YNbrnOQUsjVQgrHlx2eoI2N0E4oyQd8OBmzwmLCnGIrdMxlyGK11jk6ZJMWlOXCOpYqw4BNEfI173Cl0YBPNE4oFcHbgJEyIW6Y5xSqwcCachqvqeSSPghifACBO1x4MRpcxl8rnNYxpAwc26mCbUHWOo/KI7zBh0IYJE3OFNjhNs5wDXxQcrfTnlZIhyv0oQRYg6uvTvq8qpYebrWSFq1H9Hs9//NakiuMtMdFUNZYEYF0gREfXfTLelhZVVWHn/ZO/pwQ2KVzeubAFbY7up7+HJ+dnV8xkQaqhUXDEoWWSeVYBhtkEMdo7buUp/9IeXU9vxtdL67O9pT75luNsUgF+eSZHx/fL/b7se6NKd5IyBkaQ3YK76oNbiiJ9yGxGnQGxYZCVPrBBhMp2SxTjSGD88hUAx6BFlF7FqLGfFHZHKoIglWpy5u9TwuTEzajDtlBFG232+5DQfajVsTB+EB17JyIbVeZ1RvrToxKith/sDppmJ+b4ZwiN2AE3OfBZcF2QqYqFCRc7k1684KIgUzYcM/G5kp5qV5nTdXvfut3e28U0Hh/sn62a6OE7hI/mwU5TSchDp1sZnI0nE2YQ/AD/tHyacyER1zOZnc+z93lzY9VZuOv2q5DCD1PLmKk6WoxDjXQhLJa/0vKVKnuPRju31Ur69YgW8ALWljHd9R+Q73oRnnwzf/tvWaNBOuRpWh3VY3wsrHbLSe7efO1l2+nte8Gh6N3Hb1/RuV5YFneg8WFyavKXz8UaHZ0vzxYJjgzEdafyecp5Bb/UurnabMPv7CP79KjpTaXIHfByHnhv+j4G3etpV4tKTRDSMhoXnH975CMqF0LdxhgPwXPw3txPqdXfwKe71Y9","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get active PlanningUnit list for Realm","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-realm"},"next":{"title":"Get a PlanningUnit list for forecastingUnitId","permalink":"/fasp-documentation/docs/api/get-planning-unit-by-forecasting-unit-id"}}');var i=e(74848),l=e(28453),o=e(57742),s=e.n(o),r=e(78178),p=e.n(r),d=e(19624),c=e.n(d),u=e(96226),f=e.n(u),h=(e(77675),e(19365),e(51107));const m={id:"get-planning-unit-for-realm-all",title:"Get PlanningUnit list for Realm",description:"API used to get the complete PlanningUnit list for a Realm",sidebar_label:"Get PlanningUnit list for Realm",hide_title:!0,hide_table_of_contents:!0,api:"eJylVE1z2jAQ/SsaXdrOUExJeuFUOgkJl4TwccowmY29xmqNpEgyhPH4v2clm+AktGmmJ2Sxb9/b1dstuYOV5YNbrnOQUsjVQgrHlx2eoI2N0E4oyQd8OBmzwmLCnGIrdMxlyGK11jk6ZJMWlOXCOpYqw4BNEfI173Cl0YBPNE4oFcHbgJEyIW6Y5xSqwcCachqvqeSSPghifACBO1x4MRpcxl8rnNYxpAwc26mCbUHWOo/KI7zBh0IYJE3OFNjhNs5wDXxQcrfTnlZIhyv0oQRYg6uvTvq8qpYebrWSFq1H9Hs9//NakiuMtMdFUNZYEYF0gREfXfTLelhZVVWHn/ZO/pwQ2KVzeubAFbY7up7+HJ+dnV8xkQaqhUXDEoWWSeVYBhtkEMdo7buUp/9IeXU9vxtdL67O9pT75luNsUgF+eSZHx/fL/b7se6NKd5IyBkaQ3YK76oNbiiJ9yGxGnQGxYZCVPrBBhMp2SxTjSGD88hUAx6BFlF7FqLGfFHZHKoIglWpy5u9TwuTEzajDtlBFG232+5DQfajVsTB+EB17JyIbVeZ1RvrToxKith/sDppmJ+b4ZwiN2AE3OfBZcF2QqYqFCRc7k1684KIgUzYcM/G5kp5qV5nTdXvfut3e28U0Hh/sn62a6OE7hI/mwU5TSchDp1sZnI0nE2YQ/AD/tHyacyER1zOZnc+z93lzY9VZuOv2q5DCD1PLmKk6WoxDjXQhLJa/0vKVKnuPRju31Ur69YgW8ALWljHd9R+Q73oRnnwzf/tvWaNBOuRpWh3VY3wsrHbLSe7efO1l2+nte8Gh6N3Hb1/RuV5YFneg8WFyavKXz8UaHZ0vzxYJjgzEdafyecp5Bb/UurnabMPv7CP79KjpTaXIHfByHnhv+j4G3etpV4tKTRDSMhoXnH975CMqF0LdxhgPwXPw3txPqdXfwKe71Y9",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},g=void 0,x={},U=[];function Y(t){const n={p:"p",...(0,l.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Get PlanningUnit list for Realm"}),"\n",(0,i.jsx)(s(),{method:"get",path:"/api/planningUnit/realmId/{realmId}/all",context:"endpoint"}),"\n",(0,i.jsx)(n.p,{children:"API used to get the complete PlanningUnit list for a Realm"}),"\n",(0,i.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(p(),{parameters:[{name:"realmId",in:"path",description:"RealmId that you want the PlanningUnit list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,i.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,i.jsx)(f(),{id:void 0,label:void 0,responses:{200:{description:"Returns the PlanningUnit list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of PlanningUnit list",content:{"text/json":{}}}}})]})}function b(t={}){const{wrapper:n}={...(0,l.R)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(Y,{...t})}):Y(t)}}}]);