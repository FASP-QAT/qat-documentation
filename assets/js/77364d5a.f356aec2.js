"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[32916],{70517:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>R,contentTitle:()=>y,default:()=>C,frontMatter:()=>h,metadata:()=>i,toc:()=>b});const i=JSON.parse('{"id":"api/get-region-by-realm-country","title":"Get Region list based on RealmCountry list","description":"API used to get the Region list for a list of RealmCountry Ids. Empty list means you want the complete list of Regions","source":"@site/docs/api/get-region-by-realm-country.api.mdx","sourceDirName":"api","slug":"/api/get-region-by-realm-country","permalink":"/fasp-documentation/docs/api/get-region-by-realm-country","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-region-by-realm-country","title":"Get Region list based on RealmCountry list","description":"API used to get the Region list for a list of RealmCountry Ids. Empty list means you want the complete list of Regions","sidebar_label":"Get Region list based on RealmCountry list","hide_title":true,"hide_table_of_contents":true,"api":"eJzFVcly2zAM/RUOL21nXMt10otPdZrNlyy2c8p4MogEWWwlkSEpOxqN/r0gpSSSnSZtLz2JC4AHPD5AFbewNnxyyzWuhcz5asAjNKEWyrrthE+vZqwwGDEr2RotswmyubdlqTCWxVIzaJYyphtIs++yyK0u2SwyQ3aSKVs29xlCblgpC7aFvIkUykylaLETwIU2fMClQg0uiVlEaRB0c3VUdjHIToGGjEJoV0bFc9qQve4YUYABF64YBTbhuxXOe6aUFth+kjvlUgCND4XQSIlZXeCAmzDBDPik4rZUDl7kFtfoTMkhA9scHYx5Xa+cu1FUJBrnMR6N3Gc3J1toImsX/h7cU9CuueiQ7dPegmEKDNkQcigpidz6rPDRBj+MC13VdT3gh6OD34MCO7dWLSzYwgxPL+dHs+PjkwsmYo96Y1CzSKJhubQsgQ0yCEM05l3Iwz+EvLhc3p1e3lwcP0H6QulpjMJQxIIYeMbHR6LlHeSvrzE8I3udQ8pQa5Kwp09p3FAQJ3ZC1Wg1ig2ZPOvSP8KbaARHYkxkq1mvT9LchAegRNA0WdAXZ1D19zU5EcebJ0UXOiX/hPgxkyDYbrfDh4KkSUSEvj+AqiitCM1Q6vWeuq+0jIrQbVgT1Hfs9XRJlhvQAu5Tr0MvTJHH0hclbOpkfN0DYpBHbPqExpZSpi4I5dlAjYdfxsPRXgY0QT4YNz4amXhuCZ8tfDotmxB6NtvuPZ0urphFyOj2b8unRhTO43yxuHNx7s6vv60TE35WJvMm9ESpCJH6r4M4VUA9zJr8+5CxlMN70Ny9rZLGZpB3HM9oJr7aob3ubHXTI6Z6kdH/m7LtvPIqVinQlKzb+qtWubeclOtnnv9BDPZH62TnhISUEE/OtaocHzc6rWt3/FAgzezJ7epFe17ikTBuTU0TQ2rwDaI+ztvR+4n9w9x+tdr2EPLSt0RauB0tf2K5/yOpV+SRIESkXJd5YzQlZSvbcX+ZCq6tnifC2cmSZPQLtT6XEQ==","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get Region for a RegionId","permalink":"/fasp-documentation/docs/api/get-region-by-id"},"next":{"title":"get the ExpiredStockOutput list","permalink":"/fasp-documentation/docs/api/get-expired-stock"}}');var o=n(74848),s=n(28453),a=n(57742),l=n.n(a),r=n(78178),d=n.n(r),u=n(19624),c=n.n(u),p=n(96226),g=n.n(p),m=(n(77675),n(19365),n(51107));const h={id:"get-region-by-realm-country",title:"Get Region list based on RealmCountry list",description:"API used to get the Region list for a list of RealmCountry Ids. Empty list means you want the complete list of Regions",sidebar_label:"Get Region list based on RealmCountry list",hide_title:!0,hide_table_of_contents:!0,api:"eJzFVcly2zAM/RUOL21nXMt10otPdZrNlyy2c8p4MogEWWwlkSEpOxqN/r0gpSSSnSZtLz2JC4AHPD5AFbewNnxyyzWuhcz5asAjNKEWyrrthE+vZqwwGDEr2RotswmyubdlqTCWxVIzaJYyphtIs++yyK0u2SwyQ3aSKVs29xlCblgpC7aFvIkUykylaLETwIU2fMClQg0uiVlEaRB0c3VUdjHIToGGjEJoV0bFc9qQve4YUYABF64YBTbhuxXOe6aUFth+kjvlUgCND4XQSIlZXeCAmzDBDPik4rZUDl7kFtfoTMkhA9scHYx5Xa+cu1FUJBrnMR6N3Gc3J1toImsX/h7cU9CuueiQ7dPegmEKDNkQcigpidz6rPDRBj+MC13VdT3gh6OD34MCO7dWLSzYwgxPL+dHs+PjkwsmYo96Y1CzSKJhubQsgQ0yCEM05l3Iwz+EvLhc3p1e3lwcP0H6QulpjMJQxIIYeMbHR6LlHeSvrzE8I3udQ8pQa5Kwp09p3FAQJ3ZC1Wg1ig2ZPOvSP8KbaARHYkxkq1mvT9LchAegRNA0WdAXZ1D19zU5EcebJ0UXOiX/hPgxkyDYbrfDh4KkSUSEvj+AqiitCM1Q6vWeuq+0jIrQbVgT1Hfs9XRJlhvQAu5Tr0MvTJHH0hclbOpkfN0DYpBHbPqExpZSpi4I5dlAjYdfxsPRXgY0QT4YNz4amXhuCZ8tfDotmxB6NtvuPZ0urphFyOj2b8unRhTO43yxuHNx7s6vv60TE35WJvMm9ESpCJH6r4M4VUA9zJr8+5CxlMN70Ny9rZLGZpB3HM9oJr7aob3ubHXTI6Z6kdH/m7LtvPIqVinQlKzb+qtWubeclOtnnv9BDPZH62TnhISUEE/OtaocHzc6rWt3/FAgzezJ7epFe17ikTBuTU0TQ2rwDaI+ztvR+4n9w9x+tdr2EPLSt0RauB0tf2K5/yOpV+SRIESkXJd5YzQlZSvbcX+ZCq6tnifC2cmSZPQLtT6XEQ==",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},y=void 0,R={},b=[];function f(t){const e={p:"p",...(0,s.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Get Region list based on RealmCountry list"}),"\n",(0,o.jsx)(l(),{method:"get",path:"/api/region/realmCountryId/{realmCountryId}",context:"endpoint"}),"\n",(0,o.jsx)(e.p,{children:"API used to get the Region list for a list of RealmCountry Ids. Empty list means you want the complete list of Regions"}),"\n",(0,o.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(d(),{parameters:[{name:"realmCountryId",in:"path",description:"RealmCountryId that you want the Region list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,o.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,o.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"Returns the Region list based on the RealmCountry that was passed",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of Region list",content:{"text/json":{}}}}})]})}function C(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(f,{...t})}):f(t)}}}]);