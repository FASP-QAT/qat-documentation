"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[84771],{75537:(t,n,a)=>{a.r(n),a.d(n,{assets:()=>y,contentTitle:()=>C,default:()=>v,frontMatter:()=>g,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"api/get-planning-unit-capacity-for-realm-id-1","title":"Get PlanningUnitCapacity for a Realm","description":"API used to get PlanningUnitCapacity for a Realm","source":"@site/docs/api/get-planning-unit-capacity-for-realm-id-1.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-capacity-for-realm-id-1","permalink":"/fasp-documentation/docs/api/get-planning-unit-capacity-for-realm-id-1","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-capacity-for-realm-id-1","title":"Get PlanningUnitCapacity for a Realm","description":"API used to get PlanningUnitCapacity for a Realm","sidebar_label":"Get PlanningUnitCapacity for a Realm","hide_title":true,"hide_table_of_contents":true,"api":"eJydVMFy2jAQ/RWNLm1nKCYkvXAqbULCJSEBThmG2dgLVmskR1pDGI//vSthCiSkSXNCFvv2vV293VISzJ3s3Ms8A62Vno+1IjlpyARdbFVOymjZkd1BXxQOE0FGzJHEYC/6J+QQK1qLmbECxB1CtpANaXK04OH9hBMw6BimZ2yI7yfTE8bkYGGBhNZLKqXmD8baTQT/r7yWHCiVzwXWWQSlQGJtCrECTazmuFBrvEKLj4WyyPLIFtiQLk5xAbJTSlrnnlhpwjlaDuXSFkCbq9O2rKqJh7vcaIfOI9qtlv95LooKqx2LwuNCMuWIs8eGiTQFZnyi6Jfz8LKqqoY8a52+nhjEFVE+JKDCNXs3dz/65+cX10LNAuXYoRWJQSe0IZHCEgXEMTr3JuXZOymvb0bT3s34+nxL+WqVOx349HbR3451s8/xVkMm0Fp2Wnjp3OKSk3hjMrtFsqiWHGJmH2w4k7MBU1N7NniS7daREeQq2h+SKK6TRrU/o7I+VIzi1i+3Ni5sxglSbpvrRNFqtWo+FuxONVNxGBDgotakYtc0dv7C2QNrkiL2H2KTNMzZbXfEkUuwCh6yYMHgSaVnJlSlKPMOvj0gEqAT0d2yiZExmU/COjdU7eZJu9l6oYCH/5Pzk79xT2g184thkFO3E+LQznpke93hQBCCH7P/LZ9nUHnE1XA49XmmV7ff56mLv+ZuEUL4jTIVI4/eHmOXH4N1bfQfUs6MaT6Alf5xc+NoAXoPePm+dXbQknLnoI+sxnq9BOuxpXirVbXmsrbbvWS7efPtb2VudJ0vLK/tUuxsj/z+KZfn0WX5AA7HNqsqf/1YoF3z/WRnmeDMRDl/ZrPPIHP4jyo/39XL8ov4yKo9WnF9CXodrJwV/ouPv3G9t/WrCYemCAlbzWve/NtlK+a0h9vNsZ+DvzN8eTHid/8Daf9kDQ==","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get PlanningUnitCapacity for a Realm and a given date range","permalink":"/fasp-documentation/docs/api/get-planning-unit-capacity-for-realm-id"},"next":{"title":"Get PlanningUnit list for ProductCategory","permalink":"/fasp-documentation/docs/api/get-planning-unit-forproduct-category-all"}}');var e=a(74848),o=a(28453),s=a(57742),l=a.n(s),r=a(78178),d=a.n(r),p=a(19624),c=a.n(p),m=a(96226),u=a.n(m),f=(a(77675),a(19365),a(51107));const g={id:"get-planning-unit-capacity-for-realm-id-1",title:"Get PlanningUnitCapacity for a Realm",description:"API used to get PlanningUnitCapacity for a Realm",sidebar_label:"Get PlanningUnitCapacity for a Realm",hide_title:!0,hide_table_of_contents:!0,api:"eJydVMFy2jAQ/RWNLm1nKCYkvXAqbULCJSEBThmG2dgLVmskR1pDGI//vSthCiSkSXNCFvv2vV293VISzJ3s3Ms8A62Vno+1IjlpyARdbFVOymjZkd1BXxQOE0FGzJHEYC/6J+QQK1qLmbECxB1CtpANaXK04OH9hBMw6BimZ2yI7yfTE8bkYGGBhNZLKqXmD8baTQT/r7yWHCiVzwXWWQSlQGJtCrECTazmuFBrvEKLj4WyyPLIFtiQLk5xAbJTSlrnnlhpwjlaDuXSFkCbq9O2rKqJh7vcaIfOI9qtlv95LooKqx2LwuNCMuWIs8eGiTQFZnyi6Jfz8LKqqoY8a52+nhjEFVE+JKDCNXs3dz/65+cX10LNAuXYoRWJQSe0IZHCEgXEMTr3JuXZOymvb0bT3s34+nxL+WqVOx349HbR3451s8/xVkMm0Fp2Wnjp3OKSk3hjMrtFsqiWHGJmH2w4k7MBU1N7NniS7daREeQq2h+SKK6TRrU/o7I+VIzi1i+3Ni5sxglSbpvrRNFqtWo+FuxONVNxGBDgotakYtc0dv7C2QNrkiL2H2KTNMzZbXfEkUuwCh6yYMHgSaVnJlSlKPMOvj0gEqAT0d2yiZExmU/COjdU7eZJu9l6oYCH/5Pzk79xT2g184thkFO3E+LQznpke93hQBCCH7P/LZ9nUHnE1XA49XmmV7ff56mLv+ZuEUL4jTIVI4/eHmOXH4N1bfQfUs6MaT6Alf5xc+NoAXoPePm+dXbQknLnoI+sxnq9BOuxpXirVbXmsrbbvWS7efPtb2VudJ0vLK/tUuxsj/z+KZfn0WX5AA7HNqsqf/1YoF3z/WRnmeDMRDl/ZrPPIHP4jyo/39XL8ov4yKo9WnF9CXodrJwV/ouPv3G9t/WrCYemCAlbzWve/NtlK+a0h9vNsZ+DvzN8eTHid/8Daf9kDQ==",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},C=void 0,y={},h=[];function b(t){const n={p:"p",...(0,o.R)(),...t.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Get PlanningUnitCapacity for a Realm"}),"\n",(0,e.jsx)(l(),{method:"get",path:"/api/planningUnit/capacity/realmId/{realmId}",context:"endpoint"}),"\n",(0,e.jsx)(n.p,{children:"API used to get PlanningUnitCapacity for a Realm"}),"\n",(0,e.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,e.jsx)(d(),{parameters:[{name:"realmId",in:"path",description:"RealmId that you want a PlanningUnitCapacity from",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,e.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,e.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Returns the PlanningUnitCapacity list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the PlanningUnitCapacity list does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of PlanningUnitCapacity list",content:{"text/json":{}}}}})]})}function v(t={}){const{wrapper:n}={...(0,o.R)(),...t.components};return n?(0,e.jsx)(n,{...t,children:(0,e.jsx)(b,{...t})}):b(t)}}}]);