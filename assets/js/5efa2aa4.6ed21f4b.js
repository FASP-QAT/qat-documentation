"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[83694],{61317:(t,n,a)=>{a.r(n),a.d(n,{assets:()=>y,contentTitle:()=>h,default:()=>U,frontMatter:()=>f,metadata:()=>e,toc:()=>v});const e=JSON.parse('{"id":"api/get-planning-unit-capacity-for-realm-id","title":"Get PlanningUnitCapacity for a Realm and a given date range","description":"API used to get PlanningUnitCapacity for a Realm and a given date range","source":"@site/docs/api/get-planning-unit-capacity-for-realm-id.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-capacity-for-realm-id","permalink":"/fasp-documentation/docs/api/get-planning-unit-capacity-for-realm-id","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-capacity-for-realm-id","title":"Get PlanningUnitCapacity for a Realm and a given date range","description":"API used to get PlanningUnitCapacity for a Realm and a given date range","sidebar_label":"Get PlanningUnitCapacity for a Realm and a given date range","hide_title":true,"hide_table_of_contents":true,"api":"eJytVk1zGjkQ/SsqXbKpIoxDkgunZYOJqUoBBnxKuVztmQa0O0hjqQdCTc1/35Zm+EpwgnFOaKRWv9fq7tcUkmDuZPubzFLQWun5nVYk7xsyQRdblZEyWrZlZ9QXucNEkBFzJDE6sP4MGcSKNmJmrAAxRkiXAnTC67laoRYJEAoLeo6yIU2GFrzXfsJ+2dcpVz1jgxu2acgMLCyR0HqehdT8wTft7lx5ghnQQv7IurYRtAASG5OLNWhiWqfZW7NkDxafcmWRyZHNsSFdvMAlyHYhaZN5YKUJ52jZlONdAlVbH1qyLBs7do7AUpfj/iW/nRUzxOqZdiz9zkmebAZnk3Vk+f4P1Ex2BrPK6MXESKXpi4jde2OXGe3Q+fPW1ZX/OaYzRsqtds9jp8oRw8aGk6Mp4OB3iv51/npRcvzy49WH5x2DuCHKJgSUu2ZvOP6n3+1eD4SaBcg7h1YkBp3QhsQCViggjtG530J+PBNyMJw+9IZ3g+4W8tko9zzw+xlBv2+dyWA0vv48HHT70/5w8NDr9L9eBy4xWgKlBYMkyt93WwnwLI8JcZP+hs6nU8nts73VkAq0lhUkNGtmkZWDvOAwjEWyqFZsYmYX5p/Bmd7C1KITZIXrvi0jyFR0KH5RXDuNavmIinpRRo9Ia0QdFbvOLf266pWSnXKhrLZClduU/S/4iV07itbrdfMp5wZSMxUHAQSOeUMqdk1j5z914MiaJI/9h6icBnm97UzZcgVWwWMaGiZ0kNIzE4JWlPruuj0CCmLc2aKJqTG+RT3PCqrVfN9qXv3EgDX/Tch2VeshE4wvJoFO/doQh9eutaXXmYwEIXhtemn4rA/K37iZTB68n4eb27/nCxe/y9wymHAKUxUjC8UBYodzxbwq/seQM2Oaj2C9+MnMOFqCPrj45VVT7Oilin3d/cFBWQtlqGOuT9bqso6wqGv3m+Ta9ZV8OLo5LTVMkOHtkGzvl3UR+83DMdXeDQYuqAW/lwcoikdweGfTsvTbTznaDe/f72swlHqinF9zc80gdfiL9/lrXE+Gt+KS6XzyUepN0JvQG2nuv3j5H24O/ij4EXgRz1dP6QtI7xPzCtqvG+EXsa4rqLxn2wVCwjrh66M67rCOZHRwca/RXsR2+vzlespN+z+hbK8c","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get a PlanningUnit list for forecastingUnitId","permalink":"/fasp-documentation/docs/api/get-planning-unit-by-forecasting-unit-id"},"next":{"title":"Get PlanningUnitCapacity for a Realm","permalink":"/fasp-documentation/docs/api/get-planning-unit-capacity-for-realm-id-1"}}');var i=a(74848),s=a(28453),d=a(57742),r=a.n(d),o=a(78178),l=a.n(o),c=a(19624),p=a.n(c),g=a(96226),u=a.n(g),m=(a(77675),a(19365),a(51107));const f={id:"get-planning-unit-capacity-for-realm-id",title:"Get PlanningUnitCapacity for a Realm and a given date range",description:"API used to get PlanningUnitCapacity for a Realm and a given date range",sidebar_label:"Get PlanningUnitCapacity for a Realm and a given date range",hide_title:!0,hide_table_of_contents:!0,api:"eJytVk1zGjkQ/SsqXbKpIoxDkgunZYOJqUoBBnxKuVztmQa0O0hjqQdCTc1/35Zm+EpwgnFOaKRWv9fq7tcUkmDuZPubzFLQWun5nVYk7xsyQRdblZEyWrZlZ9QXucNEkBFzJDE6sP4MGcSKNmJmrAAxRkiXAnTC67laoRYJEAoLeo6yIU2GFrzXfsJ+2dcpVz1jgxu2acgMLCyR0HqehdT8wTft7lx5ghnQQv7IurYRtAASG5OLNWhiWqfZW7NkDxafcmWRyZHNsSFdvMAlyHYhaZN5YKUJ52jZlONdAlVbH1qyLBs7do7AUpfj/iW/nRUzxOqZdiz9zkmebAZnk3Vk+f4P1Ex2BrPK6MXESKXpi4jde2OXGe3Q+fPW1ZX/OaYzRsqtds9jp8oRw8aGk6Mp4OB3iv51/npRcvzy49WH5x2DuCHKJgSUu2ZvOP6n3+1eD4SaBcg7h1YkBp3QhsQCViggjtG530J+PBNyMJw+9IZ3g+4W8tko9zzw+xlBv2+dyWA0vv48HHT70/5w8NDr9L9eBy4xWgKlBYMkyt93WwnwLI8JcZP+hs6nU8nts73VkAq0lhUkNGtmkZWDvOAwjEWyqFZsYmYX5p/Bmd7C1KITZIXrvi0jyFR0KH5RXDuNavmIinpRRo9Ia0QdFbvOLf266pWSnXKhrLZClduU/S/4iV07itbrdfMp5wZSMxUHAQSOeUMqdk1j5z914MiaJI/9h6icBnm97UzZcgVWwWMaGiZ0kNIzE4JWlPruuj0CCmLc2aKJqTG+RT3PCqrVfN9qXv3EgDX/Tch2VeshE4wvJoFO/doQh9eutaXXmYwEIXhtemn4rA/K37iZTB68n4eb27/nCxe/y9wymHAKUxUjC8UBYodzxbwq/seQM2Oaj2C9+MnMOFqCPrj45VVT7Oilin3d/cFBWQtlqGOuT9bqso6wqGv3m+Ta9ZV8OLo5LTVMkOHtkGzvl3UR+83DMdXeDQYuqAW/lwcoikdweGfTsvTbTznaDe/f72swlHqinF9zc80gdfiL9/lrXE+Gt+KS6XzyUepN0JvQG2nuv3j5H24O/ij4EXgRz1dP6QtI7xPzCtqvG+EXsa4rqLxn2wVCwjrh66M67rCOZHRwca/RXsR2+vzlespN+z+hbK8c",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},h=void 0,y={},v=[];function R(t){const n={p:"p",...(0,s.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Get PlanningUnitCapacity for a Realm and a given date range"}),"\n",(0,i.jsx)(r(),{method:"get",path:"/api/planningUnit/capacity/realmId/{realmId}/between/{startDate}/{stopDate}",context:"endpoint"}),"\n",(0,i.jsx)(n.p,{children:"API used to get PlanningUnitCapacity for a Realm and a given date range"}),"\n",(0,i.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(l(),{parameters:[{name:"realmId",in:"path",description:"realmId that you want a PlanningUnitCapacity from",required:!0,schema:{type:"integer",format:"int32"}},{name:"startDate",in:"path",description:"startDate the date you want the PlanningUnitCapacity data from",required:!0,schema:{type:"string"}},{name:"stopDate",in:"path",description:"stopDate the date you want the PlanningUnitCapacity data till",required:!0,schema:{type:"string"}}]}),"\n",(0,i.jsx)(p(),{title:"Body",body:void 0}),"\n",(0,i.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Returns the PlanningUnitCapacity list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the PlanningUnitCapacity list does not exist",content:{"text/json":{}}},412:{description:"Returns a HttpStatus.PRECONDITION_FAILED if certain conditions to get the list does not met",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of PlanningUnitCapacity list",content:{"text/json":{}}}}})]})}function U(t={}){const{wrapper:n}={...(0,s.R)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(R,{...t})}):R(t)}}}]);