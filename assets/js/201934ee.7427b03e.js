"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[30660],{77386:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>I,contentTitle:()=>h,default:()=>y,frontMatter:()=>f,metadata:()=>i,toc:()=>j});const i=JSON.parse('{"id":"api/get-planning-unit-for-program","title":"Get Planning Unit List For Specified ProgramId","description":"API used to get the Planning unit list for specified programId","source":"@site/docs/api/get-planning-unit-for-program.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-for-program","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-program","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-for-program","title":"Get Planning Unit List For Specified ProgramId","description":"API used to get the Planning unit list for specified programId","sidebar_label":"Get Planning Unit List For Specified ProgramId","hide_title":true,"hide_table_of_contents":true,"api":"eJylVE1vGjEQ/SuWL20lCpSkF06lSkiQqoQEOEUomuwOrNvFduxZKFrtf+/YLF9N0jTtibWZmfdm/N6UkmDuZfdOWmfmDhZy2pAp+sQpS8po2ZW94UAUHlNBRsyRBGUohjlorfRcFFqRyJUnMTNOeIuJmimOrasNUtmQxqKDUIxPXcklttkTTu4bN6yRG9IC/yKhC4xKqfnAGYe1VGBkgTL5O81dFBMEEmtTiBVo2rJ+njFXcfhYKIdMjVyBDemTDBcgu6WktQ3wShPOMYRywgJoc3XSkVU1DeneGu3Rh4xOux1+jondIhVO+xfmxmUTwwiaIiT+pNZ3H/LKqqoa8rR98nJFEJdEdkRAhW/2r2+/Ds7Ozq+EmkWsiUcnUoNeaEMigyUKSBL0/lXI07+EvLoe3/evJ1dnW0hvFijM5rvQKbp8HZpNgWDPhEeYZM1XSHx+bpIDjncacoHOsdriO1uHSy4S5MmgDsmhWnIIs3jjsBmVtZeZWqRRjqyzrmyBVa1aXq1yp7OqZQ90zOE87+VWuoXLOTPjWfluq7VarZqPBauRzZFEKwC3sSaV+KZx8ydaZkekRRIOYlM0uuumN+bIJTgFD3kUXFSg0jMT21GUB73eHAEJ0KnobdHE2Jg8FGGeG6hO81On2X7CgE3/zgfvbCQTh8v4YhTp1HOEJM6xtmm/NxoKwmjkt7bPjlMh43I0ug917i9vvswzn3y0fhFD+HFylSAb7QCxZ4HNKjb8jyFnxjQfwMnwqtZ4WoA+SLw4XAjh9cS3sBB4F4nRboUND9bO0XDKvYj+fznWSyZqkfXE+62qeylr/d1J1l9Q425Ndg8LHImQ5ZBxtyGpLB/A48TlVRWuHwt0a76f7hUUhZoqH75Z9DPIPf6h1fe39ab8IP511z7bbH0Jeh3VnRfhxJ8/cH20/KspB2cIvFYi883/PdanpYPMvauDOXaOvjgfsxh+ASBfZpI=","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get Complete Program list","permalink":"/fasp-documentation/docs/api/get-program-all"},"next":{"title":"Get Planning Unit List For Specified ProgramId and TracerCategoryIds","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-program-tracer-category"}}');var a=e(74848),o=e(28453),r=e(57742),s=e.n(r),d=e(78178),p=e.n(d),l=e(19624),m=e.n(l),g=e(96226),u=e.n(g),c=(e(77675),e(19365),e(51107));const f={id:"get-planning-unit-for-program",title:"Get Planning Unit List For Specified ProgramId",description:"API used to get the Planning unit list for specified programId",sidebar_label:"Get Planning Unit List For Specified ProgramId",hide_title:!0,hide_table_of_contents:!0,api:"eJylVE1vGjEQ/SuWL20lCpSkF06lSkiQqoQEOEUomuwOrNvFduxZKFrtf+/YLF9N0jTtibWZmfdm/N6UkmDuZfdOWmfmDhZy2pAp+sQpS8po2ZW94UAUHlNBRsyRBGUohjlorfRcFFqRyJUnMTNOeIuJmimOrasNUtmQxqKDUIxPXcklttkTTu4bN6yRG9IC/yKhC4xKqfnAGYe1VGBkgTL5O81dFBMEEmtTiBVo2rJ+njFXcfhYKIdMjVyBDemTDBcgu6WktQ3wShPOMYRywgJoc3XSkVU1DeneGu3Rh4xOux1+jondIhVO+xfmxmUTwwiaIiT+pNZ3H/LKqqoa8rR98nJFEJdEdkRAhW/2r2+/Ds7Ozq+EmkWsiUcnUoNeaEMigyUKSBL0/lXI07+EvLoe3/evJ1dnW0hvFijM5rvQKbp8HZpNgWDPhEeYZM1XSHx+bpIDjncacoHOsdriO1uHSy4S5MmgDsmhWnIIs3jjsBmVtZeZWqRRjqyzrmyBVa1aXq1yp7OqZQ90zOE87+VWuoXLOTPjWfluq7VarZqPBauRzZFEKwC3sSaV+KZx8ydaZkekRRIOYlM0uuumN+bIJTgFD3kUXFSg0jMT21GUB73eHAEJ0KnobdHE2Jg8FGGeG6hO81On2X7CgE3/zgfvbCQTh8v4YhTp1HOEJM6xtmm/NxoKwmjkt7bPjlMh43I0ug917i9vvswzn3y0fhFD+HFylSAb7QCxZ4HNKjb8jyFnxjQfwMnwqtZ4WoA+SLw4XAjh9cS3sBB4F4nRboUND9bO0XDKvYj+fznWSyZqkfXE+62qeylr/d1J1l9Q425Ndg8LHImQ5ZBxtyGpLB/A48TlVRWuHwt0a76f7hUUhZoqH75Z9DPIPf6h1fe39ab8IP511z7bbH0Jeh3VnRfhxJ8/cH20/KspB2cIvFYi883/PdanpYPMvauDOXaOvjgfsxh+ASBfZpI=",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},h=void 0,I={},j=[];function x(t){const n={p:"p",...(0,o.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(c.default,{as:"h1",className:"openapi__heading",children:"Get Planning Unit List For Specified ProgramId"}),"\n",(0,a.jsx)(s(),{method:"get",path:"/api/program/{programId}/planningUnit",context:"endpoint"}),"\n",(0,a.jsx)(n.p,{children:"API used to get the Planning unit list for specified programId"}),"\n",(0,a.jsx)(c.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(p(),{parameters:[{name:"programId",in:"path",description:"programId that you want to get Planning unit list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,a.jsx)(m(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Returns the Planning unit list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the some of the underlying data does not match.",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of Planning unit list",content:{"text/json":{}}}}})]})}function y(t={}){const{wrapper:n}={...(0,o.R)(),...t.components};return n?(0,a.jsx)(n,{...t,children:(0,a.jsx)(x,{...t})}):x(t)}}}]);