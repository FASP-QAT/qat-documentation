"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3298],{52493:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>f,default:()=>H,frontMatter:()=>g,metadata:()=>r,toc:()=>v});const r=JSON.parse('{"id":"api/get-health-area-for-program-by-realm","title":"Get HealthArea list for active Programs","description":"API used to get the complete HealthArea list that are linked to active Programs","source":"@site/docs/api/get-health-area-for-program-by-realm.api.mdx","sourceDirName":"api","slug":"/api/get-health-area-for-program-by-realm","permalink":"/fasp-documentation/docs/api/get-health-area-for-program-by-realm","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-health-area-for-program-by-realm","title":"Get HealthArea list for active Programs","description":"API used to get the complete HealthArea list that are linked to active Programs","sidebar_label":"Get HealthArea list for active Programs","hide_title":true,"hide_table_of_contents":true,"api":"eJy1VE1z2jAQ/SsaXdrOUExJeuFUMgmBSz6AnDJMZmMvWI2xFEmGMB7/9+7KJpCENk1nerIl7+57u35vS+lh4WTvVqYImU/7FkHOWjJBF1tlvNK57Mn+1UgUDhPhtVigFz5FEeulydCjGD4nikw5/ghegEU65Q91DsRerVBcWb2wsHSyJbVBC1x9lFB9qrmrMtC2CTzZjOl2SeEG6EhglqmWMqcDpVn+SgVaUjFLAz6Vr6mP65ia1UYXYg25Z07cw2vqc22pgMXHQlkkYt4W2JIuTnEJsldKvzGMq3KPC+RQSliCr6+OurKqZpzujM4dOs7odjr8eM3JFzZ3hyhQzVhT+dwHPHzy0U/HSWVVVS153Dn6fTkQQ+/NxIMvXHtwOT4ZnZ6eXQg1D0A3Dq1INDqRay9SoP8BcYzOvQt5/JeQF5fTu8HlzcXpFnI7e2cwVnNFWnjGx6f3m/1+aHYjirc5ZAKt1bb+rcbiioqw1gjVoreoVhSi5x8aL0GSxlLdKDLIjhTVkxEYFe38EZlanlGjv6hsXipKoSmvtjItbEbZKU3I9aJovV63HwtSH40iDtoH6mPjVeza2i7eKJdMkBQxH0RdlOUprvtTilyBVXCfBY0F0al8rkNLymcs0esXQALyRPS3aGKqdcZFiGcN1W1/67Y7bxiQ7T+52r8slDBdwheTQKeZJXmbgRtLDvqTK+ER2LQfbZ9MpjhjOJnccZ274fWPRerir8YtQwj9oEzFSN7aQ+wbIH+Kmv9LyLnW7Xuwkv+s0c4vId9LPKdFdmABHFhWL6ZS7hT0H/Zis2GCMk0GtNeqpquyUeOtJDVS5N6+pu7qCmF5bXdib/tK8kipe04ty3tweGOzquLrxwLthu5nO0UF4SbK8TsZYQ6Zwz9M4PO4WZZfxD9s2oPdNpeQb4LQs4JP9PqAm72dX82qMIOEhMiU6699Eqrxe3k7i7NLnu19fjYlVfwCaMZoew==","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get HealthArea list for active Programs","permalink":"/fasp-documentation/docs/api/get-health-area-by-for-program"},"next":{"title":"Get HealthArea by display name","permalink":"/fasp-documentation/docs/api/get-health-area-by-display-name"}}');var i=a(74848),s=a(28453),o=a(57742),l=a.n(o),n=a(78178),d=a.n(n),h=a(19624),c=a.n(h),p=a(96226),m=a.n(p),u=(a(77675),a(19365),a(51107));const g={id:"get-health-area-for-program-by-realm",title:"Get HealthArea list for active Programs",description:"API used to get the complete HealthArea list that are linked to active Programs",sidebar_label:"Get HealthArea list for active Programs",hide_title:!0,hide_table_of_contents:!0,api:"eJy1VE1z2jAQ/SsaXdrOUExJeuFUMgmBSz6AnDJMZmMvWI2xFEmGMB7/9+7KJpCENk1nerIl7+57u35vS+lh4WTvVqYImU/7FkHOWjJBF1tlvNK57Mn+1UgUDhPhtVigFz5FEeulydCjGD4nikw5/ghegEU65Q91DsRerVBcWb2wsHSyJbVBC1x9lFB9qrmrMtC2CTzZjOl2SeEG6EhglqmWMqcDpVn+SgVaUjFLAz6Vr6mP65ia1UYXYg25Z07cw2vqc22pgMXHQlkkYt4W2JIuTnEJsldKvzGMq3KPC+RQSliCr6+OurKqZpzujM4dOs7odjr8eM3JFzZ3hyhQzVhT+dwHPHzy0U/HSWVVVS153Dn6fTkQQ+/NxIMvXHtwOT4ZnZ6eXQg1D0A3Dq1INDqRay9SoP8BcYzOvQt5/JeQF5fTu8HlzcXpFnI7e2cwVnNFWnjGx6f3m/1+aHYjirc5ZAKt1bb+rcbiioqw1gjVoreoVhSi5x8aL0GSxlLdKDLIjhTVkxEYFe38EZlanlGjv6hsXipKoSmvtjItbEbZKU3I9aJovV63HwtSH40iDtoH6mPjVeza2i7eKJdMkBQxH0RdlOUprvtTilyBVXCfBY0F0al8rkNLymcs0esXQALyRPS3aGKqdcZFiGcN1W1/67Y7bxiQ7T+52r8slDBdwheTQKeZJXmbgRtLDvqTK+ER2LQfbZ9MpjhjOJnccZ274fWPRerir8YtQwj9oEzFSN7aQ+wbIH+Kmv9LyLnW7Xuwkv+s0c4vId9LPKdFdmABHFhWL6ZS7hT0H/Zis2GCMk0GtNeqpquyUeOtJDVS5N6+pu7qCmF5bXdib/tK8kipe04ty3tweGOzquLrxwLthu5nO0UF4SbK8TsZYQ6Zwz9M4PO4WZZfxD9s2oPdNpeQb4LQs4JP9PqAm72dX82qMIOEhMiU6699Eqrxe3k7i7NLnu19fjYlVfwCaMZoew==",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},f=void 0,b={},v=[];function j(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"Get HealthArea list for active Programs"}),"\n",(0,i.jsx)(l(),{method:"get",path:"/api/healthArea/program/realmId/{realmId}",context:"endpoint"}),"\n",(0,i.jsx)(t.p,{children:"API used to get the complete HealthArea list that are linked to active Programs"}),"\n",(0,i.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(d(),{parameters:[{name:"realmId",in:"path",description:"RealmId that you want to the HealthArea list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,i.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,i.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Returns the HealthArea list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of HealthArea list",content:{"text/json":{}}}}})]})}function H(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(j,{...e})}):j(e)}}}]);