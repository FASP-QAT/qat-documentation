"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[64012],{62836:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>x,contentTitle:()=>y,default:()=>S,frontMatter:()=>f,metadata:()=>o,toc:()=>D});const o=JSON.parse('{"id":"api/get-data-source-type-list-for-realm-id","title":"Get DataSourceType for a realmId","description":"API used to get the DataSourceType for a specific realmId","source":"@site/docs/api/get-data-source-type-list-for-realm-id.api.mdx","sourceDirName":"api","slug":"/api/get-data-source-type-list-for-realm-id","permalink":"/fasp-documentation/docs/api/get-data-source-type-list-for-realm-id","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-data-source-type-list-for-realm-id","title":"Get DataSourceType for a realmId","description":"API used to get the DataSourceType for a specific realmId","sidebar_label":"Get DataSourceType for a realmId","hide_title":true,"hide_table_of_contents":true,"api":"eJyllE1v2kAQhv/Kai9tJQqUpBefSkVIkKp8AacIRRN7wNsa72Z3DEGW/3tnFztAQptGPWGbmXnfnX1mSkmwcDK6kwkQjHVhY5xsDMpZSyboYqsMKZ3LSPavR6JwmAjSYoEkKEUxOMgRc20FCGcwVnMVC4uQLUeJbElt0IKvw2+R5OzDxB/K0VDb2+d4AxaWSGi9s1Lm/MJ5u3rKGzJAqXzpsq7B7oDERhdiDTl5y8ftcr7Fx0JZZGNkC2xJF6e4BBmVknwfIhYjXKAP5YQl0PbTSU9W1cynO6Nzh85n9Lpd//PSEhU2d0cccMlYc/Wcghw+Ueen8zllVVUtedo9+XM1EBdEZkxAhWsPr26/jwaDs0uh5kFn6tCKRKMTuSaRwgoFxDE617Qi9OlN/dN/1L+8mtwPr6aXg0a/uYaaBabm2Qw+8W2/ofz1WB9HHG9zyARay6CFGzYWV1zEU8mqFsmiWnGInr+n1azItKW6hjMAyGxFsgNGdQ4Ho1PWGFYcxl1eNZAWNuOMlJviok5nvV63Hwtmz09CQB/Y+oZU7NraLl5xe211UsT+RWyLhmG66U84cgVWwUMWEAvMqXyuwzEUZZ7QmwMhAXki+o2amGid+SLscyvVa3/ptbuvHPB8fwh4NKBwQ1lfjIOdun8Qh/7VAznsj68FIXiQ3nt8njHlMy7G43tf5/7i5tsidfFn45YhhC8lUzHyaO0p9g3weIqt/0PJudbtB7DS36bRjpaQ7yWe88Y6uq12S+WgHeUOl//afPUOCcCZDHhxVbXxsobsTjJkXv4lr1FThW885QP50LJ8AIdTm1WV//xYoN3w99kOksBiopx/Zp7nkDn8y9k+3tbr75N4/+o8erj6I+SbgG5W+Dd+/IWbvR1ezTg0RUgYLe94+2+f0TO0l7cbVM/985Cen034nn8DGNVSTA==","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get DataSourceType list","permalink":"/fasp-documentation/docs/api/get-data-source-type-list-all"},"next":{"title":"Get dataset list for programId and versionId","permalink":"/fasp-documentation/docs/api/get-dataset-data"}}');var n=a(74848),s=a(28453),i=a(57742),r=a.n(i),d=a(78178),c=a.n(d),l=a(19624),p=a.n(l),u=a(96226),m=a.n(u),h=(a(77675),a(19365),a(51107));const f={id:"get-data-source-type-list-for-realm-id",title:"Get DataSourceType for a realmId",description:"API used to get the DataSourceType for a specific realmId",sidebar_label:"Get DataSourceType for a realmId",hide_title:!0,hide_table_of_contents:!0,api:"eJyllE1v2kAQhv/Kai9tJQqUpBefSkVIkKp8AacIRRN7wNsa72Z3DEGW/3tnFztAQptGPWGbmXnfnX1mSkmwcDK6kwkQjHVhY5xsDMpZSyboYqsMKZ3LSPavR6JwmAjSYoEkKEUxOMgRc20FCGcwVnMVC4uQLUeJbElt0IKvw2+R5OzDxB/K0VDb2+d4AxaWSGi9s1Lm/MJ5u3rKGzJAqXzpsq7B7oDERhdiDTl5y8ftcr7Fx0JZZGNkC2xJF6e4BBmVknwfIhYjXKAP5YQl0PbTSU9W1cynO6Nzh85n9Lpd//PSEhU2d0cccMlYc/Wcghw+Ueen8zllVVUtedo9+XM1EBdEZkxAhWsPr26/jwaDs0uh5kFn6tCKRKMTuSaRwgoFxDE617Qi9OlN/dN/1L+8mtwPr6aXg0a/uYaaBabm2Qw+8W2/ofz1WB9HHG9zyARay6CFGzYWV1zEU8mqFsmiWnGInr+n1azItKW6hjMAyGxFsgNGdQ4Ho1PWGFYcxl1eNZAWNuOMlJviok5nvV63Hwtmz09CQB/Y+oZU7NraLl5xe211UsT+RWyLhmG66U84cgVWwUMWEAvMqXyuwzEUZZ7QmwMhAXki+o2amGid+SLscyvVa3/ptbuvHPB8fwh4NKBwQ1lfjIOdun8Qh/7VAznsj68FIXiQ3nt8njHlMy7G43tf5/7i5tsidfFn45YhhC8lUzHyaO0p9g3weIqt/0PJudbtB7DS36bRjpaQ7yWe88Y6uq12S+WgHeUOl//afPUOCcCZDHhxVbXxsobsTjJkXv4lr1FThW885QP50LJ8AIdTm1WV//xYoN3w99kOksBiopx/Zp7nkDn8y9k+3tbr75N4/+o8erj6I+SbgG5W+Dd+/IWbvR1ezTg0RUgYLe94+2+f0TO0l7cbVM/985Cen034nn8DGNVSTA==",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},y=void 0,x={},D=[];function I(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Get DataSourceType for a realmId"}),"\n",(0,n.jsx)(r(),{method:"get",path:"/api/dataSourceType/{realmId}",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"API used to get the DataSourceType for a specific realmId"}),"\n",(0,n.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(c(),{parameters:[{name:"realmId",in:"path",description:"RealmId that you want to the DataSourceType for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,n.jsx)(p(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Returns the DataSourceType",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access to the Realm",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of DataSourceType",content:{"text/json":{}}}}})]})}function S(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(I,{...e})}):I(e)}}}]);