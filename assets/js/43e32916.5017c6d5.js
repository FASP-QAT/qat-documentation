"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[35958],{39987:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>U,contentTitle:()=>I,default:()=>y,frontMatter:()=>h,metadata:()=>n,toc:()=>P});const n=JSON.parse('{"id":"api/get-procurement-unit-for-realm","title":"Get ProcurementUnit for a RealmId","description":"API used to get all the ProcurementUnits for a specific RealmId. Will only return those ProcurementUnits that are marked active","source":"@site/docs/api/get-procurement-unit-for-realm.api.mdx","sourceDirName":"api","slug":"/api/get-procurement-unit-for-realm","permalink":"/fasp-documentation/docs/api/get-procurement-unit-for-realm","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-procurement-unit-for-realm","title":"Get ProcurementUnit for a RealmId","description":"API used to get all the ProcurementUnits for a specific RealmId. Will only return those ProcurementUnits that are marked active","sidebar_label":"Get ProcurementUnit for a RealmId","hide_title":true,"hide_table_of_contents":true,"api":"eJzNVU1z2jAQ/SsaXdrOUExJeuFUOgkJl3zwMT1kmMzGXrAaW1IkGcJ4/N+7kk34CE3annrClvfte7t6u5TcwcLy3h3XRsWFwRylm0rh+KzFE7SxEdoJJXmP92+GrLCYMKfYAh2DLGMuRXazD7RsrgwDZjXGYi5iNkLI8mHSZj8EIZTM1sygK4wktLJH8C4Fym6Q5WAeiQ9iJ5bIW1xpNODVDBPSQxoOoANlAhmFajCQo0Pjayu5pBeCmFoKfRe+Ig0u5YdlNnJrFWtVsBVI52s+UqsvlRIYfCqEQRLlTIEtbuMUc+C9kru19rxCOlygDyVADq4+Ounyqpp5uNVKWrQe0e10/M+hJt8ve7zdmbCOMseKSKQLrPjsop/WQ8uqqlr8tHPy+6TALp3TYweusO3B9ej78Ozs/IqJeaCbWjQsUWiZVI6lsES6jxitfZfy9A8pr64n94Pr6dXZhnJzA42DyAEv/Pj8frFfj3VwSPFGQsbQGLJnuFxtcElJvKOJlTxpUCwpRM0Pm/wmI1GS01LVeDKYj3zV4xFoER2MVdRYMCqbh4riqcXLjVMLkxE0pfbYXhStVqv2U0EG9JMUrA9UxNqJ2LaVWbwyL+lOiti/sDppGMbb/oQil2AEPGTBZsF3Qs5VqEe4zLv0do+IgUxYf8PGJkplPgnprKm67S/ddueVAtoSH6wfl9olobXEz8ZBTtNImmhP3EzloD++YQ7Bz+3flk9zJjzicjy+93nuL2+/LVIbf9Y2DyF0O5mIkcZrh7GvgUaU1fr3KedKtR/AcH+tWlmXg9wBXtDeO7IDyNCjl9Wy149ya5z/YIE26ygYWGdAS7Bq6i8b095xMq238KsB2O7O3uaRPEQCnEeV5QNYnJqsqvzxU4FmTeezre2CuxNh/TONyhwyi2806+OoWaqf2D9s5KOFNocg12EassK/0eMjrnf+G6oZhaYICbnVS66/9snN2u3gtkvAj9LLArg4n5B1fgFU344z","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get ProcurementUnit list","permalink":"/fasp-documentation/docs/api/get-procurement-unit-all"},"next":{"title":"Get ProcurementUnit for a RealmId","permalink":"/fasp-documentation/docs/api/get-procurement-unit-for-realm-all"}}');var a=r(74848),i=r(28453),o=r(57742),s=r.n(o),l=r(78178),c=r.n(l),u=r(19624),d=r.n(u),m=r(96226),p=r.n(m),f=(r(77675),r(19365),r(51107));const h={id:"get-procurement-unit-for-realm",title:"Get ProcurementUnit for a RealmId",description:"API used to get all the ProcurementUnits for a specific RealmId. Will only return those ProcurementUnits that are marked active",sidebar_label:"Get ProcurementUnit for a RealmId",hide_title:!0,hide_table_of_contents:!0,api:"eJzNVU1z2jAQ/SsaXdrOUExJeuFUOgkJl3zwMT1kmMzGXrAaW1IkGcJ4/N+7kk34CE3annrClvfte7t6u5TcwcLy3h3XRsWFwRylm0rh+KzFE7SxEdoJJXmP92+GrLCYMKfYAh2DLGMuRXazD7RsrgwDZjXGYi5iNkLI8mHSZj8EIZTM1sygK4wktLJH8C4Fym6Q5WAeiQ9iJ5bIW1xpNODVDBPSQxoOoANlAhmFajCQo0Pjayu5pBeCmFoKfRe+Ig0u5YdlNnJrFWtVsBVI52s+UqsvlRIYfCqEQRLlTIEtbuMUc+C9kru19rxCOlygDyVADq4+Ounyqpp5uNVKWrQe0e10/M+hJt8ve7zdmbCOMseKSKQLrPjsop/WQ8uqqlr8tHPy+6TALp3TYweusO3B9ej78Ozs/IqJeaCbWjQsUWiZVI6lsES6jxitfZfy9A8pr64n94Pr6dXZhnJzA42DyAEv/Pj8frFfj3VwSPFGQsbQGLJnuFxtcElJvKOJlTxpUCwpRM0Pm/wmI1GS01LVeDKYj3zV4xFoER2MVdRYMCqbh4riqcXLjVMLkxE0pfbYXhStVqv2U0EG9JMUrA9UxNqJ2LaVWbwyL+lOiti/sDppGMbb/oQil2AEPGTBZsF3Qs5VqEe4zLv0do+IgUxYf8PGJkplPgnprKm67S/ddueVAtoSH6wfl9olobXEz8ZBTtNImmhP3EzloD++YQ7Bz+3flk9zJjzicjy+93nuL2+/LVIbf9Y2DyF0O5mIkcZrh7GvgUaU1fr3KedKtR/AcH+tWlmXg9wBXtDeO7IDyNCjl9Wy149ya5z/YIE26ygYWGdAS7Bq6i8b095xMq238KsB2O7O3uaRPEQCnEeV5QNYnJqsqvzxU4FmTeezre2CuxNh/TONyhwyi2806+OoWaqf2D9s5KOFNocg12EassK/0eMjrnf+G6oZhaYICbnVS66/9snN2u3gtkvAj9LLArg4n5B1fgFU344z",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},I=void 0,U={},P=[];function j(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Get ProcurementUnit for a RealmId"}),"\n",(0,a.jsx)(s(),{method:"get",path:"/api/procurementUnit/realmId/{realmId}",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:"API used to get all the ProcurementUnits for a specific RealmId. Will only return those ProcurementUnits that are marked active"}),"\n",(0,a.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(c(),{parameters:[{name:"realmId",in:"path",description:"RealmId that you want to the ProcurementUnit for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,a.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(p(),{id:void 0,label:void 0,responses:{200:{description:"Returns the ProcurementUnits list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the RealmId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of ProcurementUnit",content:{"text/json":{}}}}})]})}function y(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(j,{...e})}):j(e)}}}]);