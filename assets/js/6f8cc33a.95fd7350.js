"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[94162],{22787:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>y,default:()=>k,frontMatter:()=>g,metadata:()=>r,toc:()=>R});const r=JSON.parse('{"id":"api/get-realm-country-by-realm-id-for-active-programs","title":"Get RealmCountry list by specified reamId for active programs","description":"API used to get the RealmCountry list by specified reamId for active programs","source":"@site/docs/api/get-realm-country-by-realm-id-for-active-programs.api.mdx","sourceDirName":"api","slug":"/api/get-realm-country-by-realm-id-for-active-programs","permalink":"/fasp-documentation/docs/api/get-realm-country-by-realm-id-for-active-programs","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-realm-country-by-realm-id-for-active-programs","title":"Get RealmCountry list by specified reamId for active programs","description":"API used to get the RealmCountry list by specified reamId for active programs","sidebar_label":"Get RealmCountry list by specified reamId for active programs","hide_title":true,"hide_table_of_contents":true,"api":"eJytVE1z2jAQ/SsaXdrOUExJeuFUpwkJl3xBThkmI+wFqzWSIq2hHo//e1eyKU5Cm2SmJ0uW3r7d1XtbcRQrx0f33ILI1991odCWfN7jKbjESoNSKz7i8fWEFQ5ShpqtABlmwG47CJZLh2xRMmcgkUtJNyngepKypbZMJCg3wIzVKyvWjve4NmCFjz1JKTpF7AY7KcNuko61jQP0eo80ghaAYH3WFVe0oQi2AdC59OkagRl/XkMblHIXyEpdsK1QeKAKypiwFh4LaYHSQ1tAj7skg7Xgo4pjaTylVAgr8FcJsBbY/Doa8rqee7gzWjlwHjEcDPzneTpYWOUOt5KiJpoIFAZG+IXRD+dhVV3XPX48OPp7QMEuEM0UBRauP766PZmcnp5dMrkMVHcOLEs1OKY0skzQu4gkAedepTx+I+Xl1exhfHV3eeoplWbt21BfC5W+wvL1UKcmdN8qkTOwltQU3s9Y2FAQr0gqygJakBu6opfvbCaRkpwy3eowKIzEM+KRMDLquiJq9Ru1BUVVu6gJRF3d7DRZ2JzwGXXEjaJou932HwuSGtkiCZoXVEuJMnF9bVcvZEpaT4vEb1gTNFjoJp7RzY2wUizyoKogM6mWOhQlMfeivHlCxIRKWbxjYzOtcx+E8myohv0vw/7gRQZk9g/OO70RRugw8bNpSKftJnnaE7f+G8fTa4bkeDp9b/lkK+kRF9Ppg4/zcHHzbZW55LNx63CFniiXCZCbOoyxEeRI1uT/lHKpdX8hLPdva7TDtVAd4DkcMv3bR9eTXlV7Zf33GdnOmaBXkwsabHVbadVq9J6TRsOs6sxuqrmJsTsIY3G0W5JoMuqJB1fVQji4s3ld+9+PBRB8dD/f6yzIOZXOr8kgS5E7+EcHPt62Q/MTe9+wPVhq+1OoMig/L/yOlj+h7Ez8ek5XMxApKdNn25zGpFyDHdze9d42fxx/fjYjmfwGfeNwJQ==","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get Complete PlanningUnit list for a specific realmCountryId","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-country-all"},"next":{"title":"Get the RealmCountry list active programs","permalink":"/fasp-documentation/docs/api/get-realm-country-for-active-programs"}}');var o=a(74848),i=a(28453),s=a(57742),n=a.n(s),d=a(78178),l=a.n(d),p=a(19624),c=a.n(p),m=a(96226),u=a.n(m),f=(a(77675),a(19365),a(51107));const g={id:"get-realm-country-by-realm-id-for-active-programs",title:"Get RealmCountry list by specified reamId for active programs",description:"API used to get the RealmCountry list by specified reamId for active programs",sidebar_label:"Get RealmCountry list by specified reamId for active programs",hide_title:!0,hide_table_of_contents:!0,api:"eJytVE1z2jAQ/SsaXdrOUExJeuFUpwkJl3xBThkmI+wFqzWSIq2hHo//e1eyKU5Cm2SmJ0uW3r7d1XtbcRQrx0f33ILI1991odCWfN7jKbjESoNSKz7i8fWEFQ5ShpqtABlmwG47CJZLh2xRMmcgkUtJNyngepKypbZMJCg3wIzVKyvWjve4NmCFjz1JKTpF7AY7KcNuko61jQP0eo80ghaAYH3WFVe0oQi2AdC59OkagRl/XkMblHIXyEpdsK1QeKAKypiwFh4LaYHSQ1tAj7skg7Xgo4pjaTylVAgr8FcJsBbY/Doa8rqee7gzWjlwHjEcDPzneTpYWOUOt5KiJpoIFAZG+IXRD+dhVV3XPX48OPp7QMEuEM0UBRauP766PZmcnp5dMrkMVHcOLEs1OKY0skzQu4gkAedepTx+I+Xl1exhfHV3eeoplWbt21BfC5W+wvL1UKcmdN8qkTOwltQU3s9Y2FAQr0gqygJakBu6opfvbCaRkpwy3eowKIzEM+KRMDLquiJq9Ru1BUVVu6gJRF3d7DRZ2JzwGXXEjaJou932HwuSGtkiCZoXVEuJMnF9bVcvZEpaT4vEb1gTNFjoJp7RzY2wUizyoKogM6mWOhQlMfeivHlCxIRKWbxjYzOtcx+E8myohv0vw/7gRQZk9g/OO70RRugw8bNpSKftJnnaE7f+G8fTa4bkeDp9b/lkK+kRF9Ppg4/zcHHzbZW55LNx63CFniiXCZCbOoyxEeRI1uT/lHKpdX8hLPdva7TDtVAd4DkcMv3bR9eTXlV7Zf33GdnOmaBXkwsabHVbadVq9J6TRsOs6sxuqrmJsTsIY3G0W5JoMuqJB1fVQji4s3ld+9+PBRB8dD/f6yzIOZXOr8kgS5E7+EcHPt62Q/MTe9+wPVhq+1OoMig/L/yOlj+h7Ez8ek5XMxApKdNn25zGpFyDHdze9d42fxx/fjYjmfwGfeNwJQ==",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},y=void 0,b={},R=[];function h(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Get RealmCountry list by specified reamId for active programs"}),"\n",(0,o.jsx)(n(),{method:"get",path:"/api/realmCountry/program/realmId/{realmId}",context:"endpoint"}),"\n",(0,o.jsx)(t.p,{children:"API used to get the RealmCountry list by specified reamId for active programs"}),"\n",(0,o.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(l(),{parameters:[{name:"realmId",in:"path",description:"RealmId that you want RealmCountry list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,o.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,o.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Returns the RealmCountry list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if no realmId found",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of RealmCountry list",content:{"text/json":{}}}}})]})}function k(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);