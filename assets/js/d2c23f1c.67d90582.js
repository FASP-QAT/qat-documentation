"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[24229],{76974:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>P,contentTitle:()=>y,default:()=>x,frontMatter:()=>g,metadata:()=>i,toc:()=>f});const i=JSON.parse('{"id":"api/get-planning-unit-by-realm-country","title":"Get active PlanningUnit list for a realm country","description":"API used to get the list of active PlanningUnits for a realm country","source":"@site/docs/api/get-planning-unit-by-realm-country.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-by-realm-country","permalink":"/fasp-documentation/docs/api/get-planning-unit-by-realm-country","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-by-realm-country","title":"Get active PlanningUnit list for a realm country","description":"API used to get the list of active PlanningUnits for a realm country","sidebar_label":"Get active PlanningUnit list for a realm country","hide_title":true,"hide_table_of_contents":true,"api":"eJytlclu2zAQhl+F4KUt4Nquk158qrMbKLJ4OQVGMJHGFluZZMiRXUPQu3dIK4mcpWmKnizKs/wz/GZUSoKFl/1raXPQWunFVCuSs5ZM0SdOWVJGy74cXA5F4TEVZMQCSVCGIleehJkLSEitUFw2AngxN06AcAj5UiSm0OQ2siWNRQch5DDloByo6XSwGQXzwwdrCw6WSOiCwFJqPrCXaxhxmJZUQaAFyuRT1bumLBpIbEwh1qC3JTTTi++hHtbNYRzeFcohiyRXYEv6JMMlyH4paWODCKUJFxhM2WEJtH2115NVNQvu3hrt0QePXrcbfnaVjZAKp30U8UL/Ym85eGI4j6aYGH9R54cP3mVVVS253917PS6IMyI7JqDCt08uRgfDo6Pjc6HmMePUoxOpQS+0IZHBKohI0Ps3U+7/Zcrzi8nNycX0/Og+JTlI0B0Ct804xZlBp8I6s+Ar9sJbTNRcMV8PqvDX2y34+lJrh2zvNOQCnWMI46VbhysOEvhlLQ7JoVqxCdP7vrZzUiYyMzW+EVIGry87YFWnOUOdJnydchfFih35Dlb3aBcu5xgZ98/3O531et2+K5hRbkkSxwW4ng2pxLeNWzzD/NKZtEjCQWyDxum7GkzYcgVOwW0eUYxsKj03sTBFeSD5aidRvJbBfTYxMSYPQVjnNlWv/aXX7j5TwOvhgw+7YYtR7DLnF+Mop+4ocx4S12N8MhhfCkJY8r/vLZ9nUQWPs/H4JsS5Obv6tsh88tn6ZTTha8pVgjyCjYwDCzzGYqt/N+XcmPYtOBnu1xpPS9ANx1NeeK8N6SuLbqc95SNQ/2uR1mso0snU8Qqs6prKmshryUQGPpt7vbWzEvnYf7JNGZCM6w/uZXkLHqcur6rw+q5A9uhfzx6ZiuimyodnHog55B7/UPrHUb1VP4l/Xswv1l2/BL2JwOdFOPHjT9w8/15UM/bIEFLmMujfGg2YW0sN98e5D0PzMPOnxxOG5DeTmYRz","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get active PlanningUnit list for a TracerCategory and a Program","permalink":"/fasp-documentation/docs/api/get-planning-unit-by-tracer-category-and-program"},"next":{"title":"Get the list of PlanningUnits for a tracerCategoryId","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-tracer-category"}}');var a=e(74848),r=e(28453),o=e(57742),s=e.n(o),l=e(78178),c=e.n(l),u=e(19624),d=e.n(u),p=e(96226),h=e.n(p),m=(e(77675),e(19365),e(51107));const g={id:"get-planning-unit-by-realm-country",title:"Get active PlanningUnit list for a realm country",description:"API used to get the list of active PlanningUnits for a realm country",sidebar_label:"Get active PlanningUnit list for a realm country",hide_title:!0,hide_table_of_contents:!0,api:"eJytlclu2zAQhl+F4KUt4Nquk158qrMbKLJ4OQVGMJHGFluZZMiRXUPQu3dIK4mcpWmKnizKs/wz/GZUSoKFl/1raXPQWunFVCuSs5ZM0SdOWVJGy74cXA5F4TEVZMQCSVCGIleehJkLSEitUFw2AngxN06AcAj5UiSm0OQ2siWNRQch5DDloByo6XSwGQXzwwdrCw6WSOiCwFJqPrCXaxhxmJZUQaAFyuRT1bumLBpIbEwh1qC3JTTTi++hHtbNYRzeFcohiyRXYEv6JMMlyH4paWODCKUJFxhM2WEJtH2115NVNQvu3hrt0QePXrcbfnaVjZAKp30U8UL/Ym85eGI4j6aYGH9R54cP3mVVVS253917PS6IMyI7JqDCt08uRgfDo6Pjc6HmMePUoxOpQS+0IZHBKohI0Ps3U+7/Zcrzi8nNycX0/Og+JTlI0B0Ct804xZlBp8I6s+Ar9sJbTNRcMV8PqvDX2y34+lJrh2zvNOQCnWMI46VbhysOEvhlLQ7JoVqxCdP7vrZzUiYyMzW+EVIGry87YFWnOUOdJnydchfFih35Dlb3aBcu5xgZ98/3O531et2+K5hRbkkSxwW4ng2pxLeNWzzD/NKZtEjCQWyDxum7GkzYcgVOwW0eUYxsKj03sTBFeSD5aidRvJbBfTYxMSYPQVjnNlWv/aXX7j5TwOvhgw+7YYtR7DLnF+Mop+4ocx4S12N8MhhfCkJY8r/vLZ9nUQWPs/H4JsS5Obv6tsh88tn6ZTTha8pVgjyCjYwDCzzGYqt/N+XcmPYtOBnu1xpPS9ANx1NeeK8N6SuLbqc95SNQ/2uR1mso0snU8Qqs6prKmshryUQGPpt7vbWzEvnYf7JNGZCM6w/uZXkLHqcur6rw+q5A9uhfzx6ZiuimyodnHog55B7/UPrHUb1VP4l/Xswv1l2/BL2JwOdFOPHjT9w8/15UM/bIEFLmMujfGg2YW0sN98e5D0PzMPOnxxOG5DeTmYRz",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},y=void 0,P={},f=[];function U(t){const n={p:"p",...(0,r.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Get active PlanningUnit list for a realm country"}),"\n",(0,a.jsx)(s(),{method:"get",path:"/api/planningUnit/realmCountry/{realmCountryId}",context:"endpoint"}),"\n",(0,a.jsx)(n.p,{children:"API used to get the list of active PlanningUnits for a realm country"}),"\n",(0,a.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(c(),{parameters:[{name:"realmCountryId",in:"path",description:"realmCountryId that you want the PlanningUnit List for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,a.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"Returns the active PlanningUnit list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the tracerCategories and programs specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of PlanningUnit list",content:{"text/json":{}}}}})]})}function x(t={}){const{wrapper:n}={...(0,r.R)(),...t.components};return n?(0,a.jsx)(n,{...t,children:(0,a.jsx)(U,{...t})}):U(t)}}}]);