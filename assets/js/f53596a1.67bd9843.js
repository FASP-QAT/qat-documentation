"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[52955],{22288:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>M,frontMatter:()=>b,metadata:()=>a,toc:()=>v});const a=JSON.parse('{"id":"api/add-and-upadte-equivalency-unit","title":"Add or Update EquivalencyUnit","description":"API used to add or update EquivalencyUnit","source":"@site/docs/api/add-and-upadte-equivalency-unit.api.mdx","sourceDirName":"api","slug":"/api/add-and-upadte-equivalency-unit","permalink":"/fasp-documentation/docs/api/add-and-upadte-equivalency-unit","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"add-and-upadte-equivalency-unit","title":"Add or Update EquivalencyUnit","description":"API used to add or update EquivalencyUnit","sidebar_label":"Add or Update EquivalencyUnit","hide_title":true,"hide_table_of_contents":true,"api":"eJztWt9z2jgQ/lc0erm7GQKENteWpzMJnTCTSwiQe7hMhhG2wOrZkivJoQzD/367Ej9sSElyT9fUfUhjaVf77Wq1/rzRklo2M7R9T/nXXDyyhMtwcSeFpQ81GnETapFZoSRt06DfI7nhEbGKsCgiSpM8i5jlpLunWqMq45qhXi8CTZAOZHSXscjyQ1kNlrmxHRUtaHu5Z3QUc5IIY4ma7pshavKFh9YQGzNLFioncybtAbo66U3JnnO9iAhDZJ4kKNeEFbgksCIMgi64KL6noqxXYzKCBwm6Xs3bisCdUEnLpUVXWJYlInRxaHwx6M+SmjDmKcPf7CLjGByt2QL0hOWpKYx772Ai0xhNK7ibDTVHQ53F86KwWRrjv5UTgGzGNQhOlU6Z9UPvWnRVc8KSpbwgbqwWckZXMGuFTXCow4wI70AUVdZQLuDHoVbBBkbmxApYG5QSZuyfKhJT8f9woojndZ6w0IrHovxEqYQziXMHyfNCByCiSfp8UMRL10vYhCdVUr2NpHKb+WLYTnrM5ROwN5MmOzI51Ucms6cnJ8xw8LtKubeScoUNpaHQYZ4w/WtnM/gbLaNZixYxXrkChEGGqSdzRkRD//tRX4cizRJ+Dovc+PjCXAzF0sYB7N4VMIT//kqtqunPmNpVNa1Srqqmm2paVbe3lWpVdatS7oetblVqVKlRTo39ruFqtVr5zqHQHMJhdc7dgMmUND5UrWYT/yv3Ewfc5loawsgwD0NuDMFXKfb7bMzJtm1J5swQ4yWmeVJu61n+zW76eQ7H++a7Y5Yurc2Gltnc1D/fDDq9i4vuNVrElmWkXE8xZo+caDGLsZ3pGpiNdW/VxsKQbTIcR/H7C1Fc34zGwfl5tz8KOlfdjfNgjoHP2LPk22YngxBklk1gF45bPzse7YL13vWoO7gOrsbD7uCv7mDcHQxuBmsQmvvIqxQ2A58J11pp3+KNROQxJYma7+0XBC1USGrscaCANOU2VtiWzpRxB4zZGJ4aLBON/SZ4jcK5eOQaO+Rw+DQmcAyumHajMZ/P619zJi0cFt/kZZIlCytCU1caD0o5GH2tojx0aP2iBA4SuQ1GIPnItMAgG4fyoUYR8WDXGO9+Y+icQ1EqeZt60Cye9sJbtlSU4Ei03p80P5y0Po1Oz9pnp+3Wx3rzw+nf9KlC9NzSh6Xi2Pqb8oAn9cn+aLPQ/RT+ectI34LLW0bWLPKtXVXd0az9MWRX+2NZaaz0wvzxg7XafuHsXNx92BRM7HeA7qvUqVLnJanzUGXIz5whb84lyGchp8oRnjVlvi1RE/cH62DDT8gIuDnSDmA2npy06qetevOAswT93i+ekXqyjKQLGAsZOgKzZloABQ2vHfocDPvEcpbC7GsJE0+ZQI3L4XCM64wvb/+YxSY8yUzqRDBMIuRA8QsWg4yFgMvjL5ucKlWfMO2+JZDupUwWFf09gbvv3WIoxWK5Y5Wvugqx/hpyPDRLmHAfRA7lck097ylQT3pAivAGRqzca40ul5iydzpZrXAYeKGGnLp/2DFHfPJvxAg2Bt+E/3AQoece9MkIYaB4kiOcg6sJq9pGI3CUvyC7o9CYZ1v63L8ZInWdrO9tpL7qajbHOx3ws03dRRA04b7H3NgS0lzOcjZDWb8m/vsXJ62a2Q==","sidebar_class_name":"post api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get active EquivalencyUnit list","permalink":"/fasp-documentation/docs/api/get-equivalency-unit-list"},"next":{"title":"Get complete EquivalencyUnit list","permalink":"/fasp-documentation/docs/api/get-equivalency-unit-list-all"}}');var r=i(74848),n=i(28453),s=i(57742),o=i.n(s),p=i(78178),d=i.n(p),l=i(19624),c=i.n(l),y=i(96226),u=i.n(y),m=(i(77675),i(19365),i(51107));const b={id:"add-and-upadte-equivalency-unit",title:"Add or Update EquivalencyUnit",description:"API used to add or update EquivalencyUnit",sidebar_label:"Add or Update EquivalencyUnit",hide_title:!0,hide_table_of_contents:!0,api:"eJztWt9z2jgQ/lc0erm7GQKENteWpzMJnTCTSwiQe7hMhhG2wOrZkivJoQzD/367Ej9sSElyT9fUfUhjaVf77Wq1/rzRklo2M7R9T/nXXDyyhMtwcSeFpQ81GnETapFZoSRt06DfI7nhEbGKsCgiSpM8i5jlpLunWqMq45qhXi8CTZAOZHSXscjyQ1kNlrmxHRUtaHu5Z3QUc5IIY4ma7pshavKFh9YQGzNLFioncybtAbo66U3JnnO9iAhDZJ4kKNeEFbgksCIMgi64KL6noqxXYzKCBwm6Xs3bisCdUEnLpUVXWJYlInRxaHwx6M+SmjDmKcPf7CLjGByt2QL0hOWpKYx772Ai0xhNK7ibDTVHQ53F86KwWRrjv5UTgGzGNQhOlU6Z9UPvWnRVc8KSpbwgbqwWckZXMGuFTXCow4wI70AUVdZQLuDHoVbBBkbmxApYG5QSZuyfKhJT8f9woojndZ6w0IrHovxEqYQziXMHyfNCByCiSfp8UMRL10vYhCdVUr2NpHKb+WLYTnrM5ROwN5MmOzI51Ucms6cnJ8xw8LtKubeScoUNpaHQYZ4w/WtnM/gbLaNZixYxXrkChEGGqSdzRkRD//tRX4cizRJ+Dovc+PjCXAzF0sYB7N4VMIT//kqtqunPmNpVNa1Srqqmm2paVbe3lWpVdatS7oetblVqVKlRTo39ruFqtVr5zqHQHMJhdc7dgMmUND5UrWYT/yv3Ewfc5loawsgwD0NuDMFXKfb7bMzJtm1J5swQ4yWmeVJu61n+zW76eQ7H++a7Y5Yurc2Gltnc1D/fDDq9i4vuNVrElmWkXE8xZo+caDGLsZ3pGpiNdW/VxsKQbTIcR/H7C1Fc34zGwfl5tz8KOlfdjfNgjoHP2LPk22YngxBklk1gF45bPzse7YL13vWoO7gOrsbD7uCv7mDcHQxuBmsQmvvIqxQ2A58J11pp3+KNROQxJYma7+0XBC1USGrscaCANOU2VtiWzpRxB4zZGJ4aLBON/SZ4jcK5eOQaO+Rw+DQmcAyumHajMZ/P619zJi0cFt/kZZIlCytCU1caD0o5GH2tojx0aP2iBA4SuQ1GIPnItMAgG4fyoUYR8WDXGO9+Y+icQ1EqeZt60Cye9sJbtlSU4Ei03p80P5y0Po1Oz9pnp+3Wx3rzw+nf9KlC9NzSh6Xi2Pqb8oAn9cn+aLPQ/RT+ectI34LLW0bWLPKtXVXd0az9MWRX+2NZaaz0wvzxg7XafuHsXNx92BRM7HeA7qvUqVLnJanzUGXIz5whb84lyGchp8oRnjVlvi1RE/cH62DDT8gIuDnSDmA2npy06qetevOAswT93i+ekXqyjKQLGAsZOgKzZloABQ2vHfocDPvEcpbC7GsJE0+ZQI3L4XCM64wvb/+YxSY8yUzqRDBMIuRA8QsWg4yFgMvjL5ucKlWfMO2+JZDupUwWFf09gbvv3WIoxWK5Y5Wvugqx/hpyPDRLmHAfRA7lck097ylQT3pAivAGRqzca40ul5iydzpZrXAYeKGGnLp/2DFHfPJvxAg2Bt+E/3AQoece9MkIYaB4kiOcg6sJq9pGI3CUvyC7o9CYZ1v63L8ZInWdrO9tpL7qajbHOx3ws03dRRA04b7H3NgS0lzOcjZDWb8m/vsXJ62a2Q==",sidebar_class_name:"post api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},f=void 0,g={},v=[];function U(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Add or Update EquivalencyUnit"}),"\n",(0,r.jsx)(o(),{method:"post",path:"/api/equivalencyUnit",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"API used to add or update EquivalencyUnit"}),"\n",(0,r.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(d(),{parameters:void 0}),"\n",(0,r.jsx)(c(),{title:"Body",body:{description:"The list of EquivalencyUnit objects that you want to add or update. If equivalencyUnitId is null or 0 then it is added if equivalencyUnitId is not null and non 0 it is updated",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},equivalencyUnitId:{type:"integer",format:"int32"},realm:{type:"object",properties:{id:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},code:{type:"string"},idString:{type:"string"}},title:"SimpleCodeObject"},healthAreaList:{type:"array",items:{type:"object",properties:{id:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},code:{type:"string"},idString:{type:"string"}},title:"SimpleCodeObject"}},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"EquivalencyUnit"}}}},required:!0}}),"\n",(0,r.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Returns a Success code if the operation was successful",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if you do not have rights to add/update this object",content:{"text/json":{}}},406:{description:"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not acceptable",content:{"text/json":{}}},500:{description:"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete",content:{"text/json":{}}}}})]})}function M(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(U,{...e})}):U(e)}}}]);