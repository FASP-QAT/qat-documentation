"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[85424],{30010:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>b,default:()=>B,frontMatter:()=>u,metadata:()=>a,toc:()=>M});const a=JSON.parse('{"id":"api/add-and-upadte-equivalency-unit-mapping","title":"Add or Update EquivalencyUnitMapping","description":"API used to add or update EquivalencyUnitMapping","source":"@site/docs/api/add-and-upadte-equivalency-unit-mapping.api.mdx","sourceDirName":"api","slug":"/api/add-and-upadte-equivalency-unit-mapping","permalink":"/fasp-documentation/docs/api/add-and-upadte-equivalency-unit-mapping","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"add-and-upadte-equivalency-unit-mapping","title":"Add or Update EquivalencyUnitMapping","description":"API used to add or update EquivalencyUnitMapping","sidebar_label":"Add or Update EquivalencyUnitMapping","hide_title":true,"hide_table_of_contents":true,"api":"eJztXFtv6jgQ/itWXnZXokA5t12eNm05KlJPL0D3YauqMokhPpvYqe2UgxD/fWccLglQSvvUgvtAiT1jz4w/T9wv00w8Q4faa9557DHjTzRmIhjfCm5+0DTlYlghK+3efcULmQ4UTw2Xwmt6/nWbZJqFxEhCw5BIRbI0pIaR1sYhvYonU6YoqrdDGACUfBHepjQ07FkVBXYwbU5kOPaakxUTehEjMdeGyMEzkxLZ/8kCo4mJqCFjmZERFWbN5CppD1Y9no3QDgnXRGRxjOJ1GIgJwg02whDgPn9BU5pcm4oQLgQMkWvnM4fgYyCFYcKgf6AZ88DGqPZTo5MTTwcRSyh+M+OUYeCUomPQ44YlutCe+wodqcJIG85sb6AYTnQyflkU1lPh2izkOFg2ZAoEB1Il1ORNnxretGKFBU1YQVwbhcs2hV7DTYxNJ1Tz4BZEUWVmyhl8rGsV5sDIHBkOY4NSTLX5IUM+4O/DiaI9r/OEBoY/FeX7UsaMCux7DkM7+rG6XR0q9hEVOzsAEY2Tl4PCdx0vpn0WO1DtB6jsYu5stpV+YGKD2fNOnW7pHKgtnenmzj7VDPx2kNsXyBUW1Au4CrKYqt9P5o1/eGVrZqJFGy9sAsIgQ9dGzPCwm3/f6muXJ2nMTmGQqzy+0BdBsjSRD6t3AYfJtx+0XDY9RGi7bOog57LpPJu67LZfUHPZzUHuw2Y3Bw0HjTI0VlhiVAArWADWgk27MWfumH+I0HM3Qge5j5btFjfC15zml7xI5tKhw6ZLhw5y7wNy75j1gD5FA6ZOwZehVDssgcuahwhhlzUd5D5s1nzbITKQ4gli2JOtrKAosqRfjlwos35svRHSML0RnLAeQ0VdXYODusuuDnLvAXLv+kzq0ObQtpX+npdZT6cohKXWXDGIilEZsw06lULnEWvU6/irXIDdYSZTQhNKulkQMK0JwhhLok3EyKLcm4yoJjqXGGSxVyp5NuyXmdc6Wzs+1z9tm+ncmLRrqMl09ftV56R9dta6xBmxuDuUtt46ok+MKD6MsPDblnrXZqXpJuKaLDCx3YqvO1pxedV78E9PW9c9/+SiNXcepqPgM9Zzs0UhOIUQpIbiQWf77F+2R7swe/uy1+pc+hcP3Vbnn1bnodXpXHVmRiiWR14msBh4TZhSUuXF8CEPc5viWI5W1guCFkhMKGa7oWBpwkwksZw/ldruM2oiuKrRlNdWqldryaKsH7YJnArxHxBgLyrEcwQu6WatNhqNqo8ZFQb2Tl4ITwWNx4YHuioV6paDcq1kmAXW6nxQAvuK3Pg9kHyiimOwtbX2vuKh5Z3lfxS0flF00lpRyoDz9FAvbv5CTi7lKNgajc9H9W9Hjb96x1+aX46bjT+r9W/H/3qb8tJLQ69njm3jz7MF7thtNeT1jRXie+jzbJpF/TPPrxfn/H1weXHOrRdPscsby/LwutqGZ9bVtrTUVjozfPxgTRcnq6WLywNVYYrVGtA7Bx0HnV2gc+8QcsgI2UOXNhTEuFR48EDfeNfMHD4cPl5xylp/SuqQc/DI2YiU0mOj+uKh0DIQhWdBDkMHj6Gdss/e+Q1/e3AxkJaYmzG8NyXqzL50wp/zZ6QnJZKvyLzl5Fmjetyo1tc4Nf+6/VvOnOakLpKDN36PdC3BNmMEwRSceObQd797TQyDDVl5NaHHEspR47zbfcBxHs5v/h5GOjhKdWJFMEw8YEKzwox+SgOwK7e/POVAymqfKkt9Iy2ZUFFUzN/8cfvCy0pKIZksSdC3vPhkRuVb9jSNKbdsvrV5MiNM7zyacm+dpat4c9IUFjuSlprwJhOE8q2Kp1NsfswY3kzv7peMJ17lrEYIC4Zsxn8MRLzT3IujHhqE4nGGhq29dmRamWv4lrIuyC4pYMTfgv69vuoi5dqfvaglyTekoiNoxM+m5+ELYHAK+zzBtk0A/mKY0SHK5mPiz/+Kk6oo","sidebar_class_name":"post api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get active EquivalencyUnitMapping list","permalink":"/fasp-documentation/docs/api/get-equivalency-unit-mapping-list"},"next":{"title":"Get list of EquivalencyUnitMapping","permalink":"/fasp-documentation/docs/api/get-equivalency-unit-mapping-for-forecasting-unit"}}');var r=i(74848),s=i(28453),p=i(57742),n=i.n(p),o=i(78178),d=i.n(o),l=i(19624),y=i.n(l),c=i(96226),m=i.n(c),g=(i(77675),i(19365),i(51107));const u={id:"add-and-upadte-equivalency-unit-mapping",title:"Add or Update EquivalencyUnitMapping",description:"API used to add or update EquivalencyUnitMapping",sidebar_label:"Add or Update EquivalencyUnitMapping",hide_title:!0,hide_table_of_contents:!0,api:"eJztXFtv6jgQ/itWXnZXokA5t12eNm05KlJPL0D3YauqMokhPpvYqe2UgxD/fWccLglQSvvUgvtAiT1jz4w/T9wv00w8Q4faa9557DHjTzRmIhjfCm5+0DTlYlghK+3efcULmQ4UTw2Xwmt6/nWbZJqFxEhCw5BIRbI0pIaR1sYhvYonU6YoqrdDGACUfBHepjQ07FkVBXYwbU5kOPaakxUTehEjMdeGyMEzkxLZ/8kCo4mJqCFjmZERFWbN5CppD1Y9no3QDgnXRGRxjOJ1GIgJwg02whDgPn9BU5pcm4oQLgQMkWvnM4fgYyCFYcKgf6AZ88DGqPZTo5MTTwcRSyh+M+OUYeCUomPQ44YlutCe+wodqcJIG85sb6AYTnQyflkU1lPh2izkOFg2ZAoEB1Il1ORNnxretGKFBU1YQVwbhcs2hV7DTYxNJ1Tz4BZEUWVmyhl8rGsV5sDIHBkOY4NSTLX5IUM+4O/DiaI9r/OEBoY/FeX7UsaMCux7DkM7+rG6XR0q9hEVOzsAEY2Tl4PCdx0vpn0WO1DtB6jsYu5stpV+YGKD2fNOnW7pHKgtnenmzj7VDPx2kNsXyBUW1Au4CrKYqt9P5o1/eGVrZqJFGy9sAsIgQ9dGzPCwm3/f6muXJ2nMTmGQqzy+0BdBsjSRD6t3AYfJtx+0XDY9RGi7bOog57LpPJu67LZfUHPZzUHuw2Y3Bw0HjTI0VlhiVAArWADWgk27MWfumH+I0HM3Qge5j5btFjfC15zml7xI5tKhw6ZLhw5y7wNy75j1gD5FA6ZOwZehVDssgcuahwhhlzUd5D5s1nzbITKQ4gli2JOtrKAosqRfjlwos35svRHSML0RnLAeQ0VdXYODusuuDnLvAXLv+kzq0ObQtpX+npdZT6cohKXWXDGIilEZsw06lULnEWvU6/irXIDdYSZTQhNKulkQMK0JwhhLok3EyKLcm4yoJjqXGGSxVyp5NuyXmdc6Wzs+1z9tm+ncmLRrqMl09ftV56R9dta6xBmxuDuUtt46ok+MKD6MsPDblnrXZqXpJuKaLDCx3YqvO1pxedV78E9PW9c9/+SiNXcepqPgM9Zzs0UhOIUQpIbiQWf77F+2R7swe/uy1+pc+hcP3Vbnn1bnodXpXHVmRiiWR14msBh4TZhSUuXF8CEPc5viWI5W1guCFkhMKGa7oWBpwkwksZw/ldruM2oiuKrRlNdWqldryaKsH7YJnArxHxBgLyrEcwQu6WatNhqNqo8ZFQb2Tl4ITwWNx4YHuioV6paDcq1kmAXW6nxQAvuK3Pg9kHyiimOwtbX2vuKh5Z3lfxS0flF00lpRyoDz9FAvbv5CTi7lKNgajc9H9W9Hjb96x1+aX46bjT+r9W/H/3qb8tJLQ69njm3jz7MF7thtNeT1jRXie+jzbJpF/TPPrxfn/H1weXHOrRdPscsby/LwutqGZ9bVtrTUVjozfPxgTRcnq6WLywNVYYrVGtA7Bx0HnV2gc+8QcsgI2UOXNhTEuFR48EDfeNfMHD4cPl5xylp/SuqQc/DI2YiU0mOj+uKh0DIQhWdBDkMHj6Gdss/e+Q1/e3AxkJaYmzG8NyXqzL50wp/zZ6QnJZKvyLzl5Fmjetyo1tc4Nf+6/VvOnOakLpKDN36PdC3BNmMEwRSceObQd797TQyDDVl5NaHHEspR47zbfcBxHs5v/h5GOjhKdWJFMEw8YEKzwox+SgOwK7e/POVAymqfKkt9Iy2ZUFFUzN/8cfvCy0pKIZksSdC3vPhkRuVb9jSNKbdsvrV5MiNM7zyacm+dpat4c9IUFjuSlprwJhOE8q2Kp1NsfswY3kzv7peMJ17lrEYIC4Zsxn8MRLzT3IujHhqE4nGGhq29dmRamWv4lrIuyC4pYMTfgv69vuoi5dqfvaglyTekoiNoxM+m5+ELYHAK+zzBtk0A/mKY0SHK5mPiz/+Kk6oo",sidebar_class_name:"post api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},b=void 0,f={},M=[];function j(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"Add or Update EquivalencyUnitMapping"}),"\n",(0,r.jsx)(n(),{method:"post",path:"/api/equivalencyUnit/mapping",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"API used to add or update EquivalencyUnitMapping"}),"\n",(0,r.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(d(),{parameters:void 0}),"\n",(0,r.jsx)(y(),{title:"Body",body:{description:"The list of EquivalencyUnitMapping objects that you want to add or update. If equivalencyUnitMappingId is null or 0 then it is added if equivalencyUnitMappingId is not null and non 0 it is updated",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},equivalencyUnitMappingId:{type:"integer",format:"int32"},equivalencyUnit:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},equivalencyUnitId:{type:"integer",format:"int32"},realm:{type:"object",properties:{id:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},code:{type:"string"},idString:{type:"string"}},title:"SimpleCodeObject"},healthAreaList:{type:"array",items:{type:"object",properties:{id:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},code:{type:"string"},idString:{type:"string"}},title:"SimpleCodeObject"}},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"EquivalencyUnit"},forecastingUnit:{type:"object",properties:{id:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},idString:{type:"string"}},title:"SimpleObject"},unit:{type:"object",properties:{id:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},code:{type:"string"},idString:{type:"string"}},title:"SimpleCodeObject"},tracerCategory:{type:"object",properties:{id:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},idString:{type:"string"}},title:"SimpleObject"},convertToEu:{type:"number",format:"double"},notes:{type:"string"},program:{type:"object",properties:{id:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},code:{type:"string"},idString:{type:"string"}},title:"SimpleCodeObject"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"EquivalencyUnitMapping"}}}},required:!0}}),"\n",(0,r.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Returns a Success code if the operation was successful",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if you do not have rights to add/update this object",content:{"text/json":{}}},406:{description:"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not acceptable",content:{"text/json":{}}},500:{description:"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete",content:{"text/json":{}}}}})]})}function B(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}}}]);