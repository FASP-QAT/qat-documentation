"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[24955],{44690:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>b,contentTitle:()=>y,default:()=>C,frontMatter:()=>g,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"api/get-organisation-by-realm-country","title":"Get Organisation list for RealmCountry","description":"API used to get the complete Organisation list for a RealmCountry","source":"@site/docs/api/get-organisation-by-realm-country.api.mdx","sourceDirName":"api","slug":"/api/get-organisation-by-realm-country","permalink":"/fasp-documentation/docs/api/get-organisation-by-realm-country","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-organisation-by-realm-country","title":"Get Organisation list for RealmCountry","description":"API used to get the complete Organisation list for a RealmCountry","sidebar_label":"Get Organisation list for RealmCountry","hide_title":true,"hide_table_of_contents":true,"api":"eJytVU1vGjEQ/SuWL20lCoS0F04lgSRIVSBAThGKJrsD63bXdmwvBK32v2dsNsny0aaRegKbmffejN8MBXewtLx7x5VZghQWnFCSzxs8RhsZocOxy3vjIcstxswptkTHXIIsUplO0SEb1VJZKqxjC2UYsAlCmp2rXDqz4Q2uNJoQM4wJkVDqeWebvWgNBjJCN15dwSUdKMvUggimwYVXp8ElfF/yZCeUFINjG5WzNUjny/AlHFVOSAYfc2GQdDqTY4PbKMEMeLfgbqO9DiEdLtGHUkIGbnt12uFlOffpVitp0fqMTrvtP/bFudxIe1wEoUaKCKQLjPjkWr+sTyvKsmzwb+3TPwMCu3JOTx243DYvRpOzYb8/uGZiEahuLRoWK7RMKscSWCGDKEJr36M86fwj5XgyOB9d94ez4ej6/qI3/Dnov5DvPYjVGImFIE+9CsKn96v/fqydQ4o3ElKGxpD1wltrgysC8Z4lcoPOoFhRiFp8sONESkZMVOXa4E3yW5e3QItWfW5au/ZsFbvnklLpAVYvns5NSigJNc92W631et18zMmc1JQowAFVtHEisk0iOfD32Kg4j0IJW9AwdTe9GUWuwAh4SIMBgyOFXKhQmnCp9+/NDhEDGbPeCxubKZV6ENK5peo0TzrN9oECWgqfrB+lrYdCn4mfTYOcqqcQhZ5W83vRm46ZQ8jo14+WTxMofMbVdHrvce6vbn4sExt91TYLIfRQqYiQBq/G2NNAw8u2+ncpF0o1H8Bw/8JaWZeBrCVe0po7vtn2NtVOU4o3I/2XpVntm2BJnQKtu7Iqo6hseMfJhn691hd443BTdvduyBUJFe0BiuIBLN6atCz99WOOxN29m78ZKfg1JnT6TnOwgNTiXyr/PKkW6Jf9qf/QGj5afHUJchOMnub+RF9/4+bwD6KcU0aCEJMffQnboB75Vbta+tvE+2F5nfbLwYzM8Qwern3T","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get Organisation list for Realm","permalink":"/fasp-documentation/docs/api/get-organisation-by-realm-id"},"next":{"title":"Get Organisation by display name","permalink":"/fasp-documentation/docs/api/get-organisation-display-name"}}');var o=n(74848),i=n(28453),s=n(57742),r=n.n(s),l=n(78178),d=n.n(l),c=n(19624),u=n.n(c),p=n(96226),f=n.n(p),m=(n(77675),n(19365),n(51107));const g={id:"get-organisation-by-realm-country",title:"Get Organisation list for RealmCountry",description:"API used to get the complete Organisation list for a RealmCountry",sidebar_label:"Get Organisation list for RealmCountry",hide_title:!0,hide_table_of_contents:!0,api:"eJytVU1vGjEQ/SuWL20lCoS0F04lgSRIVSBAThGKJrsD63bXdmwvBK32v2dsNsny0aaRegKbmffejN8MBXewtLx7x5VZghQWnFCSzxs8RhsZocOxy3vjIcstxswptkTHXIIsUplO0SEb1VJZKqxjC2UYsAlCmp2rXDqz4Q2uNJoQM4wJkVDqeWebvWgNBjJCN15dwSUdKMvUggimwYVXp8ElfF/yZCeUFINjG5WzNUjny/AlHFVOSAYfc2GQdDqTY4PbKMEMeLfgbqO9DiEdLtGHUkIGbnt12uFlOffpVitp0fqMTrvtP/bFudxIe1wEoUaKCKQLjPjkWr+sTyvKsmzwb+3TPwMCu3JOTx243DYvRpOzYb8/uGZiEahuLRoWK7RMKscSWCGDKEJr36M86fwj5XgyOB9d94ez4ej6/qI3/Dnov5DvPYjVGImFIE+9CsKn96v/fqydQ4o3ElKGxpD1wltrgysC8Z4lcoPOoFhRiFp8sONESkZMVOXa4E3yW5e3QItWfW5au/ZsFbvnklLpAVYvns5NSigJNc92W631et18zMmc1JQowAFVtHEisk0iOfD32Kg4j0IJW9AwdTe9GUWuwAh4SIMBgyOFXKhQmnCp9+/NDhEDGbPeCxubKZV6ENK5peo0TzrN9oECWgqfrB+lrYdCn4mfTYOcqqcQhZ5W83vRm46ZQ8jo14+WTxMofMbVdHrvce6vbn4sExt91TYLIfRQqYiQBq/G2NNAw8u2+ncpF0o1H8Bw/8JaWZeBrCVe0po7vtn2NtVOU4o3I/2XpVntm2BJnQKtu7Iqo6hseMfJhn691hd443BTdvduyBUJFe0BiuIBLN6atCz99WOOxN29m78ZKfg1JnT6TnOwgNTiXyr/PKkW6Jf9qf/QGj5afHUJchOMnub+RF9/4+bwD6KcU0aCEJMffQnboB75Vbta+tvE+2F5nfbLwYzM8Qwern3T",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},y=void 0,b={},h=[];function O(t){const e={p:"p",...(0,i.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Get Organisation list for RealmCountry"}),"\n",(0,o.jsx)(r(),{method:"get",path:"/api/organisation/realmCountryId/{realmCountryId}",context:"endpoint"}),"\n",(0,o.jsx)(e.p,{children:"API used to get the complete Organisation list for a RealmCountry"}),"\n",(0,o.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(d(),{parameters:[{name:"realmCountryId",in:"path",description:"RealmCountryId that you want to the Organisation list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,o.jsx)(u(),{title:"Body",body:void 0}),"\n",(0,o.jsx)(f(),{id:void 0,label:void 0,responses:{200:{description:"Returns the Organisation list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},412:{description:"Returns a HttpStatus.PRECONDITION_FAILED if the RealmCountryId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of Organisation list",content:{"text/json":{}}}}})]})}function C(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(O,{...t})}):O(t)}}}]);