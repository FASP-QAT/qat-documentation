"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[85620],{39917:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>f,default:()=>g,frontMatter:()=>b,metadata:()=>i,toc:()=>M});const i=JSON.parse('{"id":"api/add-realm","title":"Add Realm","description":"API used to add a Realm","source":"@site/docs/api/add-realm.api.mdx","sourceDirName":"api","slug":"/api/add-realm","permalink":"/fasp-documentation/docs/api/add-realm","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"add-realm","title":"Add Realm","description":"API used to add a Realm","sidebar_label":"Add Realm","hide_title":true,"hide_table_of_contents":true,"api":"eJztWFtz4jYU/isav3Q7E8Chm90uTwVKm8zkQoDtQzM7zMEWoK0teSU5hGH833uObIMdGHJ5ajPJA4Gjo3PTuXzSxrOwMF7nztMcotj7duKF3ARaJFYo6XW87vCCpYaHzCoGYciAjRzjiacSroG4LkLkw7VyQfMfKTe2p8K119k8kjdZ8lwCU7PvPLDMLsGytUrZCqQttKCQQEnLpSUBkCSRCJyq1ndDUjaeCZY8Bvpm1wlHubk03JhoMswKbmg1QLcsD3vrp1nRS02ubPkEWrDgGhnnSsdgc9IvbS87ccwSYl5hN1YLufAyXLXCRkTqgRHBV2SlLYUpv+PH/q6KjhAZGlagbNwUgbFXKhRz8d9womrPyzyBwIr7Kv9MqYiDpDWXe882O4IZj96P/m0cvTvMlx39lMsDZpeLJjmyONdHFpPDizMwHP1+T7m3knKVA/UCoYM0Av2hVxJ/9urWFKxVGy9dAyr7Vh/XDyZOyOeQRjYfiwctiYW8UuZKyD8h1aEGET0zlsVGeHjxRnh45UYhb5NogqZrkAF/3a5+am/m8+eb+gqN79X6Xq31as3rL8uyHJkKzTEGVqfcEUyipMnj0/b9fbw64jbV0iDuHadBwI1hAWpgYo7AlbMtBkb0apjJOeZpVAewlj/YErk6Oz76n45pOrc2GVuwqWle30ym3X5/MJx0e5eDUi0GD1Ab4WJE5sIwqSxLpUDc/YTms+M+VjRfXE8Go+vu5XQ8GP01GE0Ho9HNqDBA89xfFWMI6DfjWiudY/lQhM4eiCK1ehQlhPeBipOI2+OGUvlzu1R0s0iUcbkMdom/WpCIluu7LSRi5t1zTfcXTG9NKbJED0yn1VqtVs0fKV4pMB3zuwNIiNZWBKapNKViPQZDrcI0cEbmQhmmKrvtTpDzHrSAWeSyJMvwikSGjna3nMEDkE97PaUsOL9aTpUBUat6TL/2x4b/udH+Mjk965yddtq/Nv3Pp397hyr9KdH7tXhMfll/VBUVNO5XsPZbcGyLNf0qktw1px2AfEwj3PiYltRotbnz/w9WVkc3Oz/roCaP6yEY4x8GKf5hCOIfABj7tBI++AfAgf8mj0DIuXLtsZhlt7WOxkCGrFu2NTbBoUndChti3tPazdN2099rdd3hxU/GvbTkA41aNDY6NnZ9r+jLaAkpLvz5ozseMsuBnnde2md57I7YOx+PpyRnen7722JpgkZiYsdCURIBxzFc0dhNIEC7cvvrKudKNWeg3ZCn4RCDrG4Mw+0TVc3vzW7eHHnVKgCIm0dJBMJhEKd/U4ygOw9HkFeUB/6nN7MlzShc2WwoCb/qKMuIjBNCY5bcfdvNEPqFEpccQow1za1/OLJ4/dy2xoT0E3uUkh17b1/ZSbmji6eX2ArvbobSjNrOz+HNmIbYrHiOi/OC1rAiH/Cz47nHPFLhYJCjbTBx5SKFBfHmMunvX3yoyaI=","sidebar_class_name":"post api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Update Realm","permalink":"/fasp-documentation/docs/api/update-realm"},"next":{"title":"Get Realm for a RealmId","permalink":"/fasp-documentation/docs/api/get-realm-by-id"}}');var r=a(74848),n=a(28453),o=a(57742),s=a.n(o),d=a(78178),p=a.n(d),l=a(19624),c=a.n(l),m=a(96226),u=a.n(m),y=(a(77675),a(19365),a(51107));const b={id:"add-realm",title:"Add Realm",description:"API used to add a Realm",sidebar_label:"Add Realm",hide_title:!0,hide_table_of_contents:!0,api:"eJztWFtz4jYU/isav3Q7E8Chm90uTwVKm8zkQoDtQzM7zMEWoK0teSU5hGH833uObIMdGHJ5ajPJA4Gjo3PTuXzSxrOwMF7nztMcotj7duKF3ARaJFYo6XW87vCCpYaHzCoGYciAjRzjiacSroG4LkLkw7VyQfMfKTe2p8K119k8kjdZ8lwCU7PvPLDMLsGytUrZCqQttKCQQEnLpSUBkCSRCJyq1ndDUjaeCZY8Bvpm1wlHubk03JhoMswKbmg1QLcsD3vrp1nRS02ubPkEWrDgGhnnSsdgc9IvbS87ccwSYl5hN1YLufAyXLXCRkTqgRHBV2SlLYUpv+PH/q6KjhAZGlagbNwUgbFXKhRz8d9womrPyzyBwIr7Kv9MqYiDpDWXe882O4IZj96P/m0cvTvMlx39lMsDZpeLJjmyONdHFpPDizMwHP1+T7m3knKVA/UCoYM0Av2hVxJ/9urWFKxVGy9dAyr7Vh/XDyZOyOeQRjYfiwctiYW8UuZKyD8h1aEGET0zlsVGeHjxRnh45UYhb5NogqZrkAF/3a5+am/m8+eb+gqN79X6Xq31as3rL8uyHJkKzTEGVqfcEUyipMnj0/b9fbw64jbV0iDuHadBwI1hAWpgYo7AlbMtBkb0apjJOeZpVAewlj/YErk6Oz76n45pOrc2GVuwqWle30ym3X5/MJx0e5eDUi0GD1Ab4WJE5sIwqSxLpUDc/YTms+M+VjRfXE8Go+vu5XQ8GP01GE0Ho9HNqDBA89xfFWMI6DfjWiudY/lQhM4eiCK1ehQlhPeBipOI2+OGUvlzu1R0s0iUcbkMdom/WpCIluu7LSRi5t1zTfcXTG9NKbJED0yn1VqtVs0fKV4pMB3zuwNIiNZWBKapNKViPQZDrcI0cEbmQhmmKrvtTpDzHrSAWeSyJMvwikSGjna3nMEDkE97PaUsOL9aTpUBUat6TL/2x4b/udH+Mjk965yddtq/Nv3Pp397hyr9KdH7tXhMfll/VBUVNO5XsPZbcGyLNf0qktw1px2AfEwj3PiYltRotbnz/w9WVkc3Oz/roCaP6yEY4x8GKf5hCOIfABj7tBI++AfAgf8mj0DIuXLtsZhlt7WOxkCGrFu2NTbBoUndChti3tPazdN2099rdd3hxU/GvbTkA41aNDY6NnZ9r+jLaAkpLvz5ozseMsuBnnde2md57I7YOx+PpyRnen7722JpgkZiYsdCURIBxzFc0dhNIEC7cvvrKudKNWeg3ZCn4RCDrG4Mw+0TVc3vzW7eHHnVKgCIm0dJBMJhEKd/U4ygOw9HkFeUB/6nN7MlzShc2WwoCb/qKMuIjBNCY5bcfdvNEPqFEpccQow1za1/OLJ4/dy2xoT0E3uUkh17b1/ZSbmji6eX2ArvbobSjNrOz+HNmIbYrHiOi/OC1rAiH/Cz47nHPFLhYJCjbTBx5SKFBfHmMunvX3yoyaI=",sidebar_class_name:"post api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},f=void 0,h={},M=[];function j(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"Add Realm"}),"\n",(0,r.jsx)(s(),{method:"post",path:"/api/realm/",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"API used to add a Realm"}),"\n",(0,r.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(p(),{parameters:void 0}),"\n",(0,r.jsx)(c(),{title:"Body",body:{description:"The Realm object that you want to add",content:{"application/json":{schema:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},realmId:{type:"integer",format:"int32"},label:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},labelId:{type:"integer",format:"int32"},label_en:{type:"string"},label_sp:{type:"string"},label_fr:{type:"string"},label_pr:{type:"string"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Label"},realmCode:{type:"string"},defaultRealm:{type:"boolean"},minMosMinGaurdrail:{type:"integer",format:"int32"},minMosMaxGaurdrail:{type:"integer",format:"int32"},maxMosMaxGaurdrail:{type:"integer",format:"int32"},minQplTolerance:{type:"integer",format:"int32"},minQplToleranceCutOff:{type:"integer",format:"int32"},maxQplTolerance:{type:"integer",format:"int32"},baseModel:{type:"object",properties:{createdBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},createdDate:{type:"string",format:"date-time"},lastModifiedBy:{type:"object",properties:{userId:{type:"integer",format:"int32"},username:{type:"string"}},title:"BasicUser"},lastModifiedDate:{type:"string",format:"date-time"},active:{type:"boolean"},baseModel:"circular(BaseModel)"},title:"BaseModel"}},title:"Realm"}}},required:!0}}),"\n",(0,r.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Returns a Success code if the operation was successful",content:{"text/json":{}}},406:{description:"Returns a HttpStatus.NOT_ACCEPTABLE if the data supplied is not unique",content:{"text/json":{}}},500:{description:"Returns a HttpStatus.INTERNAL_SERVER_ERROR if there was some other error that did not allow the operation to complete",content:{"text/json":{}}}}})]})}function g(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}}}]);