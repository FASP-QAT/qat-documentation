"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[76419],{37564:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>x,contentTitle:()=>h,default:()=>g,frontMatter:()=>b,metadata:()=>i,toc:()=>P});const i=JSON.parse('{"id":"api/get-problme-by-realm-id","title":"Get active Problem list for a realm country","description":"API used to get the list of active problem list for a realm","source":"@site/docs/api/get-problme-by-realm-id.api.mdx","sourceDirName":"api","slug":"/api/get-problme-by-realm-id","permalink":"/fasp-documentation/docs/api/get-problme-by-realm-id","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-problme-by-realm-id","title":"Get active Problem list for a realm country","description":"API used to get the list of active problem list for a realm","sidebar_label":"Get active Problem list for a realm country","hide_title":true,"hide_table_of_contents":true,"api":"eJyllE1z2jAQhv+KRpe2MxQoSS+cSiZfXBIC5JRhMht7wWptS5FkKOPxf++uLBLy0SaZnrDFrt53189uLT2snBzeSGP1XY6FXHRkii6xynilSzmUo8lYVA5T4bVYoRc+Q5Er54VeCki8WqOIue3xUlsBwiLkhexIbdAC3zRO6S7Kn3BsgUfbKUfQaUcasFCgR8tGalnSC8Xah/8V2zDgM/ncW4whT+DFVldiA2Xr8LklSrV4XymL5MPbCjvSJRkWIIe19FvDiqr0uEIOpYQCfHt0MJBNs+B0Z3Tp0HHGoN/nn6dupugrW7qgHzsz2bNB9yaaJEofNPG37/10nFg3TdORh/2Dv18J4tx7M/PgK9c9vZwejY+PTy6EWgaxa4dWpBqdKLUXGaxZP0Hn3pQ8fKfkxeX89vTy+uJ4J7nrvDOYqKUiPB708ffbxX5/rX9jircl5AKtJYjCRzUW13QJ4xdUvUW1phCC7929JT3CK9ORwEAcwTSUPTCqF0npxYp6dXxoKI76ut5hWdmcUjLqiRv2epvNpntfEW1UfBIAB3K+9SpxXW1XL0gls2mV8ItoLw1zcjWaU+QarALy4ILdBQO/1KEO5XMG8+qJkIAyFaOdmphrnfMl5LOVGnS/Dbr9Fw5ojj85HuIWjdBP0hezYCc2kLBl4TiCp6PZRHgEHuSPlk+jpTjjfDa75Xtuz69+rDKXfDWuCCH0VXKVIE3UnuLIAE2laP0/lVxq3b0DK/lzGu18AeVe4hltpldmbn8biURXpbfb552pH9H5z2UX90jAz+RAe6uJVdQRuRtJyDGAcdt29tbccPdIBGRUIEfX9R04vLZ50/DxfYXkf3izeIQmsJkqx88E+BJyh/8o8PM0bsEv4kPL89XS4iGU20BxXvEbPf7C7d4CbxYUmiGkRBmbbf8dEYXG7+U9Di2PwMPAnp3M6ZP/AVuDSic=","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get the list of PlanningUnits for productCategoryId and programId","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-product-category-and-program"},"next":{"title":"Get active Problem Report list for a program and version","permalink":"/fasp-documentation/docs/api/get-problme-report"}}');var r=a(74848),n=a(28453),o=a(57742),l=a.n(o),s=a(78178),d=a.n(s),p=a(19624),c=a.n(p),m=a(96226),u=a.n(m),f=(a(77675),a(19365),a(51107));const b={id:"get-problme-by-realm-id",title:"Get active Problem list for a realm country",description:"API used to get the list of active problem list for a realm",sidebar_label:"Get active Problem list for a realm country",hide_title:!0,hide_table_of_contents:!0,api:"eJyllE1z2jAQhv+KRpe2MxQoSS+cSiZfXBIC5JRhMht7wWptS5FkKOPxf++uLBLy0SaZnrDFrt53189uLT2snBzeSGP1XY6FXHRkii6xynilSzmUo8lYVA5T4bVYoRc+Q5Er54VeCki8WqOIue3xUlsBwiLkhexIbdAC3zRO6S7Kn3BsgUfbKUfQaUcasFCgR8tGalnSC8Xah/8V2zDgM/ncW4whT+DFVldiA2Xr8LklSrV4XymL5MPbCjvSJRkWIIe19FvDiqr0uEIOpYQCfHt0MJBNs+B0Z3Tp0HHGoN/nn6dupugrW7qgHzsz2bNB9yaaJEofNPG37/10nFg3TdORh/2Dv18J4tx7M/PgK9c9vZwejY+PTy6EWgaxa4dWpBqdKLUXGaxZP0Hn3pQ8fKfkxeX89vTy+uJ4J7nrvDOYqKUiPB708ffbxX5/rX9jircl5AKtJYjCRzUW13QJ4xdUvUW1phCC7929JT3CK9ORwEAcwTSUPTCqF0npxYp6dXxoKI76ut5hWdmcUjLqiRv2epvNpntfEW1UfBIAB3K+9SpxXW1XL0gls2mV8ItoLw1zcjWaU+QarALy4ILdBQO/1KEO5XMG8+qJkIAyFaOdmphrnfMl5LOVGnS/Dbr9Fw5ojj85HuIWjdBP0hezYCc2kLBl4TiCp6PZRHgEHuSPlk+jpTjjfDa75Xtuz69+rDKXfDWuCCH0VXKVIE3UnuLIAE2laP0/lVxq3b0DK/lzGu18AeVe4hltpldmbn8biURXpbfb552pH9H5z2UX90jAz+RAe6uJVdQRuRtJyDGAcdt29tbccPdIBGRUIEfX9R04vLZ50/DxfYXkf3izeIQmsJkqx88E+BJyh/8o8PM0bsEv4kPL89XS4iGU20BxXvEbPf7C7d4CbxYUmiGkRBmbbf8dEYXG7+U9Di2PwMPAnp3M6ZP/AVuDSic=",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},h=void 0,x={},P=[];function v(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Get active Problem list for a realm country"}),"\n",(0,r.jsx)(l(),{method:"get",path:"/api/problem/realmId/{realmId}",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"API used to get the list of active problem list for a realm"}),"\n",(0,r.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(d(),{parameters:[{name:"realmId",in:"path",description:"realmId that you want the problem list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,r.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,r.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Returns the active Problem list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the realmId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of Problem list",content:{"text/json":{}}}}})]})}function g(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(v,{...e})}):v(e)}}}]);