"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[55704],{88774:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>I,contentTitle:()=>h,default:()=>j,frontMatter:()=>y,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"api/get-planning-unit-for-country-all","title":"Get Complete PlanningUnit list for a specific realmCountryId","description":"API used to get the complete PlanningUnit list for a specific realmCountryId","source":"@site/docs/api/get-planning-unit-for-country-all.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-for-country-all","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-country-all","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-for-country-all","title":"Get Complete PlanningUnit list for a specific realmCountryId","description":"API used to get the complete PlanningUnit list for a specific realmCountryId","sidebar_label":"Get Complete PlanningUnit list for a specific realmCountryId","hide_title":true,"hide_table_of_contents":true,"api":"eJytVcFy2jAQ/RWNLm1nKKakvfhUmoSES0ICnDJMZmOvsVpbUiQZynj8710JpzEhbZpMT1hm9723q7frmjtYWR7fcINQlMeqks5s+bLHU7SJEdoJJXnMR9MJqyymzCm2QsdcjixRpS7QIZsWIKWQq4UUjhXCOpYpw4BZjYnIRMK62JOU97jSaMBD0ynmBNiFGCvTxo6KgoI1GCiJx3idNZd0oKQDTOF1anA5fyr+ei+UtINjW1WxDUj3vHiCMHhfCYOkz5kKe9wmOZbA45q7rfYChHS4Qh9KCSW43aujIW+apU+3WkmL1mcMBwP/81SVq4y0oZUHIgg1UUQgXWDEny76bn1a3TRNj38eHP0ZENi5c3rmwFW2P768/jY5OTm9YCILVAuLhqUKLZPKsRzWyCBJ0NoXKT//I+XF5fx2fLm4OPGUUj25fWpvJdMXyL4817AJxRsJBUNjyF/hGrXBNYF4Y1JtBp1BsaYQlb2yp0RKHstV68dgO7JSzCPQIuqWENX7BTWR7jBFEDxLTV4/GLYyBeHk1CAbR9Fms+nfV+Q8PxlhBoBq2jqR2L4yqwPzTo1Kq8Qf2A40DNfVaE6RazAC7opgsuA6ITMVihOu8B692iNiIFM2emBjc6W8VK9zRzXsfxr2BwcKaPbfWT/4O5+EThM/mwU5bVchCV1th3M8mk2ZQyjp39eWT1MmfMb5bHbrcW7Pr76ucpt81LYMIXRVhUiQhqvDONJAA8p2+vcpM6X6d2C4v2OtrCtBdhLPaJsdv32T7bWqfjTY/96Y7dIJriW/0bJr2jrr1qk3nJwaFldnkfd4fADVtSsdvWHJOjl1xoPU9R1YXJiiafzr+woJJr5ZProtmDoV1j/TuGRQWPxLI95ft5v0A3vTIn628vYlyG0Yg6LyJ3r8gdvDb0OzpIwcISW3eu27oBG5WbtO+uNG8KP0exucnc7JOr8Aynp/uA==","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get PlanningUnit list for a specific realmCountryId","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-country"},"next":{"title":"Get RealmCountry list by specified reamId for active programs","permalink":"/fasp-documentation/docs/api/get-realm-country-by-realm-id-for-active-programs"}}');var a=e(74848),o=e(28453),r=e(57742),s=e.n(r),l=e(78178),c=e.n(l),p=e(19624),d=e.n(p),u=e(96226),f=e.n(u),m=(e(77675),e(19365),e(51107));const y={id:"get-planning-unit-for-country-all",title:"Get Complete PlanningUnit list for a specific realmCountryId",description:"API used to get the complete PlanningUnit list for a specific realmCountryId",sidebar_label:"Get Complete PlanningUnit list for a specific realmCountryId",hide_title:!0,hide_table_of_contents:!0,api:"eJytVcFy2jAQ/RWNLm1nKKakvfhUmoSES0ICnDJMZmOvsVpbUiQZynj8710JpzEhbZpMT1hm9723q7frmjtYWR7fcINQlMeqks5s+bLHU7SJEdoJJXnMR9MJqyymzCm2QsdcjixRpS7QIZsWIKWQq4UUjhXCOpYpw4BZjYnIRMK62JOU97jSaMBD0ynmBNiFGCvTxo6KgoI1GCiJx3idNZd0oKQDTOF1anA5fyr+ei+UtINjW1WxDUj3vHiCMHhfCYOkz5kKe9wmOZbA45q7rfYChHS4Qh9KCSW43aujIW+apU+3WkmL1mcMBwP/81SVq4y0oZUHIgg1UUQgXWDEny76bn1a3TRNj38eHP0ZENi5c3rmwFW2P768/jY5OTm9YCILVAuLhqUKLZPKsRzWyCBJ0NoXKT//I+XF5fx2fLm4OPGUUj25fWpvJdMXyL4817AJxRsJBUNjyF/hGrXBNYF4Y1JtBp1BsaYQlb2yp0RKHstV68dgO7JSzCPQIuqWENX7BTWR7jBFEDxLTV4/GLYyBeHk1CAbR9Fms+nfV+Q8PxlhBoBq2jqR2L4yqwPzTo1Kq8Qf2A40DNfVaE6RazAC7opgsuA6ITMVihOu8B692iNiIFM2emBjc6W8VK9zRzXsfxr2BwcKaPbfWT/4O5+EThM/mwU5bVchCV1th3M8mk2ZQyjp39eWT1MmfMb5bHbrcW7Pr76ucpt81LYMIXRVhUiQhqvDONJAA8p2+vcpM6X6d2C4v2OtrCtBdhLPaJsdv32T7bWqfjTY/96Y7dIJriW/0bJr2jrr1qk3nJwaFldnkfd4fADVtSsdvWHJOjl1xoPU9R1YXJiiafzr+woJJr5ZProtmDoV1j/TuGRQWPxLI95ft5v0A3vTIn628vYlyG0Yg6LyJ3r8gdvDb0OzpIwcISW3eu27oBG5WbtO+uNG8KP0exucnc7JOr8Aynp/uA==",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},h=void 0,I={},g=[];function C(t){const n={p:"p",...(0,o.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Get Complete PlanningUnit list for a specific realmCountryId"}),"\n",(0,a.jsx)(s(),{method:"get",path:"/api/realmCountry/{realmCountryId}/planningUnit/all",context:"endpoint"}),"\n",(0,a.jsx)(n.p,{children:"API used to get the complete PlanningUnit list for a specific realmCountryId"}),"\n",(0,a.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(c(),{parameters:[{name:"realmCountryId",in:"path",description:"RealmCountryId that you want PlanningUnit list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,a.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(f(),{id:void 0,label:void 0,responses:{200:{description:"Returns the PlanningUnit list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if no realmCountryId found",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of PlanningUnit list",content:{"text/json":{}}}}})]})}function j(t={}){const{wrapper:n}={...(0,o.R)(),...t.components};return n?(0,a.jsx)(n,{...t,children:(0,a.jsx)(C,{...t})}):C(t)}}}]);