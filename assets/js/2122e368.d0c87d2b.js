"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[72582],{71776:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>b,contentTitle:()=>m,default:()=>C,frontMatter:()=>U,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"api/get-planning-unit-for-tracer-category","title":"Get the list of PlanningUnits for a tracerCategoryId","description":"API used to get the list of PlanningUnits for a tracerCategoryId","source":"@site/docs/api/get-planning-unit-for-tracer-category.api.mdx","sourceDirName":"api","slug":"/api/get-planning-unit-for-tracer-category","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-tracer-category","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-planning-unit-for-tracer-category","title":"Get the list of PlanningUnits for a tracerCategoryId","description":"API used to get the list of PlanningUnits for a tracerCategoryId","sidebar_label":"Get the list of PlanningUnits for a tracerCategoryId","hide_title":true,"hide_table_of_contents":true,"api":"eJytVU1v2kAQ/SurvbSVKFCSXnwqbUKCVOULOEUomtgD3tbsOrtjCLL83zu7OIn5aJNWPeE1M++9mX0zLiXB3MnoVuYZaK30fKIVyWlLJuhiq3JSRstI9q+GonCYCDJijiQoRZEpR8LMxFUj04mZsQIEWYjRfgPCubHrYSJb0uRowcPxKZIM0swbGDveSuGEHCwskNB6faXUfODEA8jKK8yBUrkrezeYdQOJtSnECvSmiqYK8d2XxBUwkMWHQllkrWQLbEkXp7gAGZWS1rkXojSjog/lhAXQ5tVRT1bV1Ke73GiHzmf0ul3/s63tBqmw2gUREJNa7mjx7WXw2DCPpkCMj9T54Xx2WVVVSx53j36PC+KcKB8RUOHag8ubr8OTk9MLoWaBceLQisSgE9qQSGHpRcTo3KuUx2+kvLgc3w0uJxcnT5R7l+FyjNVMsaueheDj61V/PtTNIcdbDZlAa9mB4Z5zi0sG8a5leotkUS05ZMezr3eaSdmIqamNG7zJbotkB3LVaU7O9mG74k6524GKkfgelk8WL2zGoCn30EWdzmq1aj8U7FPuURwmB7jANanYtY2d75n9ypqkiP1BbEDDLF73xxy5BKvgPgt2DP5UemZCpYoy7+brLSIBOhH9JzYxNibzIKxzQ9Vrf+q1u3sKeEu8c35FbKwU2s78YhTk1C1mr3viepwH/dGVIIQF//u35fM8Kp9xPhrdeZy78+sv89TFH3O3CCF8b5mKkcewwdjPgUdZbPRvU86Mad+Dlf7Cc+NoAbqRePZve2+rReWLy/7HTq1XUbArO48XYVXXVNYWvZVsUW/Y5nrfO9Lu7o32yNgzKbfEI5blPTic2Kyq/OuHAjknup2+2Cy4OVHOP/PQzCBz+IdOvL+pl+2H/SXx9o19sBn1S9DrMAVZ4U/8+BPXhz4m1ZRzUoSE7epr2IT12c45NQBe9oOfpefdcHY6Zu/8AlVxj2c=","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get active PlanningUnit list for a realm country","permalink":"/fasp-documentation/docs/api/get-planning-unit-by-realm-country"},"next":{"title":"Get the list of PlanningUnits for multiple tracerCategoryIds","permalink":"/fasp-documentation/docs/api/get-planning-unit-for-tracer-categorys"}}');var i=n(74848),r=n(28453),o=n(57742),s=n.n(o),c=n(78178),l=n.n(c),d=n(19624),u=n.n(d),g=n(96226),p=n.n(g),f=(n(77675),n(19365),n(51107));const U={id:"get-planning-unit-for-tracer-category",title:"Get the list of PlanningUnits for a tracerCategoryId",description:"API used to get the list of PlanningUnits for a tracerCategoryId",sidebar_label:"Get the list of PlanningUnits for a tracerCategoryId",hide_title:!0,hide_table_of_contents:!0,api:"eJytVU1v2kAQ/SurvbSVKFCSXnwqbUKCVOULOEUomtgD3tbsOrtjCLL83zu7OIn5aJNWPeE1M++9mX0zLiXB3MnoVuYZaK30fKIVyWlLJuhiq3JSRstI9q+GonCYCDJijiQoRZEpR8LMxFUj04mZsQIEWYjRfgPCubHrYSJb0uRowcPxKZIM0swbGDveSuGEHCwskNB6faXUfODEA8jKK8yBUrkrezeYdQOJtSnECvSmiqYK8d2XxBUwkMWHQllkrWQLbEkXp7gAGZWS1rkXojSjog/lhAXQ5tVRT1bV1Ke73GiHzmf0ul3/s63tBqmw2gUREJNa7mjx7WXw2DCPpkCMj9T54Xx2WVVVSx53j36PC+KcKB8RUOHag8ubr8OTk9MLoWaBceLQisSgE9qQSGHpRcTo3KuUx2+kvLgc3w0uJxcnT5R7l+FyjNVMsaueheDj61V/PtTNIcdbDZlAa9mB4Z5zi0sG8a5leotkUS05ZMezr3eaSdmIqamNG7zJbotkB3LVaU7O9mG74k6524GKkfgelk8WL2zGoCn30EWdzmq1aj8U7FPuURwmB7jANanYtY2d75n9ypqkiP1BbEDDLF73xxy5BKvgPgt2DP5UemZCpYoy7+brLSIBOhH9JzYxNibzIKxzQ9Vrf+q1u3sKeEu8c35FbKwU2s78YhTk1C1mr3viepwH/dGVIIQF//u35fM8Kp9xPhrdeZy78+sv89TFH3O3CCF8b5mKkcewwdjPgUdZbPRvU86Mad+Dlf7Cc+NoAbqRePZve2+rReWLy/7HTq1XUbArO48XYVXXVNYWvZVsUW/Y5nrfO9Lu7o32yNgzKbfEI5blPTic2Kyq/OuHAjknup2+2Cy4OVHOP/PQzCBz+IdOvL+pl+2H/SXx9o19sBn1S9DrMAVZ4U/8+BPXhz4m1ZRzUoSE7epr2IT12c45NQBe9oOfpefdcHY6Zu/8AlVxj2c=",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},m=void 0,b={},h=[];function y(t){const e={p:"p",...(0,r.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Get the list of PlanningUnits for a tracerCategoryId"}),"\n",(0,i.jsx)(s(),{method:"get",path:"/api/planningUnit/planningUnit/tracerCategory/{tracerCategoryId}",context:"endpoint"}),"\n",(0,i.jsx)(e.p,{children:"API used to get the list of PlanningUnits for a tracerCategoryId"}),"\n",(0,i.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(l(),{parameters:[{name:"tracerCategoryId",in:"path",description:"tracerCategoryId that you want the PlanningUnit List for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,i.jsx)(u(),{title:"Body",body:void 0}),"\n",(0,i.jsx)(p(),{id:void 0,label:void 0,responses:{200:{description:"Returns the active PlanningUnit list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the tracerCategoryId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of PlanningUnit list",content:{"text/json":{}}}}})]})}function C(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(y,{...t})}):y(t)}}}]);