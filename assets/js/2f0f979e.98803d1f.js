"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[62359],{75078:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>w,frontMatter:()=>b,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"api/get-problme-report","title":"Get active Problem Report list for a program and version","description":"API used to get the list of active problem report list for a programId and versionId","source":"@site/docs/api/get-problme-report.api.mdx","sourceDirName":"api","slug":"/api/get-problme-report","permalink":"/fasp-documentation/docs/api/get-problme-report","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-problme-report","title":"Get active Problem Report list for a program and version","description":"API used to get the list of active problem report list for a programId and versionId","sidebar_label":"Get active Problem Report list for a program and version","hide_title":true,"hide_table_of_contents":true,"api":"eJy9VU1z2jAQ/SsaXdrOUExJevGpdPLFJSFAThkmo9gLVmssRVpDGY//e1eyMSYJTcNMe7Ik78fb1XurgqNYWB7ec23UYwpLPuvwGGxkpEapMh7ywWjIcgsxQ8UWgAwTYKm0yNSciQjlCljtywxoZbD6O1eGCfdnYcRyGDORxWwFxlLQYcw7XGkwAqtdyCnwyAVZwtjHIAMtyBGQXAhewTPakGETkCykg6cFJvw55l1aTASyjcrZWmQV9gNgKYaBp1waIDxocuhwGyWwFDwsOG60Sy4zhAU4U3JYCqyOTvq8LDsNwnaRhxE2Vv8N4cy5W60yC9Z59Hs999mHNQbMTWY9jPpyRy/RUPhIUaYMfWr4hcEP6/yLkjrBT3snhyMLdoWoJygwt92Lm/H34dnZ+TWTc5/zzoJhsQLLMoUsESsHIwJr30x5+pcpr2+mDxc3d9dn25QHKMqshkjOJRG/wQO/3i7+62ttHZK9yUTKwBjShb9ybWBFQZywCIUBNCBXZEKyem/LKS0pJVG1krx4iHMhD4SWQU2n7bcSWNCUHRTNsgya8oOiWZYUj65ltVViblIKnVBLbRgE6/W6+5QTdalXkRe0oEI3KCPbVWbxgvhUW5xHbsOqoH5S3A6mZLkSRgrCaH1ZM6efufL1SkwdvW/3EvkLG2yzsalSqQtS4SbrfvdLv9t7gYAG2gfrplnFLN9+ys8mHk7daCK/S1xr+mIwGTEEsaS/7y2fBCqdx9Vk8uDiPFzdflskNvqs7dKb0O2lMgLSZSvjQAvSNqvw76ecK9V9FMYNHa6VxaXIWo6XNKKfKXd8aCy3Gf+8TcWOb//qCahnliezTgUNy7KutagJfM+JwI7O9ePUrHavROs9CNubdqJwtyFSJdQzF7ooHoWFO5OWpTt+ysFs6Hy246GneyytW5O25iK18Ic2fRzX4/kTO+4BerUh9aHINl4hae52tPwJm7330D1BR2E97ik6AuvuFsoZGScgYtKb63H1f0B61Njy3I05NwyaEXd5PiXy/wYVtQmD","sidebar_class_name":"get api-method","info_path":"docs/api/quantification-and-analytics-tool","custom_edit_url":null},"sidebar":"api-latest","previous":{"title":"Get active Problem list for a realm country","permalink":"/fasp-documentation/docs/api/get-problme-by-realm-id"},"next":{"title":"Get Problem Status list","permalink":"/fasp-documentation/docs/api/get-problem-status-list"}}');var a=r(74848),s=r(28453),i=r(57742),n=r.n(i),d=r(78178),p=r.n(d),l=r(19624),c=r.n(l),m=r(96226),y=r.n(m),h=(r(77675),r(19365),r(51107));const b={id:"get-problme-report",title:"Get active Problem Report list for a program and version",description:"API used to get the list of active problem report list for a programId and versionId",sidebar_label:"Get active Problem Report list for a program and version",hide_title:!0,hide_table_of_contents:!0,api:"eJy9VU1z2jAQ/SsaXdrOUExJevGpdPLFJSFAThkmo9gLVmssRVpDGY//e1eyMSYJTcNMe7Ik78fb1XurgqNYWB7ec23UYwpLPuvwGGxkpEapMh7ywWjIcgsxQ8UWgAwTYKm0yNSciQjlCljtywxoZbD6O1eGCfdnYcRyGDORxWwFxlLQYcw7XGkwAqtdyCnwyAVZwtjHIAMtyBGQXAhewTPakGETkCykg6cFJvw55l1aTASyjcrZWmQV9gNgKYaBp1waIDxocuhwGyWwFDwsOG60Sy4zhAU4U3JYCqyOTvq8LDsNwnaRhxE2Vv8N4cy5W60yC9Z59Hs999mHNQbMTWY9jPpyRy/RUPhIUaYMfWr4hcEP6/yLkjrBT3snhyMLdoWoJygwt92Lm/H34dnZ+TWTc5/zzoJhsQLLMoUsESsHIwJr30x5+pcpr2+mDxc3d9dn25QHKMqshkjOJRG/wQO/3i7+62ttHZK9yUTKwBjShb9ybWBFQZywCIUBNCBXZEKyem/LKS0pJVG1krx4iHMhD4SWQU2n7bcSWNCUHRTNsgya8oOiWZYUj65ltVViblIKnVBLbRgE6/W6+5QTdalXkRe0oEI3KCPbVWbxgvhUW5xHbsOqoH5S3A6mZLkSRgrCaH1ZM6efufL1SkwdvW/3EvkLG2yzsalSqQtS4SbrfvdLv9t7gYAG2gfrplnFLN9+ys8mHk7daCK/S1xr+mIwGTEEsaS/7y2fBCqdx9Vk8uDiPFzdflskNvqs7dKb0O2lMgLSZSvjQAvSNqvw76ecK9V9FMYNHa6VxaXIWo6XNKKfKXd8aCy3Gf+8TcWOb//qCahnliezTgUNy7KutagJfM+JwI7O9ePUrHavROs9CNubdqJwtyFSJdQzF7ooHoWFO5OWpTt+ysFs6Hy246GneyytW5O25iK18Ic2fRzX4/kTO+4BerUh9aHINl4hae52tPwJm7330D1BR2E97ik6AuvuFsoZGScgYtKb63H1f0B61Njy3I05NwyaEXd5PiXy/wYVtQmD",sidebar_class_name:"get api-method",info_path:"docs/api/quantification-and-analytics-tool",custom_edit_url:null},g=void 0,f={},u=[];function v(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Get active Problem Report list for a program and version"}),"\n",(0,a.jsx)(n(),{method:"get",path:"/api/problem/problemReport/programId/{programId}/versionId/{versionId}",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:"API used to get the list of active problem report list for a programId and versionId"}),"\n",(0,a.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(p(),{parameters:[{name:"programId",in:"path",description:"programId that you want the problem report list for",required:!0,schema:{type:"integer",format:"int32"}},{name:"versionId",in:"path",description:"versionId that you want the problem report list for",required:!0,schema:{type:"integer",format:"int32"}}]}),"\n",(0,a.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(y(),{id:void 0,label:void 0,responses:{200:{description:"Returns the active Problem report list",content:{"text/json":{}}},403:{description:"Returns a HttpStatus.FORBIDDEN if the User does not have access",content:{"text/json":{}}},404:{description:"Returns a HttpStatus.NOT_FOUND if the programId and versionId specified does not exist",content:{"text/json":{}}},500:{description:"Internal error that prevented the retreival of Problem report list",content:{"text/json":{}}}}})]})}function w(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(v,{...e})}):v(e)}}}]);